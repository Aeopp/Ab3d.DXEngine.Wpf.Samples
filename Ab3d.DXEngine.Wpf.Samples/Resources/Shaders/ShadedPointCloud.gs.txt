//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbGeometyBuffer
// {
//
//   float2 halfPixelSizePerViewport;   // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cbGeometyBuffer                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
gs_4_0
dcl_constantbuffer CB0[1], immediateIndexed
dcl_input_siv v[1][0].xyzw, position
dcl_input v[1][1].xyzw
dcl_temps 3
dcl_indexableTemp x0[8], 4
dcl_inputprimitive point 
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_maxout 4
//
// Initial variable locations:
//   m0 <- output; 
//   v[0][0].x <- points[0].posH.x; v[0][0].y <- points[0].posH.y; v[0][0].z <- points[0].posH.z; v[0][0].w <- points[0].posH.w; 
//   v[0][1].x <- points[0].color.x; v[0][1].y <- points[0].color.y; v[0][1].z <- points[0].color.z; v[0][1].w <- points[0].color.w; 
//   x0 <- v
//
#line 170 "D:\Wpf\my projects\Ab3d\Ab3d.DXEngine\Ab3d.DXEngine.Wpf.Samples\Resources\Shaders\ShadedPointCloudShader.hlsl"
mov r0.xyzw, v[0][1].xyzw  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 175
mov x0[1].xyzw, r0.xyzw

#line 176
mov x0[3].xyzw, r0.xyzw

#line 177
mov x0[5].xyzw, r0.xyzw

#line 178
mov x0[7].xyzw, r0.xyzw

#line 181
mov r0.xyzw, v[0][0].xyzw  // r0.x <- posH.x; r0.y <- posH.y; r0.z <- posH.z; r0.w <- posH.w

#line 182
div r1.xy, r0.xyxx, r0.wwww  // r1.x <- pScreen.x; r1.y <- pScreen.y

#line 184
mov r2.x, -cb0[0].x
mov r2.y, cb0[0].y
add r1.zw, r1.xxxy, r2.xxxy
mul r0.xy, r0.wwww, r1.zwzz
mov x0[0].xyzw, r0.xyzw

#line 185
add r0.xy, r1.xyxx, cb0[0].xyxx
mul r2.xy, r0.wwww, r0.xyxx
mov r2.zw, r0.zzzw
mov x0[2].xyzw, r2.xyzw

#line 187
mov r0.y, -cb0[0].y
mov r0.x, cb0[0].x
add r0.xy, r0.xyxx, r1.xyxx
mul r2.xy, r0.wwww, r0.xyxx
mov x0[4].xyzw, r2.xyzw

#line 188
mov r0.x, -cb0[0].x
mov r0.y, -cb0[0].y
add r0.xy, r0.xyxx, r1.xyxx
mul r2.xy, r0.wwww, r0.xyxx
mov x0[6].xyzw, r2.xyzw

#line 191
mov r0.xyzw, x0[0].xyzw
mov r1.xyzw, x0[1].xyzw
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
emit 

#line 192
mov r0.xyzw, x0[6].xyzw
mov r1.xyzw, x0[7].xyzw
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
emit 

#line 193
mov r0.xyzw, x0[2].xyzw
mov r1.xyzw, x0[3].xyzw
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
emit 

#line 194
mov r0.xyzw, x0[4].xyzw
mov r1.xyzw, x0[5].xyzw
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
emit 

#line 196
cut 

#line 197
ret 
// Approximately 48 instruction slots used


// 0000:  43425844  add9d78f  b579cbfa  b94e5328  DXBC......y.(SN.
// 0010:  2a142a36  00000001  0000a4e0  00000006  6*.*.___..__.___
// 0020:  00000038  00000110  00000164  000001b8  8___..__d.__..__
// 0030:  0000065c  000006d8  46454452  000000d0  \.__..__RDEF.___
// 0040:  00000001  0000004c  00000001  0000001c  .___L___.___.___
// 0050:  47530400  00000505  000000a8  0000003c  _.SG..__.___<___
// 0060:  00000000  00000000  00000000  00000000  ________________
// 0070:  00000000  00000001  00000000  65476263  ____._______cbGe
// 0080:  74656d6f  66754279  00726566  0000003c  ometyBuffer_<___
// 0090:  00000001  00000064  00000010  00000000  .___d___._______
// 00a0:  00000000  0000007c  00000000  00000008  ____|_______.___
// 00b0:  00000002  00000098  00000000  666c6168  .___._______half
// 00c0:  65786950  7a69536c  72655065  77656956  PixelSizePerView
// 00d0:  74726f70  ababab00  00030001  00020001  port_...._._._._
// 00e0:  00000000  00000000  7263694d  666f736f  ________Microsof
// 00f0:  52282074  4c482029  53204c53  65646168  t (R) HLSL Shade
// 0100:  6f432072  6c69706d  31207265  00312e30  r Compiler 10.1_
// 0110:  4e475349  0000004c  00000002  00000008  ISGNL___.___.___
// 0120:  00000038  00000000  00000001  00000003  8_______.___.___
// 0130:  00000000  00000f0f  00000044  00000000  ____..__D_______
// 0140:  00000000  00000003  00000001  00000f0f  ____.___.___..__
// 0150:  505f5653  5449534f  004e4f49  4f4c4f43  SV_POSITION_COLO
// 0160:  abab0052  4e47534f  0000004c  00000002  R_..OSGNL___.___
// 0170:  00000008  00000038  00000000  00000001  .___8_______.___
// 0180:  00000003  00000000  0000000f  00000044  ._______.___D___
// 0190:  00000000  00000000  00000003  00000001  ________.___.___
// 01a0:  0000000f  505f5653  5449534f  004e4f49  .___SV_POSITION_
// 01b0:  4f4c4f43  abab0052  52444853  0000049c  COLOR_..SHDR..__
// 01c0:  00020040  00000127  04000059  00208e46  @_._'.__Y__.F. _
// 01d0:  00000000  00000001  05000061  002010f2  ____.___a__... _
// 01e0:  00000001  00000000  00000001  0400005f  ._______.______.
// 01f0:  002010f2  00000001  00000001  02000068  .. _.___.___h__.
// 0200:  00000003  04000069  00000000  00000008  .___i__.____.___
// 0210:  00000004  0100085d  0100285c  04000067  .___]._.\(_.g__.
// 0220:  001020f2  00000000  00000001  03000065  . ._____.___e__.
// 0230:  001020f2  00000001  0200005e  00000004  . ._.___^__..___
// 0240:  06000036  001000f2  00000000  00201e46  6__.._._____F. _
// 0250:  00000000  00000001  06000036  002030f2  ____.___6__..0 _
// 0260:  00000000  00000001  00100e46  00000000  ____.___F.._____
// 0270:  06000036  002030f2  00000000  00000003  6__..0 _____.___
// 0280:  00100e46  00000000  06000036  002030f2  F.._____6__..0 _
// 0290:  00000000  00000005  00100e46  00000000  ____.___F.._____
// 02a0:  06000036  002030f2  00000000  00000007  6__..0 _____.___
// 02b0:  00100e46  00000000  06000036  001000f2  F.._____6__.._._
// 02c0:  00000000  00201e46  00000000  00000000  ____F. _________
// 02d0:  0700000e  00100032  00000001  00100046  .__.2_._.___F_._
// 02e0:  00000000  00100ff6  00000000  07000036  ____..._____6__.
// 02f0:  00100012  00000002  8020800a  00000041  ._._.___.. .A___
// 0300:  00000000  00000000  06000036  00100022  ________6__."_._
// 0310:  00000002  0020801a  00000000  00000000  .___.. _________
// 0320:  07000000  001000c2  00000001  00100406  ___.._._.___..._
// 0330:  00000001  00100406  00000002  07000038  .___..._.___8__.
// 0340:  00100032  00000000  00100ff6  00000000  2_._____..._____
// 0350:  00100ae6  00000001  06000036  002030f2  ..._.___6__..0 _
// 0360:  00000000  00000000  00100e46  00000000  ________F.._____
// 0370:  08000000  00100032  00000000  00100046  ___.2_._____F_._
// 0380:  00000001  00208046  00000000  00000000  .___F. _________
// 0390:  07000038  00100032  00000002  00100ff6  8__.2_._.___..._
// 03a0:  00000000  00100046  00000000  05000036  ____F_._____6__.
// 03b0:  001000c2  00000002  00100ea6  00000000  ._._.___..._____
// 03c0:  06000036  002030f2  00000000  00000002  6__..0 _____.___
// 03d0:  00100e46  00000002  07000036  00100022  F.._.___6__."_._
// 03e0:  00000000  8020801a  00000041  00000000  ____.. .A_______
// 03f0:  00000000  06000036  00100012  00000000  ____6__.._._____
// 0400:  0020800a  00000000  00000000  07000000  .. ____________.
// 0410:  00100032  00000000  00100046  00000000  2_._____F_._____
// 0420:  00100046  00000001  07000038  00100032  F_._.___8__.2_._
// 0430:  00000002  00100ff6  00000000  00100046  .___..._____F_._
// 0440:  00000000  06000036  002030f2  00000000  ____6__..0 _____
// 0450:  00000004  00100e46  00000002  07000036  .___F.._.___6__.
// 0460:  00100012  00000000  8020800a  00000041  ._._____.. .A___
// 0470:  00000000  00000000  07000036  00100022  ________6__."_._
// 0480:  00000000  8020801a  00000041  00000000  ____.. .A_______
// 0490:  00000000  07000000  00100032  00000000  _______.2_._____
// 04a0:  00100046  00000000  00100046  00000001  F_._____F_._.___
// 04b0:  07000038  00100032  00000002  00100ff6  8__.2_._.___..._
// 04c0:  00000000  00100046  00000000  06000036  ____F_._____6__.
// 04d0:  002030f2  00000000  00000006  00100e46  .0 _____.___F.._
// 04e0:  00000002  06000036  001000f2  00000000  .___6__.._._____
// 04f0:  00203e46  00000000  00000000  06000036  F> _________6__.
// 0500:  001000f2  00000001  00203e46  00000000  ._._.___F> _____
// 0510:  00000001  05000036  001020f2  00000000  .___6__.. ._____
// 0520:  00100e46  00000000  05000036  001020f2  F.._____6__.. ._
// 0530:  00000001  00100e46  00000001  01000013  .___F.._.___.__.
// 0540:  06000036  001000f2  00000000  00203e46  6__.._._____F> _
// 0550:  00000000  00000006  06000036  001000f2  ____.___6__.._._
// 0560:  00000001  00203e46  00000000  00000007  .___F> _____.___
// 0570:  05000036  001020f2  00000000  00100e46  6__.. ._____F.._
// 0580:  00000000  05000036  001020f2  00000001  ____6__.. ._.___
// 0590:  00100e46  00000001  01000013  06000036  F.._.___.__.6__.
// 05a0:  001000f2  00000000  00203e46  00000000  ._._____F> _____
// 05b0:  00000002  06000036  001000f2  00000001  .___6__.._._.___
// 05c0:  00203e46  00000000  00000003  05000036  F> _____.___6__.
// 05d0:  001020f2  00000000  00100e46  00000000  . ._____F.._____
// 05e0:  05000036  001020f2  00000001  00100e46  6__.. ._.___F.._
// 05f0:  00000001  01000013  06000036  001000f2  .___.__.6__.._._
// 0600:  00000000  00203e46  00000000  00000004  ____F> _____.___
// 0610:  06000036  001000f2  00000001  00203e46  6__.._._.___F> _
// 0620:  00000000  00000005  05000036  001020f2  ____.___6__.. ._
// 0630:  00000000  00100e46  00000000  05000036  ____F.._____6__.
// 0640:  001020f2  00000001  00100e46  00000001  . ._.___F.._.___
// 0650:  01000013  01000009  0100003e  54415453  .__..__.>__.STAT
// 0660:  00000074  00000030  00000003  00000000  t___0___._______
// 0670:  00000004  0000000d  00000000  00000000  .___.___________
// 0680:  00000001  00000000  00000000  00000008  .___________.___
// 0690:  00000010  00000001  00000004  00000000  .___.___._______
// 06a0:  00000000  00000000  00000000  00000000  ________________
// 06b0:  00000005  00000000  00000000  00000000  ._______________
// 06c0:  00000001  00000005  00000004  00000000  .___.___._______
// 06d0:  00000000  00000000  42445053  00009e00  ________SPDB_.__
// 06e0:  7263694d  666f736f  2f432074  202b2b43  Microsoft C/C++ 
// 06f0:  2046534d  30302e37  441a0a0d  00000053  MSF 7.00...DS___
// 0700:  00000200  00000002  0000004f  00000164  _.__.___O___d.__
// 0710:  00000000  0000004e  00000000  00000000  ____N___________
// 0720:  00000000  00000000  00000000  00000000  ________________
// 0730:  00000000  00000000  00000000  00000000  ________________
// 0740:  00000000  00000000  00000000  00000000  ________________
// 0750:  00000000  00000000  00000000  00000000  ________________
// 0760:  00000000  00000000  00000000  00000000  ________________
// 0770:  00000000  00000000  00000000  00000000  ________________
// 0780:  00000000  00000000  00000000  00000000  ________________
// 0790:  00000000  00000000  00000000  00000000  ________________
// 07a0:  00000000  00000000  00000000  00000000  ________________
// 07b0:  00000000  00000000  00000000  00000000  ________________
// 07c0:  00000000  00000000  00000000  00000000  ________________
// 07d0:  00000000  00000000  00000000  00000000  ________________
// 07e0:  00000000  00000000  00000000  00000000  ________________
// 07f0:  00000000  00000000  00000000  00000000  ________________
// 0800:  00000000  00000000  00000000  00000000  ________________
// 0810:  00000000  00000000  00000000  00000000  ________________
// 0820:  00000000  00000000  00000000  00000000  ________________
// 0830:  00000000  00000000  00000000  00000000  ________________
// 0840:  00000000  00000000  00000000  00000000  ________________
// 0850:  00000000  00000000  00000000  00000000  ________________
// 0860:  00000000  00000000  00000000  00000000  ________________
// 0870:  00000000  00000000  00000000  00000000  ________________
// 0880:  00000000  00000000  00000000  00000000  ________________
// 0890:  00000000  00000000  00000000  00000000  ________________
// 08a0:  00000000  00000000  00000000  00000000  ________________
// 08b0:  00000000  00000000  00000000  00000000  ________________
// 08c0:  00000000  00000000  00000000  00000000  ________________
// 08d0:  00000000  00000000  00000000  00000000  ________________
// 08e0:  ffffffc0  ffffffff  ffffffff  ffffffff  ................
// 08f0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0900:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0910:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0920:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0930:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0940:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0950:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0960:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0970:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0980:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0990:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 09a0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 09b0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 09c0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 09d0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 09e0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 09f0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a00:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a10:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a20:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a30:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a40:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a50:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a60:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a70:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a80:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0a90:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0aa0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0ab0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0ac0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0ad0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0ae0:  00000038  00000000  ffff8000  ffffffff  8________.......
// 0af0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b00:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b10:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b20:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b30:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b40:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b50:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b60:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b70:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b80:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0b90:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0ba0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0bb0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0bc0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0bd0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0be0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0bf0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c00:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c10:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c20:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c30:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c40:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c50:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c60:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c70:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c80:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0c90:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0ca0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0cb0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0cc0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0cd0:  ffffffff  ffffffff  ffffffff  ffffffff  ................
// 0ce0:  00000005  00000020  0000003c  00000000  .___ ___<_______
// 0cf0:  ffffffff  00000000  00000006  00000005  ....____.___.___
// 0d00:  00000000  00000000  00000000  00000000  ________________
// 0d10:  00000000  00000000  00000000  00000000  ________________
// 0d20:  00000000  00000000  00000000  00000000  ________________
// 0d30:  00000000  00000000  00000000  00000000  ________________
// 0d40:  00000000  00000000  00000000  00000000  ________________
// 0d50:  00000000  00000000  00000000  00000000  ________________
// 0d60:  00000000  00000000  00000000  00000000  ________________
// 0d70:  00000000  00000000  00000000  00000000  ________________
// 0d80:  00000000  00000000  00000000  00000000  ________________
// 0d90:  00000000  00000000  00000000  00000000  ________________
// 0da0:  00000000  00000000  00000000  00000000  ________________
// 0db0:  00000000  00000000  00000000  00000000  ________________
// 0dc0:  00000000  00000000  00000000  00000000  ________________
// 0dd0:  00000000  00000000  00000000  00000000  ________________
// 0de0:  00000000  00000000  00000000  00000000  ________________
// 0df0:  00000000  00000000  00000000  00000000  ________________
// 0e00:  00000000  00000000  00000000  00000000  ________________
// 0e10:  00000000  00000000  00000000  00000000  ________________
// 0e20:  00000000  00000000  00000000  00000000  ________________
// 0e30:  00000000  00000000  00000000  00000000  ________________
// 0e40:  00000000  00000000  00000000  00000000  ________________
// 0e50:  00000000  00000000  00000000  00000000  ________________
// 0e60:  00000000  00000000  00000000  00000000  ________________
// 0e70:  00000000  00000000  00000000  00000000  ________________
// 0e80:  00000000  00000000  00000000  00000000  ________________
// 0e90:  00000000  00000000  00000000  00000000  ________________
// 0ea0:  00000000  00000000  00000000  00000000  ________________
// 0eb0:  00000000  00000000  00000000  00000000  ________________
// 0ec0:  00000000  00000000  00000000  00000000  ________________
// 0ed0:  00000000  00000000  00000000  00000000  ________________
// 0ee0:  00000003  00000000  00000000  00000000  ._______________
// 0ef0:  00000000  00000000  00000000  00000000  ________________
// 0f00:  00000000  00000000  00000000  00000000  ________________
// 0f10:  00000000  00000000  00000000  00000000  ________________
// 0f20:  00000000  00000000  00000000  00000000  ________________
// 0f30:  00000000  00000000  00000000  00000000  ________________
// 0f40:  00000000  00000000  00000000  00000000  ________________
// 0f50:  00000000  00000000  00000000  00000000  ________________
// 0f60:  00000000  00000000  00000000  00000000  ________________
// 0f70:  00000000  00000000  00000000  00000000  ________________
// 0f80:  00000000  00000000  00000000  00000000  ________________
// 0f90:  00000000  00000000  00000000  00000000  ________________
// 0fa0:  00000000  00000000  00000000  00000000  ________________
// 0fb0:  00000000  00000000  00000000  00000000  ________________
// 0fc0:  00000000  00000000  00000000  00000000  ________________
// 0fd0:  00000000  00000000  00000000  00000000  ________________
// 0fe0:  00000000  00000000  00000000  00000000  ________________
// 0ff0:  00000000  00000000  00000000  00000000  ________________
// 1000:  00000000  00000000  00000000  00000000  ________________
// 1010:  00000000  00000000  00000000  00000000  ________________
// 1020:  00000000  00000000  00000000  00000000  ________________
// 1030:  00000000  00000000  00000000  00000000  ________________
// 1040:  00000000  00000000  00000000  00000000  ________________
// 1050:  00000000  00000000  00000000  00000000  ________________
// 1060:  00000000  00000000  00000000  00000000  ________________
// 1070:  00000000  00000000  00000000  00000000  ________________
// 1080:  00000000  00000000  00000000  00000000  ________________
// 1090:  00000000  00000000  00000000  00000000  ________________
// 10a0:  00000000  00000000  00000000  00000000  ________________
// 10b0:  00000000  00000000  00000000  00000000  ________________
// 10c0:  00000000  00000000  00000000  00000000  ________________
// 10d0:  00000000  00000000  00000000  00000000  ________________
// 10e0:  01312e94  5a9944c8  00000001  b72437ec  ..1..D.Z.___.7$.
// 10f0:  47098b7b  8fce2291  ec1f9bb4  00000000  {..G."......____
// 1100:  00000000  00000001  00000001  00000000  ____.___._______
// 1110:  00000000  00000000  013351dc  00000000  ________.Q3.____
// 1120:  00000000  00000000  00000000  00000000  ________________
// 1130:  00000000  00000000  00000000  00000000  ________________
// 1140:  00000000  00000000  00000000  00000000  ________________
// 1150:  00000000  00000000  00000000  00000000  ________________
// 1160:  00000000  00000000  00000000  00000000  ________________
// 1170:  00000000  00000000  00000000  00000000  ________________
// 1180:  00000000  00000000  00000000  00000000  ________________
// 1190:  00000000  00000000  00000000  00000000  ________________
// 11a0:  00000000  00000000  00000000  00000000  ________________
// 11b0:  00000000  00000000  00000000  00000000  ________________
// 11c0:  00000000  00000000  00000000  00000000  ________________
// 11d0:  00000000  00000000  00000000  00000000  ________________
// 11e0:  00000000  00000000  00000000  00000000  ________________
// 11f0:  00000000  00000000  00000000  00000000  ________________
// 1200:  00000000  00000000  00000000  00000000  ________________
// 1210:  00000000  00000000  00000000  00000000  ________________
// 1220:  00000000  00000000  00000000  00000000  ________________
// 1230:  00000000  00000000  00000000  00000000  ________________
// 1240:  00000000  00000000  00000000  00000000  ________________
// 1250:  00000000  00000000  00000000  00000000  ________________
// 1260:  00000000  00000000  00000000  00000000  ________________
// 1270:  00000000  00000000  00000000  00000000  ________________
// 1280:  00000000  00000000  00000000  00000000  ________________
// 1290:  00000000  00000000  00000000  00000000  ________________
// 12a0:  00000000  00000000  00000000  00000000  ________________
// 12b0:  00000000  00000000  00000000  00000000  ________________
// 12c0:  00000000  00000000  00000000  00000000  ________________
// 12d0:  00000000  00000000  00000000  00000000  ________________
// 12e0:  74202c29  206e6568  796c6e6f  6f726620  ), then only fro
// 12f0:  7320746e  20656469  7420666f  6e616972  nt side of trian
// 1300:  73656c67  20736920  756c6c69  616e696d  gles is illumina
// 1310:  20646574  63616228  6973206b  69206564  ted (back side i
// 1320:  6c622073  206b6361  6920726f  6d61206e  s black or in am
// 1330:  6e656962  696c2074  29746867  2f0a0d2e  bient light).../
// 1340:  6854202f  69207369  73752073  6c6c6175  / This is usuall
// 1350:  73752079  66206465  7320726f  646e6174  y used for stand
// 1360:  20647261  6d204433  6c65646f  68772073  ard 3D models wh
// 1370:  20657265  74736152  7a697265  74537265  ere RasterizerSt
// 1380:  20657461  73207369  74207465  7543206f  ate is set to Cu
// 1390:  6c436c6c  776b636f  29657369  2f2f0a0d  llClockwise)..//
// 13a0:  2f2f0a0d  544f4e20  68742045  54207461  ..// NOTE that T
// 13b0:  535f4f57  44454449  6e616320  20656220  WO_SIDED can be 
// 13c0:  6f736c61  74657320  65687720  6f63206e  also set when co
// 13d0:  6c69706d  20676e69  68746977  63786620  mpiling with fxc
// 13e0:  74697720  442f2068  4f575420  4449535f   with /D TWO_SID
// 13f0:  70204445  6d617261  72657465  2f0a0d2e  ED parameter.../
// 1400:  6854202f  77207369  69207961  73692074  / This way it is
// 1410:  736f7020  6c626973  6f742065  6d6f6320   possible to com
// 1420:  656c6970  6c756d20  6c706974  65762065  pile multiple ve
// 1430:  6f697372  6f20736e  68732066  72656461  rsions of shader
// 1440:  206e6920  61622061  69662074  0d2e656c   in a bat file..
// 1450:  6564230a  656e6966  4f575420  4449535f  .#define TWO_SID
// 1460:  203b4445  0a0d0a0d  2f2f0a0d  65685720  ED; ......// Whe
// 1470:  4550206e  4f505f52  5f544e49  4f4c4f43  n PER_POINT_COLO
// 1480:  73692052  66656420  64656e69  6874202c  R is defined, th
// 1490:  65206e65  20686361  6e696f70  61682074  en each point ha
// 14a0:  69206576  6f207374  63206e77  726f6c6f  ve its own color
// 14b0:  2f0a0d2e  6854202f  63207369  74736e6f  ...// This const
// 14c0:  20746e61  64207369  6e696665  69206465  ant is defined i
// 14d0:  7866206e  61632063  69206c6c  6f43206e  n fxc call in Co
// 14e0:  00005ac6  00012b93  0000d983  0002cbb3  .Z__.+._..__..._
// 14f0:  0000c2d2  0002e9b4  0000648d  00018550  ..__..._.d__P.._
// 1500:  00012668  0000dd86  00018375  00011449  h&._..__u.._I.._
// 1510:  0003bd99  00001000  00000000  00000000  ...__.__________
// 1520:  00000000  00000000  00000000  00000000  ________________
// 1530:  00000000  00000000  00000000  00000000  ________________
// 1540:  00000000  00000000  00000000  00000000  ________________
// 1550:  00000000  00000000  00000000  00000000  ________________
// 1560:  00000000  00000000  00000000  00000000  ________________
// 1570:  00000000  00000000  00000000  00000000  ________________
// 1580:  00000000  00000000  00000000  00000000  ________________
// 1590:  00000000  00000000  00000000  00000000  ________________
// 15a0:  00000000  00000000  00000000  00000000  ________________
// 15b0:  00000000  00000000  00000000  00000000  ________________
// 15c0:  00000000  00000000  00000000  00000000  ________________
// 15d0:  00000000  00000000  00000000  00000000  ________________
// 15e0:  00000000  00000000  00000000  00000000  ________________
// 15f0:  00000000  00000000  00000000  00000000  ________________
// 1600:  00000000  00000000  00000000  00000000  ________________
// 1610:  00000000  00000000  00000000  00000000  ________________
// 1620:  00000000  00000000  00000000  00000000  ________________
// 1630:  00000000  00000000  00000000  00000000  ________________
// 1640:  00000000  00000000  00000000  00000000  ________________
// 1650:  00000000  00000000  00000000  00000000  ________________
// 1660:  00000000  00000000  00000000  00000000  ________________
// 1670:  00000000  00000000  00000000  00000000  ________________
// 1680:  00000000  00000000  00000000  00000000  ________________
// 1690:  00000000  00000000  00000000  00000000  ________________
// 16a0:  00000000  00000000  00000000  00000000  ________________
// 16b0:  00000000  00000000  00000000  00000000  ________________
// 16c0:  00000000  00000000  00000000  00000000  ________________
// 16d0:  00000000  00000000  00000000  00000000  ________________
// 16e0:  57202f2f  206e6568  5f4f5754  45444953  // When TWO_SIDE
// 16f0:  73692044  66656420  64656e69  6874202c  D is defined, th
// 1700:  74206e65  6e616972  73656c67  65726120  en triangles are
// 1710:  6c6c6920  6e696d75  64657461  74697720   illuminated wit
// 1720:  68742068  61732065  6d20656d  72657461  h the same mater
// 1730:  206c6169  74206e6f  66206568  746e6f72  ial on the front
// 1740:  646e6120  63616220  6973206b  0d2e6564   and back side..
// 1750:  202f2f0a  73696854  736c6120  6572206f  .// This also re
// 1760:  72697571  74206465  20746168  20656874  quired that the 
// 1770:  74736152  7a697265  74537265  20657461  RasterizerState 
// 1780:  73207369  74207465  7543206f  6f4e6c6c  is set to CullNo
// 1790:  28206564  20656573  6c707041  74614d79  de (see ApplyMat
// 17a0:  61697265  6e69206c  61685320  50646564  erial in ShadedP
// 17b0:  746e696f  756f6c43  66664564  29746365  ointCloudEffect)
// 17c0:  2f0a0d2e  0a0d202f  57202f2f  206e6568  ...// ..// When 
// 17d0:  5f4f5754  45444953  73692044  746f6e20  TWO_SIDED is not
// 17e0:  66656420  64656e69  73692820  6d6f6320   defined (is com
// 17f0:  746e656d  2c296465  65687420  6e6f206e  mented), then on
// 1800:  6620796c  746e6f72  64697320  666f2065  ly front side of
// 1810:  69727420  6c676e61  69207365  6c692073   triangles is il
// 1820:  696d756c  6574616e  62282064  206b6361  luminated (back 
// 1830:  65646973  20736920  63616c62  726f206b  side is black or
// 1840:  206e6920  69626d61  20746e65  6867696c   in ambient ligh
// 1850:  0d2e2974  202f2f0a  73696854  20736920  t)...// This is 
// 1860:  61757375  20796c6c  64657375  726f6620  usually used for
// 1870:  61747320  7261646e  44332064  646f6d20   standard 3D mod
// 1880:  20736c65  72656877  61522065  72657473  els where Raster
// 1890:  72657a69  74617453  73692065  74657320  izerState is set
// 18a0:  206f7420  6c6c7543  636f6c43  7369776b   to CullClockwis
// 18b0:  0a0d2965  0a0d2f2f  4e202f2f  2045544f  e)..//..// NOTE 
// 18c0:  74616874  4f575420  4449535f  63204445  that TWO_SIDED c
// 18d0:  62206e61  6c612065  73206f73  77207465  an be also set w
// 18e0:  206e6568  706d6f63  6e696c69  69772067  hen compiling wi
// 18f0:  66206874  77206378  20687469  5420442f  th fxc with /D T
// 1900:  535f4f57  44454449  72617020  74656d61  WO_SIDED paramet
// 1910:  0d2e7265  202f2f0a  73696854  79617720  er...// This way
// 1920:  20746920  70207369  6973736f  20656c62   it is possible 
// 1930:  63206f74  69706d6f  6d20656c  69746c75  to compile multi
// 1940:  20656c70  73726576  736e6f69  20666f20  ple versions of 
// 1950:  64616873  69207265  2061206e  20746162  shader in a bat 
// 1960:  656c6966  230a0d2e  69666564  5420656e  file...#define T
// 1970:  535f4f57  44454449  0a0d203b  0a0d0a0d  WO_SIDED; ......
// 1980:  57202f2f  206e6568  5f524550  4e494f50  // When PER_POIN
// 1990:  4f435f54  20524f4c  64207369  6e696665  T_COLOR is defin
// 19a0:  202c6465  6e656874  63616520  6f702068  ed, then each po
// 19b0:  20746e69  65766168  73746920  6e776f20  int have its own
// 19c0:  6c6f6320  0d2e726f  202f2f0a  73696854   color...// This
// 19d0:  6e6f6320  6e617473  73692074  66656420   constant is def
// 19e0:  64656e69  206e6920  20637866  6c6c6163  ined in fxc call
// 19f0:  206e6920  706d6f43  53656c69  65646168   in CompileShade
// 1a00:  696f5064  6c43746e  5364756f  65646168  dPointCloudShade
// 1a10:  61622e72  2f0a0d74  6564232f  656e6966  r.bat..//#define
// 1a20:  52455020  494f505f  435f544e  524f4c4f   PER_POINT_COLOR
// 1a30:  0d0a0d3b  2f0a0d0a  6857202f  53206e65  ;......// When S
// 1a40:  55434550  5f52414c  4847494c  474e4954  PECULAR_LIGHTING
// 1a50:  20736920  69666564  2c64656e  65687420   is defined, the
// 1a60:  72657620  20786574  64616873  68207265   vertex shader h
// 1a70:  63207361  2065646f  63206f74  75636c61  as code to calcu
// 1a80:  6574616c  65707320  616c7563  696c2072  late specular li
// 1a90:  20746867  6f6c6f63  0a0d2e72  43202f2f  ght color...// C
// 1aa0:  656d6d6f  6e69746e  68742067  63207369  ommenting this c
// 1ab0:  74736e6f  20746e61  67696c73  20796c74  onstant sligtly 
// 1ac0:  72706d69  7365766f  65687420  72657020  improves the per
// 1ad0:  6d726f66  65636e61  20666f20  20656874  formance of the 
// 1ae0:  74726576  73207865  65646168  0a0d2e72  vertex shader...
// 1af0:  4e202f2f  2065746f  74616874  65687420  // Note that the
// 1b00:  61206572  61206572  77656620  65696620  re are a few fie
// 1b10:  2073646c  74206e69  63206568  72655662  lds in the cbVer
// 1b20:  42786574  65666675  68742072  61207461  texBuffer that a
// 1b30:  75206572  20646573  796c6e6f  726f6620  re used only for
// 1b40:  65707320  616c7563  6c6f6320  2820726f   specula color (
// 1b50:  726f5767  202c646c  65794567  57736f50  gWorld, gEyePosW
// 1b60:  5367202c  75636570  4372616c  726f6c6f  , gSpecularColor
// 1b70:  65776f50  0d2e2972  202f2f0a  79656854  Power)...// They
// 1b80:  65726120  746f6e20  6d657220  6465766f   are not removed
// 1b90:  65687720  5053206e  4c554345  4c5f5241   when SPECULAR_L
// 1ba0:  54484749  20474e49  63207369  656d6d6f  IGHTING is comme
// 1bb0:  6465746e  63656220  65737561  69687420  nted because thi
// 1bc0:  6f772073  20646c75  706d6f63  6163696c  s would complica
// 1bd0:  74206574  65206568  63656666  6f632074  te the effect co
// 1be0:  69206564  7363206e  65687720  77206572  de in cs where w
// 1bf0:  6f772065  20646c75  75716572  20657269  e would require 
// 1c00:  206f7774  73726576  736e6f69  20666f20  two versions of 
// 1c10:  736e6f63  746e6174  66756220  20726566  constant buffer 
// 1c20:  20646e61  73696874  656f6420  6f6e2073  and this does no
// 1c30:  61682074  61206576  7020796e  6f667265  t have any perfo
// 1c40:  6e616d72  65206563  63656666  0a0d2e74  rmance effect...
// 1c50:  42202f2f  69207475  6f792066  6f642075  // But if you do
// 1c60:  746f6e20  71657220  65726975  65687420   not require the
// 1c70:  65707320  616c7563  696c2072  20746867   specular light 
// 1c80:  636c6163  74616c75  736e6f69  6874202c  calculations, th
// 1c90:  74206e65  20736968  74726170  20666f20  en this part of 
// 1ca0:  20656874  65566263  78657472  66667542  the cbVertexBuff
// 1cb0:  61207265  6920646e  6874206e  68532065  er and in the Sh
// 1cc0:  64656461  6e696f50  6f6c4374  66456475  adedPointCloudEf
// 1cd0:  74636566  6e616320  20656220  6d6d6f63  fect can be comm
// 1ce0:  65746e65  0a0d2e64  66656423  20656e69  ented...#define 
// 1cf0:  43455053  52414c55  47494c5f  4e495448  SPECULAR_LIGHTIN
// 1d00:  0d0a0d47  202f2f0a  6e656857  66656420  G....// When def
// 1d10:  64656e69  65687420  696f7020  6320746e  ined the point c
// 1d20:  726f6c6f  20736920  69666564  2064656e  olor is defined 
// 1d30:  74207962  76206568  65756c61  20666f20  by the value of 
// 1d40:  6d726f6e  76206c61  6f746365  2f0a0d72  normal vector../
// 1d50:  6564232f  656e6966  4e455220  5f524544  /#define RENDER_
// 1d60:  4d524f4e  565f4c41  4f544345  53415f52  NORMAL_VECTOR_AS
// 1d70:  4c4f435f  0d3b524f  2f0a0d0a  2d2d2d2f  _COLOR;....//---
// 1d80:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 1d90:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 1da0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 1db0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 1dc0:  2d2d2d2d  2d2d2d2d  0a0d2d2d  43202f2f  ----------..// C
// 1dd0:  74736e6f  20746e61  66667562  0d737265  onstant buffers.
// 1de0:  2d2f2f0a  2d2d2d2d  2d2d2d2d  2d2d2d2d  .//-------------
// 1df0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 1e00:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 1e10:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 1e20:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 1e30:  0a0d0a0d  55202f2f  6c617573  7720796c  ....// Usually w
// 1e40:  72632065  65746165  63203220  74736e6f  e create 2 const
// 1e50:  20746e61  66667562  3a737265  72657020  ant buffers: per
// 1e60:  6d617246  6e612065  65702064  6a624f72  Frame and perObj
// 1e70:  2e746365  69685420  61772073  65772079  ect. This way we
// 1e80:  65656e20  6f742064  64707520  20657461   need to update 
// 1e90:  20656874  46726570  656d6172  6c6e6f20  the perFrame onl
// 1ea0:  6e6f2079  70206563  66207265  656d6172  y once per frame
// 1eb0:  2f0a0d2e  7542202f  73752074  6c6c6175  ...// But usuall
// 1ec0:  6f502079  43746e69  64756f6c  72612073  y PointClouds ar
// 1ed0:  6f6e2065  65722074  7265646e  6d206465  e not rendered m
// 1ee0:  20796e61  656d6974  6f732073  20657720  any times so we 
// 1ef0:  206e6163  6772656d  6c612065  6164206c  can merge all da
// 1f00:  69206174  206f746e  20656e6f  736e6f63  ta into one cons
// 1f10:  746e6174  66756220  2e726566  0a0d0a0d  tant buffer.....
// 1f20:  66756263  20726566  65566263  78657472  cbuffer cbVertex
// 1f30:  66667542  3a207265  67657220  65747369  Buffer : registe
// 1f40:  32622872  7b0a0d29  2f090a0d  6163202f  r(b2)..{...// ca
// 1f50:  6172656d  6f727020  74726570  3a736569  mera properties:
// 1f60:  72090a0d  6d5f776f  726f6a61  6f6c6620  ...row_major flo
// 1f70:  78347461  57672034  646c726f  57203a20  at4x4 gWorld : W
// 1f80:  444c524f  090a0d3b  5f776f72  6f6a616d  ORLD;...row_majo
// 1f90:  6c662072  3474616f  67203478  6c726f57  r float4x4 gWorl
// 1fa0:  65695664  6f725077  7463656a  206e6f69  dViewProjection 
// 1fb0:  203a2020  4c524f57  45495644  4f525057    : WORLDVIEWPRO
// 1fc0:  5443454a  3b4e4f49  72090a0d  6d5f776f  JECTION;...row_m
// 1fd0:  726f6a61  6f6c6620  78347461  57672034  ajor float4x4 gW
// 1fe0:  646c726f  65766e49  54657372  736e6172  orldInverseTrans
// 1ff0:  65736f70  57203a20  444c524f  45564e49  pose : WORLDINVE
// 2000:  54455352  534e4152  45534f50  0d0a0d3b  RSETRANSPOSE;...
// 2010:  6c66090a  3374616f  79456720  736f5065  ..float3 gEyePos
// 2020:  0a0d3b57  2f090a0d  6c67202f  6c61626f  W;.....// global
// 2030:  78697020  70206c65  65706f72  65697472   pixel propertie
// 2040:  0a0d3a73  6f6c6609  20347461  66694467  s:...float4 gDif
// 2050:  65737566  6f6c6f43  20202072  20202020  fuseColor       
// 2060:  4f43203a  3b524f4c  202f2f20  73696854  : COLOR; // This
// 2070:  6c6f6320  6920726f  756d2073  7069746c   color is multip
// 2080:  6465696c  74697720  68742068  6f632065  lied with the co
// 2090:  20726f6c  6520666f  20686361  65786970  lor of each pixe
// 20a0:  6564206c  656e6966  6e692064  5f535620  l defined in VS_
// 20b0:  55504e49  49203b54  6c612074  64206f73  INPUT; It also d
// 20c0:  6e696665  68742065  6c672065  6c61626f  efine the global
// 20d0:  706c6120  63206168  726f6c6f  6c617620   alpha color val
// 20e0:  66206575  6120726f  70206c6c  6c657869  ue for all pixel
// 20f0:  090a0d73  616f6c66  67203474  63657053  s...float4 gSpec
// 2100:  72616c75  6f6c6f43  776f5072  3a207265  ularColorPower :
// 2110:  4c4f4320  0d3b524f  090a0d0a  6c202f2f   COLOR;.....// l
// 2120:  74686769  6f727020  74726570  3a736569  ight properties:
// 2130:  66090a0d  74616f6c  41672033  6569626d  ...float3 gAmbie
// 2140:  6f43746e  20726f6c  4f43203a  3b524f4c  ntColor : COLOR;
// 2150:  66090a0d  74616f6c  4c672033  74686769  ...float3 gLight
// 2160:  65726944  6f697463  0a0d3b6e  6f6c6609  Direction;...flo
// 2170:  20337461  67694c67  6f437468  20726f6c  at3 gLightColor 
// 2180:  4f43203a  3b524f4c  3b7d0a0d  0a0d0a0d  : COLOR;..};....
// 2190:  66756263  20726566  65476263  74656d6f  cbuffer cbGeomet
// 21a0:  66754279  0d726566  0a0d7b0a  6f6c6609  yBuffer..{...flo
// 21b0:  20327461  666c6168  65786950  7a69536c  at2 halfPixelSiz
// 21c0:  72655065  77656956  74726f70  2f2f203b  ePerViewport; //
// 21d0:  68203d20  50666c61  6c657869  657a6953   = halfPixelSize
// 21e0:  56202f20  70776569  2074726f  6f6e2820   / Viewport  (no
// 21f0:  203a6574  656e696c  63696854  73656e6b  te: lineThicknes
// 2200:  73692073  6f6c6620  61207461  6e20646e  s is float and n
// 2210:  6620746f  74616f6c  0a0d2932  0a0d3b7d  ot float2)..};..
// 2220:  2f2f0a0d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ..//------------
// 2230:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2240:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2250:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2260:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2270:  2f0a0d2d  6853202f  72656461  706e4920  -..// Shader Inp
// 2280:  2f207475  74754f20  20747570  75727453  ut / Output Stru
// 2290:  72757463  0a0d7365  2d2d2f2f  2d2d2d2d  ctures..//------
// 22a0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 22b0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 22c0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 22d0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 22e0:  2d2d2d2d  0d2d2d2d  7274730a  20746375  -------..struct 
// 22f0:  495f5356  5455504e  0d7b0a0d  6c66090a  VS_INPUT..{...fl
// 2300:  3374616f  736f7020  2020204c  50203a20  oat3 posL    : P
// 2310:  5449534f  3b4e4f49  66090a0d  74616f6c  OSITION;...float
// 2320:  6f6e2033  6c616d72  203a204c  4d524f4e  3 normalL : NORM
// 2330:  0d3b4c41  230a0d0a  65646669  45502066  AL;....#ifdef PE
// 2340:  4f505f52  5f544e49  4f4c4f43  090a0d52  R_POINT_COLOR...
// 2350:  616f6c66  63203374  726f6c6f  3a202020  float3 color   :
// 2360:  4c4f4320  3b30524f  65230a0d  6669646e   COLOR0;..#endif
// 2370:  3b7d0a0d  0a0d0a0d  75727473  47207463  ..};....struct G
// 2380:  495f4f45  7b0a0d4e  66090a0d  74616f6c  EO_IN..{...float
// 2390:  6f702034  20204873  20202020  53203a20  4 posH       : S
// 23a0:  4f505f56  49544953  203b4e4f  43202f2f  V_POSITION; // C
// 23b0:  65746e65  6f702072  69746973  6f206e6f  enter position o
// 23c0:  68742066  75712065  0a0d6461  6f6c6609  f the quad...flo
// 23d0:  20347461  6f6c6f63  20202072  3a202020  at4 color      :
// 23e0:  4c4f4320  3b30524f  3b7d0a0d  0a0d0a0d   COLOR0;..};....
// 23f0:  75727473  47207463  4f5f4f45  0a0d5455  struct GEO_OUT..
// 2400:  090a0d7b  616f6c66  70203474  2048736f  {...float4 posH 
// 2410:  53203a20  4f505f56  49544953  0d3b4e4f   : SV_POSITION;.
// 2420:  6c66090a  3474616f  6c6f6320  3a20726f  ..float4 color :
// 2430:  4c4f4320  3b30524f  3b7d0a0d  0a0d0a0d   COLOR0;..};....
// 2440:  75727473  50207463  554f5f53  54555054  struct PS_OUTPUT
// 2450:  0d7b0a0d  6c66090a  3474616f  6c6f6320  ..{...float4 col
// 2460:  3a20726f  5f565320  67726154  3b307465  or : SV_Target0;
// 2470:  3b7d0a0d  0a0d0a0d  0a0d0a0d  2d2d2f2f  ..};........//--
// 2480:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2490:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 24a0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 24b0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 24c0:  2d2d2d2d  2d2d2d2d  0d2d2d2d  202f2f0a  -----------..// 
// 24d0:  74726556  73207865  65646168  2f0a0d72  Vertex shader../
// 24e0:  2d2d2d2f  2d2d2d2d  2d2d2d2d  2d2d2d2d  /---------------
// 24f0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2500:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2510:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2520:  2d2d2d2d  2d2d2d2d  2d2d2d2d  0a0d2d2d  --------------..
// 2530:  5f4f4547  56204e49  68535f53  64656461  GEO_IN VS_Shaded
// 2540:  6e696f50  6f6c4374  69286475  5356206e  PointCloud(in VS
// 2550:  504e495f  69205455  7475706e  7b0a0d29  _INPUT input)..{
// 2560:  47090a0d  495f4f45  756f204e  74757074  ...GEO_IN output
// 2570:  0d0a0d3b  6c66090a  3474616f  736f7020  ;.....float4 pos
// 2580:  203d2048  286c756d  616f6c66  69283474  H = mul(float4(i
// 2590:  7475706e  736f702e  31202c4c  2966302e  nput.posL, 1.0f)
// 25a0:  5767202c  646c726f  77656956  6a6f7250  , gWorldViewProj
// 25b0:  69746365  3b296e6f  6f090a0d  75707475  ection);...outpu
// 25c0:  6f702e74  3d204873  736f7020  0a0d3b48  t.posH = posH;..
// 25d0:  66090a0d  74616f6c  6f6e2033  6c616d72  ...float3 normal
// 25e0:  203d2057  286c756d  616f6c66  69283474  W = mul(float4(i
// 25f0:  7475706e  726f6e2e  4c6c616d  2e31202c  nput.normalL, 1.
// 2600:  2c296630  6f576720  49646c72  7265766e  0f), gWorldInver
// 2610:  72546573  70736e61  2965736f  7a79782e  seTranspose).xyz
// 2620:  090a0d3b  6d726f6e  20576c61  6f6e203d  ;...normalW = no
// 2630:  6c616d72  28657a69  6d726f6e  29576c61  rmalize(normalW)
// 2640:  0d0a0d3b  2f2f090a  64644120  6d614c20  ;.....// Add Lam
// 2650:  74726562  206e6169  65726964  6f697463  bertian directio
// 2660:  206c616e  6867696c  676e6974  0a0d3a20  nal lighting :..
// 2670:  202f2f09  6867696c  676e6974  6f6d6120  .// lighting amo
// 2680:  20746e75  61206e6f  76696720  73206e65  unt on a given s
// 2690:  61667275  69206563  68742073  6f642065  urface is the do
// 26a0:  72702074  6375646f  666f2074  65687420  t product of the
// 26b0:  67696c20  76207468  6f746365  6e612072   light vector an
// 26c0:  68742064  61662065  73276563  726f6e20  d the face's nor
// 26d0:  3a6c616d  2f090a0d  696c202f  20746867  mal:...// light 
// 26e0:  74636576  6920726f  6f702073  69746e69  vector is pointi
// 26f0:  6920676e  6874206e  706f2065  7a69736f  ng in the oposiz
// 2700:  69642065  74636572  206e6f69  6c207361  e direction as l
// 2710:  74686769  72696420  69746365  0a0d6e6f  ight direction..
// 2720:  66090a0d  74616f6c  66696420  65737566  ...float diffuse
// 2730:  74636146  3d20726f  746f6420  4c672d28  Factor = dot(-gL
// 2740:  74686769  65726944  6f697463  6e202c6e  ightDirection, n
// 2750:  616d726f  3b29576c  0a0d0a0d  202f2f09  ormalW);.....// 
// 2760:  64206669  75666669  61466573  726f7463  if diffuseFactor
// 2770:  30203c20  61687420  6874206e  74207369   < 0 than this t
// 2780:  6e616972  20656c67  66207369  6e696361  riangle is facin
// 2790:  77612067  66207961  206d6f72  20656874  g away from the 
// 27a0:  6867696c  0d0a0d74  6669230a  20666564  light....#ifdef 
// 27b0:  5f4f5754  45444953  090a0d44  49202f2f  TWO_SIDED...// I
// 27c0:  65772066  65726120  6e657220  69726564  f we are renderi
// 27d0:  7420676e  732d6f77  64656469  74616d20  ng two-sided mat
// 27e0:  61697265  74202c6c  206e6568  7473756a  erial, then just
// 27f0:  73626120  65687420  66696420  65737566   abs the diffuse
// 2800:  74636146  7320726f  6874206f  656e2065  Factor so the ne
// 2810:  69746167  28206576  20746f6e  756c6c69  gative (not illu
// 2820:  616e696d  29646574  6c617620  20736575  minated) values 
// 2830:  6c6c6977  736c6120  6562206f  6e657220  will also be ren
// 2840:  65726564  090a0d64  616f6c66  64203374  dered...float3 d
// 2850:  75666669  6f436573  20726f6c  6261203d  iffuseColor = ab
// 2860:  69642873  73756666  63614665  29726f74  s(diffuseFactor)
// 2870:  230a0d3b  65736c65  2f090a0d  6173202f  ;..#else...// sa
// 2880:  61727574  66206574  74636e75  3a6e6f69  turate function:
// 2890:  616c4320  2073706d  20656874  63657073   Clamps the spec
// 28a0:  65696669  61762064  2065756c  68746977  ified value with
// 28b0:  74206e69  72206568  65676e61  20666f20  in the range of 
// 28c0:  6f742030  2d203120  206f7320  6167656e  0 to 1 - so nega
// 28d0:  65766974  6f6e2820  6c692074  696d756c  tive (not illumi
// 28e0:  6574616e  76202964  65756c61  72612073  nated) values ar
// 28f0:  6c632065  65706d61  6f742064  0a0d3020  e clamped to 0..
// 2900:  6f6c6609  20337461  66666964  43657375  .float3 diffuseC
// 2910:  726f6c6f  73203d20  72757461  28657461  olor = saturate(
// 2920:  66666964  46657375  6f746361  0d3b2972  diffuseFactor);.
// 2930:  6e65230a  0d666964  090a0d0a  2f090a0d  .#endif......../
// 2940:  6441202f  41672064  6569626d  6f43746e  / Add gAmbientCo
// 2950:  20726f6c  64206f74  75666669  6f436573  lor to diffuseCo
// 2960:  20726f6c  20646e61  746c756d  796c7069  lor and multiply
// 2970:  20796220  20656874  626f6c67  64206c61   by the global d
// 2980:  75666669  63206573  726f6c6f  66090a0d  iffuse color...f
// 2990:  74616f6c  69662033  436c616e  726f6c6f  loat3 finalColor
// 29a0:  73203d20  72757461  28657461  626d4167   = saturate(gAmb
// 29b0:  746e6569  6f6c6f43  202b2072  66666964  ientColor + diff
// 29c0:  43657375  726f6c6f  67202a20  6867694c  useColor * gLigh
// 29d0:  6c6f4374  2029726f  4467202a  75666669  tColor) * gDiffu
// 29e0:  6f436573  2e726f6c  3b626772  0a0d0a0d  seColor.rgb;....
// 29f0:  64666923  50206665  505f5245  544e494f  #ifdef PER_POINT
// 2a00:  4c4f435f  0a0d524f  202f2f09  746c754d  _COLOR...// Mult
// 2a10:  796c7069  74697720  68742068  6e692065  iply with the in
// 2a20:  69766964  6c617564  696f7020  6320746e  dividual point c
// 2a30:  726f6c6f  66090a0d  6c616e69  6f6c6f43  olor...finalColo
// 2a40:  3d2a2072  706e6920  632e7475  726f6c6f  r *= input.color
// 2a50:  230a0d3b  69646e65  0d0a0d66  230a0d0a  ;..#endif......#
// 2a60:  65646669  50532066  4c554345  4c5f5241  ifdef SPECULAR_L
// 2a70:  54484749  0d474e49  6c66090a  2074616f  IGHTING...float 
// 2a80:  63657073  72616c75  65776f50  203d2072  specularPower = 
// 2a90:  65705367  616c7563  6c6f4372  6f50726f  gSpecularColorPo
// 2aa0:  2e726577  0a0d3b77  69090a0d  73282066  wer.w;.....if (s
// 2ab0:  75636570  5072616c  7265776f  30203e20  pecularPower > 0
// 2ac0:  090a0d29  090a0d7b  6f6c6609  20337461  )...{....float3 
// 2ad0:  57736f70  6d203d20  66286c75  74616f6c  posW = mul(float
// 2ae0:  6e692834  2e747570  4c736f70  2e31202c  4(input.posL, 1.
// 2af0:  2c296630  6f576720  29646c72  7a79782e  0f), gWorld).xyz
// 2b00:  090a0d3b  6f6c6609  20337461  79456f74  ;....float3 toEy
// 2b10:  203d2065  6d726f6e  7a696c61  45672865  e = normalize(gE
// 2b20:  6f506579  2d205773  736f7020  0d3b2957  yePosW - posW);.
// 2b30:  090a0d0a  202f2f09  6e696c42  68502d6e  .....// Blinn-Ph
// 2b40:  20676e6f  63657073  616c6175  696c2072  ong specualar li
// 2b50:  69746867  2820676e  6e697375  61682067  ghting (using ha
// 2b60:  7620666c  6f746365  6e692072  61657473  lf vector instea
// 2b70:  666f2064  66657220  7463656c  296e6f69  d of reflection)
// 2b80:  09090a0d  53202f2f  61206565  3a6f736c  ....// See also:
// 2b90:  74746820  2f3a7370  2e6e652f  696b6977   https://en.wiki
// 2ba0:  69646570  726f2e61  69772f67  422f696b  pedia.org/wiki/B
// 2bb0:  6e6e696c  25324525  39253038  6f685033  linn%E2%80%93Pho
// 2bc0:  735f676e  69646168  6d5f676e  6c65646f  ng_shading_model
// 2bd0:  09090a0d  616f6c66  68203374  44666c61  ....float3 halfD
// 2be0:  3d207269  726f6e20  696c616d  7428657a  ir = normalize(t
// 2bf0:  6579456f  67202d20  6867694c  72694474  oEye - gLightDir
// 2c00:  69746365  3b296e6f  0a0d0a0d  2f2f0909  ection);......//
// 2c10:  65746e49  7469736e  666f2079  65687420  Intensity of the
// 2c20:  65707320  616c7563  696c2072  0d746867   specular light.
// 2c30:  6609090a  74616f6c  65707320  63614663  ...float specFac
// 2c40:  20726f74  6f70203d  61732877  61727574  tor = pow(satura
// 2c50:  64286574  6e28746f  616d726f  202c576c  te(dot(normalW, 
// 2c60:  666c6168  29726944  73202c29  75636570  halfDir)), specu
// 2c70:  5072616c  7265776f  0a0d3b29  09090a0d  larPower);......
// 2c80:  41202f2f  73206464  75636570  2072616c  // Add specular 
// 2c90:  6f6c6f63  6f742072  65687420  6e696620  color to the fin
// 2ca0:  6c206c61  74686769  09090a0d  616e6966  al light....fina
// 2cb0:  6c6f436c  2b20726f  6173203d  61727574  lColor += satura
// 2cc0:  73286574  46636570  6f746361  202a2072  te(specFactor * 
// 2cd0:  65705367  616c7563  6c6f4372  6f50726f  gSpecularColorPo
// 2ce0:  2e726577  297a7978  090a0d3b  230a0d7d  wer.xyz);...}..#
// 2cf0:  69646e65  0a0d0966  69230a0d  66656466  endif.....#ifdef
// 2d00:  4e455220  5f524544  4d524f4e  565f4c41   RENDER_NORMAL_V
// 2d10:  4f544345  53415f52  4c4f435f  0a0d524f  ECTOR_AS_COLOR..
// 2d20:  6e696609  6f436c61  20726f6c  6261203d  .finalColor = ab
// 2d30:  6f6e2873  6c616d72  203b2957  52202f2f  s(normalW); // R
// 2d40:  65646e65  6f6e2072  6c616d72  63657620  ender normal vec
// 2d50:  20726f74  63207361  726f6c6f  20582820  tor as color (X 
// 2d60:  65726964  6f697463  7369206e  6f687320  direction is sho
// 2d70:  61206e77  65522073  6f632064  2c726f6c  wn as Red color,
// 2d80:  61207920  72472073  206e6565  20646e61   y as Green and 
// 2d90:  7361207a  756c4220  6f632065  29726f6c  z as Blue color)
// 2da0:  0d090a0d  2f2f090a  65685420  6c6f6620  ......// The fol
// 2db0:  69776f6c  6320676e  2065646f  206e6163  lowing code can 
// 2dc0:  75206562  20646573  73206f74  20776f68  be used to show 
// 2dd0:  69736f70  65766974  726f6e20  576c616d  positive normalW
// 2de0:  7620782e  65756c61  73612073  64657220  .x values as red
// 2df0:  78697020  2073656c  20646e61  6167656e   pixles and nega
// 2e00:  65766974  726f6e20  576c616d  7620782e  tive normalW.x v
// 2e10:  65756c61  73612073  756c6220  69702065  alues as blue pi
// 2e20:  736c6578  61732820  61727574  6d206574  xels (saturate m
// 2e30:  6f687465  6c632064  73706d61  6c617620  ethod clamps val
// 2e40:  20736575  6c616d73  2072656c  6e616874  ues smaller than
// 2e50:  74203020  2030206f  20646e61  67676962   0 to 0 and bigg
// 2e60:  74207265  206e6568  6f742031  2e293120  er then 1 to 1).
// 2e70:  2f090a0d  6e69662f  6f436c61  20726f6c  ...//finalColor 
// 2e80:  6c66203d  3374616f  74617328  74617275  = float3(saturat
// 2e90:  6f6e2865  6c616d72  29782e57  2c30202c  e(normalW.x), 0,
// 2ea0:  74617320  74617275  6e2d2865  616d726f   saturate(-norma
// 2eb0:  782e576c  0d3b2929  6e65230a  0d666964  lW.x));..#endif.
// 2ec0:  090a0d0a  46202f2f  6c616e69  6120796c  ....// Finally a
// 2ed0:  74206464  61206568  6168706c  61686320  dd the alpha cha
// 2ee0:  6c656e6e  646e6120  74756f20  74207570  nnel and outpu t
// 2ef0:  63206568  726f6c6f  726f6620  65687420  he color for the
// 2f00:  78697020  73206c65  65646168  090a0d72   pixel shader...
// 2f10:  7074756f  632e7475  726f6c6f  66203d20  output.color = f
// 2f20:  74616f6c  61732834  61727574  66286574  loat4(saturate(f
// 2f30:  6c616e69  6f6c6f43  202c2972  66694467  inalColor), gDif
// 2f40:  65737566  6f6c6f43  29612e72  0d0a0d3b  fuseColor.a);...
// 2f50:  6572090a  6e727574  74756f20  3b747570  ..return output;
// 2f60:  0d7d0a0d  2f0a0d0a  2d2d2d2f  2d2d2d2d  ..}....//-------
// 2f70:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2f80:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2f90:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2fa0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2fb0:  2d2d2d2d  0a0d2d2d  47202f2f  656d6f65  ------..// Geome
// 2fc0:  20797274  64616873  0a0d7265  2d2d2f2f  try shader..//--
// 2fd0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2fe0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 2ff0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 3000:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 3010:  2d2d2d2d  2d2d2d2d  0d2d2d2d  2f0a0d0a  -----------..../
// 3020:  6854202f  67207369  656d6f65  20797274  / This geometry 
// 3030:  64616873  63207265  74616572  71206465  shader created q
// 3040:  73646175  74697720  69732068  6420657a  uads with size d
// 3050:  6e696665  69206465  6373206e  6e656572  efined in screen
// 3060:  61707320  0a0d6563  78616d5b  74726576   space..[maxvert
// 3070:  6f637865  28746e75  0d5d2934  696f760a  excount(4)]..voi
// 3080:  53472064  6168535f  50646564  746e696f  d GS_ShadedPoint
// 3090:  756f6c43  6f702864  20746e69  5f4f4547  Cloud(point GEO_
// 30a0:  70204e49  746e696f  5d315b73  6e69202c  IN points[1], in
// 30b0:  2074756f  61697254  656c676e  65727453  out TriangleStre
// 30c0:  473c6d61  4f5f4f45  203e5455  7074756f  am<GEO_OUT> outp
// 30d0:  0d297475  0a0d7b0a  6f6c6609  20347461  ut)..{...float4 
// 30e0:  6f6c6f63  203d2072  6e696f70  305b7374  color = points[0
// 30f0:  6f632e5d  3b726f6c  0a0d0a0d  4f454709  ].color;.....GEO
// 3100:  54554f5f  345b7620  0a0d3b5d  2f090a0d  _OUT v[4];...../
// 3110:  6150202f  74207373  63206568  726f6c6f  / Pass the color
// 3120:  72756620  72656874  206f7420  20656874   further to the 
// 3130:  65786970  6873206c  72656461  76090a0d  pixel shader...v
// 3140:  2e5d305b  6f6c6f63  203d2072  6f6c6f63  [0].color = colo
// 3150:  0a0d3b72  315b7609  6f632e5d  20726f6c  r;...v[1].color 
// 3160:  6f63203d  3b726f6c  76090a0d  2e5d325b  = color;...v[2].
// 3170:  6f6c6f63  203d2072  6f6c6f63  0a0d3b72  color = color;..
// 3180:  335b7609  6f632e5d  20726f6c  6f63203d  .v[3].color = co
// 3190:  3b726f6c  0a0d0a0d  66090a0d  74616f6c  lor;.......float
// 31a0:  6f702034  3d204873  696f7020  5b73746e  4 posH = points[
// 31b0:  702e5d30  3b48736f  66090a0d  74616f6c  0].posH;...float
// 31c0:  53702032  65657263  203d206e  48736f70  2 pScreen = posH
// 31d0:  2079782e  6f70202f  772e4873  2f2f203b  .xy / posH.w; //
// 31e0:  736f7020  6f697469  6e69206e  72637320   position in scr
// 31f0:  206e6565  726f6f63  616e6964  0d736574  een coordinates.
// 3200:  090a0d0a  5d305b76  736f702e  203d2048  ....v[0].posH = 
// 3210:  616f6c66  28283474  72635370  206e6565  float4((pScreen 
// 3220:  6c66202b  3274616f  61682d28  6950666c  + float2(-halfPi
// 3230:  536c6578  50657a69  69567265  6f707765  xelSizePerViewpo
// 3240:  782e7472  6168202c  6950666c  536c6578  rt.x, halfPixelS
// 3250:  50657a69  69567265  6f707765  792e7472  izePerViewport.y
// 3260:  2a202929  736f7020  2c772e48  736f7020  )) * posH.w, pos
// 3270:  2c7a2e48  736f7020  29772e48  090a0d3b  H.z, posH.w);...
// 3280:  5d315b76  736f702e  203d2048  616f6c66  v[1].posH = floa
// 3290:  28283474  72635370  206e6565  6c66202b  t4((pScreen + fl
// 32a0:  3274616f  61682028  6950666c  536c6578  oat2( halfPixelS
// 32b0:  50657a69  69567265  6f707765  782e7472  izePerViewport.x
// 32c0:  6168202c  6950666c  536c6578  50657a69  , halfPixelSizeP
// 32d0:  69567265  6f707765  792e7472  2a202929  erViewport.y)) *
// 32e0:  736f7020  2c772e48  736f7020  2c7a2e48   posH.w, posH.z,
// 32f0:  736f7020  29772e48  0d0a0d3b  5b76090a   posH.w);.....v[
// 3300:  702e5d32  2048736f  6c66203d  3474616f  2].posH = float4
// 3310:  53702828  65657263  202b206e  616f6c66  ((pScreen + floa
// 3320:  20283274  666c6168  65786950  7a69536c  t2( halfPixelSiz
// 3330:  72655065  77656956  74726f70  202c782e  ePerViewport.x, 
// 3340:  6c61682d  78695066  69536c65  6550657a  -halfPixelSizePe
// 3350:  65695672  726f7077  29792e74  202a2029  rViewport.y)) * 
// 3360:  48736f70  202c772e  48736f70  202c7a2e  posH.w, posH.z, 
// 3370:  48736f70  3b29772e  76090a0d  2e5d335b  posH.w);...v[3].
// 3380:  48736f70  66203d20  74616f6c  70282834  posH = float4((p
// 3390:  65726353  2b206e65  6f6c6620  28327461  Screen + float2(
// 33a0:  6c61682d  78695066  69536c65  6550657a  -halfPixelSizePe
// 33b0:  65695672  726f7077  2c782e74  61682d20  rViewport.x, -ha
// 33c0:  6950666c  536c6578  50657a69  69567265  lfPixelSizePerVi
// 33d0:  6f707765  792e7472  2a202929  736f7020  ewport.y)) * pos
// 33e0:  2c772e48  736f7020  2c7a2e48  736f7020  H.w, posH.z, pos
// 33f0:  29772e48  0d0a0d3b  2f2f090a  65724320  H.w);.....// Cre
// 3400:  20657461  61697254  656c676e  69727453  ate TriangleStri
// 3410:  73282070  74206565  20736968  6b6e696c  p (see this link
// 3420:  726f6620  69727420  6c676e61  6f207365   for triangles o
// 3430:  6e656972  69746174  203a6e6f  70747468  rientation: http
// 3440:  2f2f3a73  6e64736d  63696d2e  6f736f72  s://msdn.microso
// 3450:  632e7466  652f6d6f  73752d6e  62696c2f  ft.com/en-us/lib
// 3460:  79726172  6e69772f  73776f64  7365642f  rary/windows/des
// 3470:  706f746b  3262622f  37323630  3d762834  ktop/bb206274(v=
// 3480:  382e7376  612e2935  29787073  6f090a0d  vs.85).aspx)...o
// 3490:  75707475  70412e74  646e6570  305b7628  utput.Append(v[0
// 34a0:  0d3b295d  756f090a  74757074  7070412e  ]);...output.App
// 34b0:  28646e65  5d335b76  0a0d3b29  74756f09  end(v[3]);...out
// 34c0:  2e747570  65707041  7628646e  295d315b  put.Append(v[1])
// 34d0:  090a0d3b  7074756f  412e7475  6e657070  ;...output.Appen
// 34e0:  5b762864  3b295d32  0a0d0a0d  74756f09  d(v[2]);.....out
// 34f0:  2e747570  74736552  53747261  70697274  put.RestartStrip
// 3500:  0d3b2928  0a0d7d0a  0a0d0a0d  2f2f0a0d  ();..}........//
// 3510:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 3520:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 3530:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 3540:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 3550:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2f0a0d2d  -------------../
// 3560:  6950202f  206c6578  64616873  0a0d7265  / Pixel shader..
// 3570:  2d2d2f2f  2d2d2d2d  2d2d2d2d  2d2d2d2d  //--------------
// 3580:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 3590:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 35a0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 35b0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  0d2d2d2d  ---------------.
// 35c0:  5f53500a  5054554f  50205455  68535f53  .PS_OUTPUT PS_Sh
// 35d0:  64656461  6e696f50  6f6c4374  47286475  adedPointCloud(G
// 35e0:  4f5f4f45  69205455  7475706e  7b0a0d29  EO_OUT input)..{
// 35f0:  50090a0d  554f5f53  54555054  74756f20  ...PS_OUTPUT out
// 3600:  3b747570  6f090a0d  75707475  6f632e74  put;...output.co
// 3610:  20726f6c  6e69203d  2e747570  6f6c6f63  lor = input.colo
// 3620:  0a0d3b72  72090a0d  72757465  756f206e  r;.....return ou
// 3630:  74757074  7d0a0d3b  0a0d0a0d  0a0d0a0d  tput;..}........
// 3640:  2a2f0a0d  0a0d0a0d  64616853  20737265  ../*....Shaders 
// 3650:  74616874  6e656720  74617265  75712065  that generate qu
// 3660:  20736461  77206e69  646c726f  61707320  ads in world spa
// 3670:  61206563  6e206572  7520746f  20646573  ce are not used 
// 3680:  20796e61  65726f6d  77202d20  6e6f2065  any more - we on
// 3690:  6720796c  72656e65  20657461  64617571  ly generate quad
// 36a0:  206e6920  65726373  73206e65  65636170   in screen space
// 36b0:  0a0d0a0d  66756263  20726566  65566263  ....cbuffer cbVe
// 36c0:  78657472  66667542  3a207265  67657220  rtexBuffer : reg
// 36d0:  65747369  32622872  7b0a0d29  2f2f0a0d  ister(b2)..{..//
// 36e0:  6d616320  20617265  706f7270  69747265   camera properti
// 36f0:  0d3a7365  776f720a  6a616d5f  6620726f  es:..row_major f
// 3700:  74616f6c  20347834  726f5767  3a20646c  loat4x4 gWorld :
// 3710:  524f5720  0d3b444c  776f720a  6a616d5f   WORLD;..row_maj
// 3720:  6620726f  74616f6c  20347834  726f5767  or float4x4 gWor
// 3730:  6956646c  72507765  63656a6f  6e6f6974  ldViewProjection
// 3740:  3a202020  524f5720  4956444c  52505745     : WORLDVIEWPR
// 3750:  43454a4f  4e4f4954  720a0d3b  6d5f776f  OJECTION;..row_m
// 3760:  726f6a61  6f6c6620  78347461  57672034  ajor float4x4 gW
// 3770:  646c726f  65766e49  54657372  736e6172  orldInverseTrans
// 3780:  65736f70  57203a20  444c524f  45564e49  pose : WORLDINVE
// 3790:  54455352  534e4152  45534f50  0d0a0d3b  RSETRANSPOSE;...
// 37a0:  6f6c660a  20337461  65794567  57736f50  .float3 gEyePosW
// 37b0:  0d0a0d3b  2f0a0d0a  6c67202f  6c61626f  ;......// global
// 37c0:  78697020  70206c65  65706f72  65697472   pixel propertie
// 37d0:  0a0d3a73  616f6c66  67203474  66666944  s:..float4 gDiff
// 37e0:  43657375  726f6c6f  20202020  3a202020  useColor       :
// 37f0:  4c4f4320  203b524f  54202f2f  20736968   COLOR; // This 
// 3800:  6f6c6f63  73692072  6c756d20  6c706974  color is multipl
// 3810:  20646569  68746977  65687420  6c6f6320  ied with the col
// 3820:  6f20726f  61652066  70206863  6c657869  or of each pixel
// 3830:  66656420  64656e69  206e6920  495f5356   defined in VS_I
// 3840:  5455504e  7449203b  736c6120  6564206f  NPUT; It also de
// 3850:  656e6966  65687420  6f6c6720  206c6162  fine the global 
// 3860:  68706c61  6f632061  20726f6c  756c6176  alpha color valu
// 3870:  6f662065  6c612072  6970206c  736c6578  e for all pixels
// 3880:  6c660a0d  3474616f  70536720  6c756365  ..float4 gSpecul
// 3890:  6f437261  50726f6c  7265776f  43203a20  arColorPower : C
// 38a0:  524f4c4f  0d0a0d3b  6f6c660a  67207461  OLOR;....float g
// 38b0:  666c6148  6e696f50  7a695374  2f203b65  HalfPointSize; /
// 38c0:  6168202f  7320666c  20657a69  7420666f  / half size of t
// 38d0:  71206568  20646175  74616874  66656420  he quad that def
// 38e0:  73656e69  65687420  78697020  28206c65  ines the pixel (
// 38f0:  77206e69  646c726f  61707320  203b6563  in world space; 
// 3900:  20746f6e  73206e69  65657263  7073206e  not in screen sp
// 3910:  20656361  77207361  20687469  65786950  ace as with Pixe
// 3920:  7369566c  336c6175  726f2044  20443320  lVisual3D or 3D 
// 3930:  656e696c  0a0d2973  0a0d0a0d  6c202f2f  lines)......// l
// 3940:  74686769  6f727020  74726570  3a736569  ight properties:
// 3950:  6c660a0d  3374616f  6d416720  6e656962  ..float3 gAmbien
// 3960:  6c6f4374  3a20726f  4c4f4320  0d3b524f  tColor : COLOR;.
// 3970:  6f6c660a  20337461  67694c67  69447468  .float3 gLightDi
// 3980:  74636572  3b6e6f69  6c660a0d  3374616f  rection;..float3
// 3990:  694c6720  43746867  726f6c6f  43203a20   gLightColor : C
// 39a0:  524f4c4f  7d0a0d3b  0d0a0d3b  7274730a  OLOR;..};....str
// 39b0:  20746375  5f4f4547  0a0d4e49  660a0d7b  uct GEO_IN..{..f
// 39c0:  74616f6c  6f702034  20204873  20202020  loat4 posH      
// 39d0:  53203a20  4f505f56  49544953  203b4e4f   : SV_POSITION; 
// 39e0:  43202f2f  65746e65  6f702072  69746973  // Center positi
// 39f0:  6f206e6f  68742066  75712065  0a0d6461  on of the quad..
// 3a00:  616f6c66  71203474  55646175  20204870  float4 quadUpH  
// 3a10:  203a2020  4d524f4e  3b304c41  20202020    : NORMAL0;    
// 3a20:  2f2f2020  20705520  65726964  6f697463    // Up directio
// 3a30:  666f206e  65687420  61757120  660a0d64  n of the quad..f
// 3a40:  74616f6c  75712034  69526461  48746867  loat4 quadRightH
// 3a50:  4e203a20  414d524f  203b314c  20202020   : NORMAL1;     
// 3a60:  202f2f20  68676952  69642074  74636572   // Right direct
// 3a70:  206e6f69  7420666f  71206568  0d646175  ion of the quad.
// 3a80:  6f6c660a  20347461  6f6c6f63  20202072  .float4 color   
// 3a90:  3a202020  4c4f4320  3b30524f  3b7d0a0d     : COLOR0;..};
// 3aa0:  0a0d0a0d  5f4f4547  56204e49  68535f53  ....GEO_IN VS_Sh
// 3ab0:  64656461  6e696f50  6f6c4374  69286475  adedPointCloud(i
// 3ac0:  5356206e  504e495f  69205455  7475706e  n VS_INPUT input
// 3ad0:  7b0a0d29  45470a0d  4e495f4f  74756f20  )..{..GEO_IN out
// 3ae0:  3b747570  0a0d0a0d  616f6c66  70203474  put;....float4 p
// 3af0:  2048736f  756d203d  6c66286c  3474616f  osH = mul(float4
// 3b00:  706e6928  702e7475  2c4c736f  302e3120  (input.posL, 1.0
// 3b10:  202c2966  726f5767  6956646c  72507765  f), gWorldViewPr
// 3b20:  63656a6f  6e6f6974  0a0d3b29  7074756f  ojection);..outp
// 3b30:  702e7475  2048736f  6f70203d  0d3b4873  ut.posH = posH;.
// 3b40:  660a0d0a  74616f6c  6f6e2033  6c616d72  ...float3 normal
// 3b50:  203d2057  286c756d  616f6c66  69283474  W = mul(float4(i
// 3b60:  7475706e  726f6e2e  4c6c616d  2e31202c  nput.normalL, 1.
// 3b70:  2c296630  6f576720  49646c72  7265766e  0f), gWorldInver
// 3b80:  72546573  70736e61  2965736f  7a79782e  seTranspose).xyz
// 3b90:  6e0a0d3b  616d726f  3d20576c  726f6e20  ;..normalW = nor
// 3ba0:  696c616d  6e28657a  616d726f  3b29576c  malize(normalW);
// 3bb0:  0a0d0a0d  54202f2f  7263206f  65746165  ....// To create
// 3bc0:  71206120  20646175  6d6f7266  70206120   a quad from a p
// 3bd0:  7469736f  206e6f69  20646e61  6d726f6e  osition and norm
// 3be0:  76206c61  6f746365  2f0a0d72  6577202f  al vector..// we
// 3bf0:  65656e20  6f742064  74656720  65687420   need to get the
// 3c00:  726f6820  6e6f7a69  206c6174  20646e61   horizontal and 
// 3c10:  76207075  6f746365  0a0d2e72  54202f2f  up vector...// T
// 3c20:  20796568  69666564  7420656e  64206568  hey define the d
// 3c30:  63657269  6e6f6974  6e692073  77206f74  irections into w
// 3c40:  68636968  65687420  736f7020  6f697469  hich the positio
// 3c50:  7369206e  70786520  65646e61  0a0d2e64  n is expanded...
// 3c60:  0a0d2f2f  57202f2f  6f642065  61687420  //..// We do tha
// 3c70:  79622074  6c616320  6c617563  676e6974  t by calcualting
// 3c80:  726f6820  6e6f7a69  566c6174  6f746365   horizontalVecto
// 3c90:  73612072  76206120  6f746365  65702072  r as a vector pe
// 3ca0:  6e657072  75636964  2072616c  74206f74  rpendicular to t
// 3cb0:  55206568  69784170  30282073  302c312c  he UpAxis (0,1,0
// 3cc0:  6e612029  68742064  6f6e2065  6c616d72  ) and the normal
// 3cd0:  63657620  2e726f74  6c660a0d  3374616f   vector...float3
// 3ce0:  726f6820  6e6f7a69  566c6174  6f746365   horizontalVecto
// 3cf0:  203d2072  736f7263  6c662873  3374616f  r = cross(float3
// 3d00:  202c3028  30202c31  6e202c29  616d726f  (0, 1, 0), norma
// 3d10:  3b29576c  0a0d0a0d  616f6c66  6f682074  lW);....float ho
// 3d20:  6f7a6972  6c61746e  74636556  654c726f  rizontalVectorLe
// 3d30:  6874676e  61757153  20646572  6f64203d  ngthSquared = do
// 3d40:  6f682874  6f7a6972  6c61746e  74636556  t(horizontalVect
// 3d50:  202c726f  69726f68  746e6f7a  65566c61  or, horizontalVe
// 3d60:  726f7463  0a0d3b29  28206669  69726f68  ctor);..if (hori
// 3d70:  746e6f7a  65566c61  726f7463  676e654c  zontalVectorLeng
// 3d80:  71536874  65726175  203c2064  30302e30  thSquared < 0.00
// 3d90:  29313030  0d7b0a0d  202f2f0a  63206e49  001)..{..// In c
// 3da0:  20657361  6d726f6e  20576c61  6e696f70  ase normalW poin
// 3db0:  75207374  6e612070  6f642064  746f6e20  ts up and do not
// 3dc0:  6f727020  65646976  666e6920  616d726f   provide informa
// 3dd0:  6e6f6974  6f626120  74207475  68206568  tion about the h
// 3de0:  7a69726f  61746e6f  6365566c  20726f74  orizontalVector 
// 3df0:  65726964  6f697463  0a0d2c6e  77202f2f  direction,..// w
// 3e00:  69702065  61206b63  63657620  20726f74  e pick a vector 
// 3e10:  74616874  696f7020  2073746e  74206e69  that points in t
// 3e20:  5a206568  69786120  69642073  74636572  he Z axis direct
// 3e30:  0d6e6f69  726f680a  6e6f7a69  566c6174  ion..horizontalV
// 3e40:  6f746365  203d2072  616f6c66  30283374  ector = float3(0
// 3e50:  2c30202c  3b293120  0d7d0a0d  660a0d0a  , 0, 1);..}....f
// 3e60:  74616f6c  70752033  74636556  3d20726f  loat3 upVector =
// 3e70:  6f726320  68287373  7a69726f  61746e6f   cross(horizonta
// 3e80:  6365566c  2c726f74  726f6e20  576c616d  lVector, normalW
// 3e90:  0a0d3b29  65567075  726f7463  6e203d20  );..upVector = n
// 3ea0:  616d726f  657a696c  56707528  6f746365  ormalize(upVecto
// 3eb0:  0d3b2972  680a0d0a  7a69726f  61746e6f  r);....horizonta
// 3ec0:  6365566c  20726f74  67203d2a  666c6148  lVector *= gHalf
// 3ed0:  6e696f50  7a695374  0a0d3b65  65567075  PointSize;..upVe
// 3ee0:  726f7463  203d2a20  6c614867  696f5066  ctor *= gHalfPoi
// 3ef0:  6953746e  0d3b657a  6f0a0d0a  75707475  ntSize;....outpu
// 3f00:  75712e74  70556461  203d2048  286c756d  t.quadUpH = mul(
// 3f10:  616f6c66  75283474  63655670  2c726f74  float4(upVector,
// 3f20:  302e3020  202c2966  726f5767  6956646c   0.0f), gWorldVi
// 3f30:  72507765  63656a6f  6e6f6974  2f203b29  ewProjection); /
// 3f40:  7270202f  6e657665  73752074  20676e69  / prevent using 
// 3f50:  6e617274  74616c73  206e6f69  67206e69  translation in g
// 3f60:  6c726f57  65695664  6f725077  7463656a  WorldViewProject
// 3f70:  206e6f69  68746977  65707320  79666963  ion with specify
// 3f80:  20676e69  6f662030  20772072  206e6928  ing 0 for w (in 
// 3f90:  616f6c66  0d293474  74756f0a  2e747570  float4)..output.
// 3fa0:  64617571  68676952  3d204874  6c756d20  quadRightH = mul
// 3fb0:  6f6c6628  28347461  69726f68  746e6f7a  (float4(horizont
// 3fc0:  65566c61  726f7463  2e30202c  2c296630  alVector, 0.0f),
// 3fd0:  6f576720  56646c72  50776569  656a6f72   gWorldViewProje
// 3fe0:  6f697463  0d3b296e  0d0a0d0a  202f2f0a  ction);......// 
// 3ff0:  20646441  626d614c  69747265  64206e61  Add Lambertian d
// 4000:  63657269  6e6f6974  6c206c61  74686769  irectional light
// 4010:  20676e69  2f0a0d3a  696c202f  69746867  ing :..// lighti
// 4020:  6120676e  6e756f6d  6e6f2074  67206120  ng amount on a g
// 4030:  6e657669  72757320  65636166  20736920  iven surface is 
// 4040:  20656874  20746f64  646f7270  20746375  the dot product 
// 4050:  7420666f  6c206568  74686769  63657620  of the light vec
// 4060:  20726f74  20646e61  20656874  65636166  tor and the face
// 4070:  6e207327  616d726f  0a0d3a6c  6c202f2f  's normal:..// l
// 4080:  74686769  63657620  20726f74  70207369  ight vector is p
// 4090:  746e696f  20676e69  74206e69  6f206568  ointing in the o
// 40a0:  69736f70  6420657a  63657269  6e6f6974  posize direction
// 40b0:  20736120  6867696c  69642074  74636572   as light direct
// 40c0:  0d6e6f69  660a0d0a  74616f6c  66696420  ion....float dif
// 40d0:  65737566  74636146  3d20726f  746f6420  fuseFactor = dot
// 40e0:  4c672d28  74686769  65726944  6f697463  (-gLightDirectio
// 40f0:  6e202c6e  616d726f  3b29576c  0a0d0a0d  n, normalW);....
// 4100:  69202f2f  69642066  73756666  63614665  // if diffuseFac
// 4110:  20726f74  2030203c  6e616874  69687420  tor < 0 than thi
// 4120:  72742073  676e6169  6920656c  61662073  s triangle is fa
// 4130:  676e6963  61776120  72662079  74206d6f  cing away from t
// 4140:  6c206568  74686769  0a0d0a0d  64666923  he light....#ifd
// 4150:  54206665  535f4f57  44454449  2f2f0a0d  ef TWO_SIDED..//
// 4160:  20664920  61206577  72206572  65646e65   If we are rende
// 4170:  676e6972  6f777420  6469732d  6d206465  ring two-sided m
// 4180:  72657461  2c6c6169  65687420  756a206e  aterial, then ju
// 4190:  61207473  74207362  64206568  75666669  st abs the diffu
// 41a0:  61466573  726f7463  206f7320  20656874  seFactor so the 
// 41b0:  6167656e  65766974  6f6e2820  6c692074  negative (not il
// 41c0:  696d756c  6574616e  76202964  65756c61  luminated) value
// 41d0:  69772073  61206c6c  206f736c  72206562  s will also be r
// 41e0:  65646e65  0d646572  6f6c660a  20337461  endered..float3 
// 41f0:  66666964  43657375  726f6c6f  61203d20  diffuseColor = a
// 4200:  64287362  75666669  61466573  726f7463  bs(diffuseFactor
// 4210:  0a0d3b29  736c6523  2f0a0d65  6173202f  );..#else..// sa
// 4220:  61727574  66206574  74636e75  3a6e6f69  turate function:
// 4230:  616c4320  2073706d  20656874  63657073   Clamps the spec
// 4240:  65696669  61762064  2065756c  68746977  ified value with
// 4250:  74206e69  72206568  65676e61  20666f20  in the range of 
// 4260:  6f742030  2d203120  206f7320  6167656e  0 to 1 - so nega
// 4270:  65766974  6f6e2820  6c692074  696d756c  tive (not illumi
// 4280:  6574616e  76202964  65756c61  72612073  nated) values ar
// 4290:  6c632065  65706d61  6f742064  0a0d3020  e clamped to 0..
// 42a0:  616f6c66  64203374  75666669  6f436573  float3 diffuseCo
// 42b0:  20726f6c  6173203d  61727574  64286574  lor = saturate(d
// 42c0:  75666669  61466573  726f7463  0a0d3b29  iffuseFactor);..
// 42d0:  646e6523  0a0d6669  0a0d0a0d  41202f2f  #endif......// A
// 42e0:  67206464  69626d41  43746e65  726f6c6f  dd gAmbientColor
// 42f0:  206f7420  66666964  43657375  726f6c6f   to diffuseColor
// 4300:  646e6120  6c756d20  6c706974  79622079   and multiply by
// 4310:  65687420  6f6c6720  206c6162  66666964   the global diff
// 4320:  20657375  6f6c6f63  660a0d72  74616f6c  use color..float
// 4330:  69662033  436c616e  726f6c6f  73203d20  3 finalColor = s
// 4340:  72757461  28657461  626d4167  746e6569  aturate(gAmbient
// 4350:  6f6c6f43  202b2072  66666964  43657375  Color + diffuseC
// 4360:  726f6c6f  67202a20  6867694c  6c6f4374  olor * gLightCol
// 4370:  2029726f  4467202a  75666669  6f436573  or) * gDiffuseCo
// 4380:  2e726f6c  3b626772  0a0d0a0d  64666923  lor.rgb;....#ifd
// 4390:  50206665  505f5245  544e494f  4c4f435f  ef PER_POINT_COL
// 43a0:  0a0d524f  4d202f2f  69746c75  20796c70  OR..// Multiply 
// 43b0:  68746977  65687420  646e6920  64697669  with the individ
// 43c0:  206c6175  6e696f70  6f632074  0d726f6c  ual point color.
// 43d0:  6e69660a  6f436c61  20726f6c  69203d2a  .finalColor *= i
// 43e0:  7475706e  6c6f632e  0d3b726f  6e65230a  nput.color;..#en
// 43f0:  0d666964  0d0a0d0a  6669230a  20666564  dif......#ifdef 
// 4400:  43455053  52414c55  47494c5f  4e495448  SPECULAR_LIGHTIN
// 4410:  660a0d47  74616f6c  6f702033  3d205773  G..float3 posW =
// 4420:  6c756d20  6f6c6628  28347461  75706e69   mul(float4(inpu
// 4430:  6f702e74  202c4c73  66302e31  67202c29  t.posL, 1.0f), g
// 4440:  6c726f57  782e2964  0d3b7a79  6f6c660a  World).xyz;..flo
// 4450:  20337461  79456f74  203d2065  6d726f6e  at3 toEye = norm
// 4460:  7a696c61  45672865  6f506579  2d205773  alize(gEyePosW -
// 4470:  736f7020  0d3b2957  2f0a0d0a  6c42202f   posW);....// Bl
// 4480:  2d6e6e69  6e6f6850  70732067  61756365  inn-Phong specua
// 4490:  2072616c  6867696c  676e6974  73752820  lar lighting (us
// 44a0:  20676e69  666c6168  63657620  20726f74  ing half vector 
// 44b0:  74736e69  20646165  7220666f  656c6665  instead of refle
// 44c0:  6f697463  0a0d296e  53202f2f  61206565  ction)..// See a
// 44d0:  3a6f736c  74746820  2f3a7370  2e6e652f  lso: https://en.
// 44e0:  696b6977  69646570  726f2e61  69772f67  wikipedia.org/wi
// 44f0:  422f696b  6e6e696c  25324525  39253038  ki/Blinn%E2%80%9
// 4500:  6f685033  735f676e  69646168  6d5f676e  3Phong_shading_m
// 4510:  6c65646f  6c660a0d  3374616f  6c616820  odel..float3 hal
// 4520:  72694466  6e203d20  616d726f  657a696c  fDir = normalize
// 4530:  456f7428  2d206579  694c6720  44746867  (toEye - gLightD
// 4540:  63657269  6e6f6974  0a0d3b29  2f2f0a0d  irection);....//
// 4550:  65746e49  7469736e  666f2079  65687420  Intensity of the
// 4560:  65707320  616c7563  696c2072  0d746867   specular light.
// 4570:  6f6c660a  73207461  46636570  6f746361  .float specFacto
// 4580:  203d2072  28776f70  75746173  65746172  r = pow(saturate
// 4590:  746f6428  726f6e28  576c616d  6168202c  (dot(normalW, ha
// 45a0:  6944666c  2c292972  70536720  6c756365  lfDir)), gSpecul
// 45b0:  6f437261  50726f6c  7265776f  3b29772e  arColorPower.w);
// 45c0:  0a0d0a0d  41202f2f  73206464  75636570  ....// Add specu
// 45d0:  2072616c  6f6c6f63  6f742072  65687420  lar color to the
// 45e0:  6e696620  6c206c61  74686769  69660a0d   final light..fi
// 45f0:  436c616e  726f6c6f  203d2b20  75746173  nalColor += satu
// 4600:  65746172  65707328  63614663  20726f74  rate(specFactor 
// 4610:  5367202a  75636570  4372616c  726f6c6f  * gSpecularColor
// 4620:  65776f50  79782e72  0d3b297a  6e65230a  Power.xyz);..#en
// 4630:  0d666964  230a0d0a  65646669  45522066  dif....#ifdef RE
// 4640:  5245444e  524f4e5f  5f4c414d  54434556  NDER_NORMAL_VECT
// 4650:  415f524f  4f435f53  0d524f4c  6e69660a  OR_AS_COLOR..fin
// 4660:  6f436c61  20726f6c  6261203d  6f6e2873  alColor = abs(no
// 4670:  6c616d72  203b2957  52202f2f  65646e65  rmalW); // Rende
// 4680:  6f6e2072  6c616d72  63657620  20726f74  r normal vector 
// 4690:  63207361  726f6c6f  20582820  65726964  as color (X dire
// 46a0:  6f697463  7369206e  6f687320  61206e77  ction is shown a
// 46b0:  65522073  6f632064  2c726f6c  61207920  s Red color, y a
// 46c0:  72472073  206e6565  20646e61  7361207a  s Green and z as
// 46d0:  756c4220  6f632065  29726f6c  0a0d0a0d   Blue color)....
// 46e0:  54202f2f  66206568  6f6c6c6f  676e6977  // The following
// 46f0:  646f6320  61632065  6562206e  65737520   code can be use
// 4700:  6f742064  6f687320  6f702077  69746973  d to show positi
// 4710:  6e206576  616d726f  782e576c  6c617620  ve normalW.x val
// 4720:  20736575  72207361  70206465  656c7869  ues as red pixle
// 4730:  6e612073  656e2064  69746167  6e206576  s and negative n
// 4740:  616d726f  782e576c  6c617620  20736575  ormalW.x values 
// 4750:  62207361  2065756c  65786970  2820736c  as blue pixels (
// 4760:  75746173  65746172  74656d20  20646f68  saturate method 
// 4770:  6d616c63  76207370  65756c61  6d732073  clamps values sm
// 4780:  656c6c61  68742072  30206e61  206f7420  aller than 0 to 
// 4790:  6e612030  69622064  72656767  65687420  0 and bigger the
// 47a0:  2031206e  31206f74  0a0d2e29  69662f2f  n 1 to 1)...//fi
// 47b0:  436c616e  726f6c6f  66203d20  74616f6c  nalColor = float
// 47c0:  61732833  61727574  6e286574  616d726f  3(saturate(norma
// 47d0:  782e576c  30202c29  6173202c  61727574  lW.x), 0, satura
// 47e0:  2d286574  6d726f6e  2e576c61  3b292978  te(-normalW.x));
// 47f0:  65230a0d  6669646e  0a0d0a0d  46202f2f  ..#endif....// F
// 4800:  6c616e69  6120796c  74206464  61206568  inally add the a
// 4810:  6168706c  61686320  6c656e6e  646e6120  lpha channel and
// 4820:  74756f20  74207570  63206568  726f6c6f   outpu the color
// 4830:  726f6620  65687420  78697020  73206c65   for the pixel s
// 4840:  65646168  6f0a0d72  75707475  6f632e74  hader..output.co
// 4850:  20726f6c  6c66203d  3474616f  74617328  lor = float4(sat
// 4860:  74617275  69662865  436c616e  726f6c6f  urate(finalColor
// 4870:  67202c29  66666944  43657375  726f6c6f  ), gDiffuseColor
// 4880:  3b29612e  0a0d0a0d  75746572  6f206e72  .a);....return o
// 4890:  75707475  0a0d3b74  0d0a0d7d  2f0a0d0a  utput;..}....../
// 48a0:  6854202f  67207369  656d6f65  20797274  / This geometry 
// 48b0:  64616873  72207265  69757165  71207365  shader requies q
// 48c0:  55646175  61204870  7120646e  52646175  uadUpH and quadR
// 48d0:  74686769  6f742048  20656220  73736170  ightH to be pass
// 48e0:  74206465  7469206f  206f7320  74616874  ed to it so that
// 48f0:  20746920  206e6163  61657263  61206574   it can create a
// 4900:  61757120  65642064  656e6966  6e692064   quad defined in
// 4910:  65687420  726f7720  7320646c  65636170   the world space
// 4920:  6e612820  6f6e2064  63732074  6e656572   (and not screen
// 4930:  61707320  0d296563  616d5b0a  72657678   space)..[maxver
// 4940:  63786574  746e756f  5d293428  6f760a0d  texcount(4)]..vo
// 4950:  47206469  68535f53  64656461  6e696f50  id GS_ShadedPoin
// 4960:  6f6c4374  70286475  746e696f  4f454720  tCloud(point GEO
// 4970:  204e495f  6e696f70  315b7374  69202c5d  _IN points[1], i
// 4980:  74756f6e  69725420  6c676e61  72745365  nout TriangleStr
// 4990:  3c6d6165  5f4f4547  3e54554f  74756f20  eam<GEO_OUT> out
// 49a0:  29747570  0d7b0a0d  6f6c660a  20347461  put)..{..float4 
// 49b0:  6f6c6f63  203d2072  6e696f70  305b7374  color = points[0
// 49c0:  6f632e5d  3b726f6c  0a0d0a0d  5f4f4547  ].color;....GEO_
// 49d0:  2054554f  5d345b76  0d0a0d3b  202f2f0a  OUT v[4];....// 
// 49e0:  73736150  65687420  6c6f6320  6620726f  Pass the color f
// 49f0:  68747275  74207265  6874206f  69702065  urther to the pi
// 4a00:  206c6578  64616873  0a0d7265  5d305b76  xel shader..v[0]
// 4a10:  6c6f632e  3d20726f  6c6f6320  0d3b726f  .color = color;.
// 4a20:  315b760a  6f632e5d  20726f6c  6f63203d  .v[1].color = co
// 4a30:  3b726f6c  5b760a0d  632e5d32  726f6c6f  lor;..v[2].color
// 4a40:  63203d20  726f6c6f  760a0d3b  2e5d335b   = color;..v[3].
// 4a50:  6f6c6f63  203d2072  6f6c6f63  0a0d3b72  color = color;..
// 4a60:  0a0d0a0d  616f6c66  70203474  2048736f  ....float4 posH 
// 4a70:  20202020  203d2020  6e696f70  305b7374        = points[0
// 4a80:  6f702e5d  0d3b4873  6f6c660a  20347461  ].posH;..float4 
// 4a90:  64617571  20487055  3d202020  696f7020  quadUpH    = poi
// 4aa0:  5b73746e  712e5d30  55646175  0d3b4870  nts[0].quadUpH;.
// 4ab0:  6f6c660a  20347461  64617571  68676952  .float4 quadRigh
// 4ac0:  3d204874  696f7020  5b73746e  712e5d30  tH = points[0].q
// 4ad0:  52646175  74686769  0a0d3b48  5b760a0d  uadRightH;....v[
// 4ae0:  702e5d30  2048736f  6f70203d  2d204873  0].posH = posH -
// 4af0:  61757120  67695264  20487468  7571202b   quadRightH + qu
// 4b00:  70556461  0a0d3b48  5d315b76  736f702e  adUpH;..v[1].pos
// 4b10:  203d2048  48736f70  71202b20  52646175  H = posH + quadR
// 4b20:  74686769  202b2048  64617571  3b487055  ightH + quadUpH;
// 4b30:  0a0d0a0d  5d325b76  736f702e  203d2048  ....v[2].posH = 
// 4b40:  48736f70  71202d20  52646175  74686769  posH - quadRight
// 4b50:  202d2048  64617571  3b487055  5b760a0d  H - quadUpH;..v[
// 4b60:  702e5d33  2048736f  6f70203d  2b204873  3].posH = posH +
// 4b70:  61757120  67695264  20487468  7571202d   quadRightH - qu
// 4b80:  70556461  0a0d3b48  0a0d0a0d  43202f2f  adUpH;......// C
// 4b90:  74616572  72542065  676e6169  7453656c  reate TriangleSt
// 4ba0:  20706972  65657328  69687420  696c2073  rip (see this li
// 4bb0:  66206b6e  7420726f  6e616972  73656c67  nk for triangles
// 4bc0:  69726f20  61746e65  6e6f6974  7468203a   orientation: ht
// 4bd0:  3a737074  736d2f2f  6d2e6e64  6f726369  tps://msdn.micro
// 4be0:  74666f73  6d6f632e  2d6e652f  6c2f7375  soft.com/en-us/l
// 4bf0:  61726269  772f7972  6f646e69  642f7377  ibrary/windows/d
// 4c00:  746b7365  622f706f  36303262  28343732  esktop/bb206274(
// 4c10:  73763d76  2935382e  7073612e  0a0d2978  v=vs.85).aspx)..
// 4c20:  7074756f  412e7475  6e657070  5b762864  output.Append(v[
// 4c30:  3b295d30  756f0a0d  74757074  7070412e  0]);..output.App
// 4c40:  28646e65  5d315b76  0a0d3b29  7074756f  end(v[1]);..outp
// 4c50:  412e7475  6e657070  5b762864  3b295d32  ut.Append(v[2]);
// 4c60:  756f0a0d  74757074  7070412e  28646e65  ..output.Append(
// 4c70:  5d335b76  0a0d3b29  756f0a0d  74757074  v[3]);....output
// 4c80:  7365522e  74726174  69727453  3b292870  .RestartStrip();
// 4c90:  0d7d0a0d  2a0a0d0a  0000002f  00000000  ..}....*/_______
// 4ca0:  00000000  00000000  00000000  00000000  ________________
// 4cb0:  00000000  00000000  00000000  00000000  ________________
// 4cc0:  00000000  00000000  00000000  00000000  ________________
// 4cd0:  00000000  00000000  00000000  00000000  ________________
// 4ce0:  effeeffe  00000001  00003698  5c3a4400  .....___.6___D:\
// 4cf0:  5c667057  7020796d  656a6f72  5c737463  Wpf\my projects\
// 4d00:  64336241  3362415c  58442e64  69676e45  Ab3d\Ab3d.DXEngi
// 4d10:  415c656e  2e643362  6e455844  656e6967  ne\Ab3d.DXEngine
// 4d20:  6670572e  6d61532e  73656c70  7365525c  .Wpf.Samples\Res
// 4d30:  6372756f  535c7365  65646168  535c7372  ources\Shaders\S
// 4d40:  65646168  696f5064  6c43746e  5364756f  hadedPointCloudS
// 4d50:  65646168  6c682e72  00006c73  775c3a64  hader.hlsl__d:\w
// 4d60:  6d5c6670  72702079  63656a6f  615c7374  pf\my projects\a
// 4d70:  5c643362  64336261  6578642e  6e69676e  b3d\ab3d.dxengin
// 4d80:  62615c65  642e6433  676e6578  2e656e69  e\ab3d.dxengine.
// 4d90:  2e667077  706d6173  5c73656c  6f736572  wpf.samples\reso
// 4da0:  65637275  68735c73  72656461  68735c73  urces\shaders\sh
// 4db0:  64656461  6e696f70  6f6c6374  68736475  adedpointcloudsh
// 4dc0:  72656461  736c682e  2f2f006c  65685720  ader.hlsl_// Whe
// 4dd0:  5754206e  49535f4f  20444544  64207369  n TWO_SIDED is d
// 4de0:  6e696665  202c6465  6e656874  69727420  efined, then tri
// 4df0:  6c676e61  61207365  69206572  6d756c6c  angles are illum
// 4e00:  74616e69  77206465  20687469  20656874  inated with the 
// 4e10:  656d6173  74616d20  61697265  6e6f206c  same material on
// 4e20:  65687420  6f726620  6120746e  6220646e   the front and b
// 4e30:  206b6361  65646973  2f0a0d2e  6854202f  ack side...// Th
// 4e40:  61207369  206f736c  75716572  64657269  is also required
// 4e50:  61687420  68742074  61522065  72657473   that the Raster
// 4e60:  72657a69  74617453  73692065  74657320  izerState is set
// 4e70:  206f7420  6c6c7543  65646f4e  65732820   to CullNode (se
// 4e80:  70412065  4d796c70  72657461  206c6169  e ApplyMaterial 
// 4e90:  53206e69  65646168  696f5064  6c43746e  in ShadedPointCl
// 4ea0:  4564756f  63656666  0d2e2974  202f2f0a  oudEffect)...// 
// 4eb0:  2f2f0a0d  65685720  5754206e  49535f4f  ..// When TWO_SI
// 4ec0:  20444544  6e207369  6420746f  6e696665  DED is not defin
// 4ed0:  28206465  63207369  656d6d6f  6465746e  ed (is commented
// 4ee0:  0130e21b  00000080  c76158a3  01d3b222  ..0..___.Xa."...
// 4ef0:  00000001  00000000  00000000  00000000  ._______________
// 4f00:  00000000  00000000  00000000  00000000  ________________
// 4f10:  00000000  00000000  00000000  00000000  ________________
// 4f20:  00000001  00000002  00000001  00000001  .___.___.___.___
// 4f30:  00000000  00000070  00000028  0130e21b  ____p___(___..0.
// 4f40:  64eb9884  000035b9  00000001  0000006f  ...d.5__.___o___
// 4f50:  00000070  00000000  00000000  00000000  p_______________
// 4f60:  00000000  00000000  00000000  00000000  ________________
// 4f70:  00000000  00000000  00000000  00000000  ________________
// 4f80:  00000000  00000000  00000000  00000000  ________________
// 4f90:  00000000  00000000  00000000  00000000  ________________
// 4fa0:  00000000  00000000  00000000  00000000  ________________
// 4fb0:  00000000  00000000  00000000  00000000  ________________
// 4fc0:  00000000  00000000  00000000  00000000  ________________
// 4fd0:  00000000  00000000  00000000  00000000  ________________
// 4fe0:  00000000  00000000  00000000  00000000  ________________
// 4ff0:  00000000  00000000  00000000  00000000  ________________
// 5000:  00000000  00000000  00000000  00000000  ________________
// 5010:  00000000  00000000  00000000  00000000  ________________
// 5020:  00000000  00000000  00000000  00000000  ________________
// 5030:  00000000  00000000  00000000  00000000  ________________
// 5040:  00000000  00000000  00000000  00000000  ________________
// 5050:  00000000  00000000  00000000  00000000  ________________
// 5060:  00000000  00000000  00000000  00000000  ________________
// 5070:  00000000  00000000  00000000  00000000  ________________
// 5080:  00000000  00000000  00000000  00000000  ________________
// 5090:  00000000  00000000  00000000  00000000  ________________
// 50a0:  00000000  00000000  00000000  00000000  ________________
// 50b0:  00000000  00000000  00000000  00000000  ________________
// 50c0:  00000000  00000000  00000000  00000000  ________________
// 50d0:  00000000  00000000  00000000  00000000  ________________
// 50e0:  00000004  113c0042  00000110  000a0100  .___B_<...___.._
// 50f0:  01d40001  000a3ad7  01d40001  694d3ad7  ._...:._._...:Mi
// 5100:  736f7263  2074666f  20295228  4c534c48  crosoft (R) HLSL
// 5110:  61685320  20726564  706d6f43  72656c69   Shader Compiler
// 5120:  2e303120  00000031  113d0046  736c6801   10.1___F_=..hls
// 5130:  616c466c  30007367  35303478  736c6800  lFlags_0x405_hls
// 5140:  7261546c  00746567  345f7367  6800305f  lTarget_gs_4_0_h
// 5150:  456c736c  7972746e  5f534700  64616853  lslEntry_GS_Shad
// 5160:  6f506465  43746e69  64756f6c  00000000  edPointCloud____
// 5170:  1110003a  00000000  000003e4  00000000  :_..____..______
// 5180:  0000041c  00000000  0000041c  00001008  ..______..__..__
// 5190:  00000080  47a00001  68535f53  64656461  .___._.GS_Shaded
// 51a0:  6e696f50  6f6c4374  00006475  113e002e  PointCloud__._>.
// 51b0:  00001005  756f0001  74757074  00000000  ..__._output____
// 51c0:  00000000  00000000  00000000  00000000  ________________
// 51d0:  00000000  00000000  00000000  11500016  ____________._P.
// 51e0:  00010010  00040000  00000080  041c0001  ._.___._.___._..
// 51f0:  00000000  113e002e  00001003  6f700009  ____._>...__._po
// 5200:  73746e69  00000000  00000000  00000000  ints____________
// 5210:  00000000  00000000  00000000  00000000  ________________
// 5220:  00000000  1150001a  00060001  00040000  ____._P.._.___._
// 5230:  00000080  041c0001  00000000  00000000  .___._..________
// 5240:  1150001a  00060001  00040004  00000080  ._P.._._._._.___
// 5250:  041c0001  00000004  00000000  1150001a  ._..._______._P.
// 5260:  00060001  00040008  00000080  041c0001  ._._._._.___._..
// 5270:  00000008  00000000  1150001a  00060001  ._______._P.._._
// 5280:  0004000c  00000080  041c0001  0000000c  ._._.___._...___
// 5290:  00000000  1150001a  00060001  00040010  ____._P.._._._._
// 52a0:  00000080  041c0001  00000010  00000000  .___._..._______
// 52b0:  1150001a  00060001  00040014  00000080  ._P.._._._._.___
// 52c0:  041c0001  00000014  00000000  1150001a  ._..._______._P.
// 52d0:  00060001  00040018  00000080  041c0001  ._._._._.___._..
// 52e0:  00000018  00000000  1150001a  00060001  ._______._P.._._
// 52f0:  0004001c  00000080  041c0001  0000001c  ._._.___._...___
// 5300:  00000000  113e002e  00001000  6f630008  ____._>._.__._co
// 5310:  00726f6c  00000000  00000000  00000000  lor_____________
// 5320:  00000000  00000000  00000000  00000000  ________________
// 5330:  00000000  11500016  00050000  00040000  ____._P.__.___._
// 5340:  00000098  00780001  00000000  11500016  .___._x_____._P.
// 5350:  00050000  00040004  00000098  00780001  __._._._.___._x_
// 5360:  00000004  11500016  00050000  00040008  .___._P.__._._._
// 5370:  00000098  00780001  00000008  11500016  .___._x_.___._P.
// 5380:  00050000  0004000c  00000098  00780001  __._._._.___._x_
// 5390:  0000000c  113e002a  00001009  00760008  .___*_>...__._v_
// 53a0:  00000000  00000000  00000000  00000000  ________________
// 53b0:  00000000  00000000  00000000  00000000  ________________
// 53c0:  11500016  00010003  00800000  00000080  ._P.._.___._.___
// 53d0:  041c0001  00000000  113e002a  00001000  ._..____*_>._.__
// 53e0:  6f700008  00004873  00000000  00000000  ._posH__________
// 53f0:  00000000  00000000  00000000  00000000  ________________
// 5400:  00000000  11500016  00050000  00040000  ____._P.__.___._
// 5410:  00000110  00880001  00000000  11500016  ..__._._____._P.
// 5420:  00050000  00040004  00000110  00880001  __._._._..__._._
// 5430:  00000004  11500016  00050000  00040008  .___._P.__._._._
// 5440:  00000110  022c0001  00000008  11500016  ..__._,..___._P.
// 5450:  00050000  0004000c  00000110  022c0001  __._._._..__._,.
// 5460:  0000000c  113e002e  0000100a  53700008  .___._>...__._pS
// 5470:  65657263  0000006e  00000000  00000000  creen___________
// 5480:  00000000  00000000  00000000  00000000  ________________
// 5490:  00000000  11500016  00050000  00040000  ____._P.__.___._
// 54a0:  0000012c  02280001  00000010  11500016  ,.__._(..___._P.
// 54b0:  00050000  00040004  0000012c  02280001  __._._._,.__._(.
// 54c0:  00000014  00060002  000000f4  00000018  .___._._.___.___
// 54d0:  00000001  a6e10110  1cdfe90b  d12b3e76  .___........v>+.
// 54e0:  0b817a11  000027cb  000000f2  00000498  .z...'__.___..__
// 54f0:  00000000  00010001  0000049c  00000000  ____._._..______
// 5500:  00000060  0000048c  00000080  800000aa  `___..__.___.__.
// 5510:  00000080  000000aa  00000098  800000af  .___.___.___.__.
// 5520:  00000098  000000af  000000b0  800000b0  .___.___.___.__.
// 5530:  000000b0  000000b0  000000c8  800000b1  .___.___.___.__.
// 5540:  000000c8  000000b1  000000e0  800000b2  .___.___.___.__.
// 5550:  000000e0  000000b2  000000f8  800000b5  .___.___.___.__.
// 5560:  000000f8  000000b5  00000110  800000b6  .___.___..__.__.
// 5570:  00000110  000000b6  0000012c  800000b8  ..__.___,.__.__.
// 5580:  0000012c  000000b8  00000148  800000b8  ,.__.___H.__.__.
// 5590:  00000148  000000b8  00000160  800000b8  H.__.___`.__.__.
// 55a0:  00000160  000000b8  0000017c  800000b8  `.__.___|.__.__.
// 55b0:  0000017c  000000b8  00000198  800000b8  |.__.___..__.__.
// 55c0:  00000198  000000b8  000001b0  800000b9  ..__.___..__.__.
// 55d0:  000001b0  000000b9  000001d0  800000b9  ..__.___..__.__.
// 55e0:  000001d0  000000b9  000001ec  800000b9  ..__.___..__.__.
// 55f0:  000001ec  000000b9  00000200  800000b9  ..__.____.__.__.
// 5600:  00000200  000000b9  00000218  800000bb  _.__.___..__.__.
// 5610:  00000218  000000bb  00000234  800000bb  ..__.___4.__.__.
// 5620:  00000234  000000bb  0000024c  800000bb  4.__.___L.__.__.
// 5630:  0000024c  000000bb  00000268  800000bb  L.__.___h.__.__.
// 5640:  00000268  000000bb  00000284  800000bb  h.__.___..__.__.
// 5650:  00000284  000000bb  0000029c  800000bc  ..__.___..__.__.
// 5660:  0000029c  000000bc  000002b8  800000bc  ..__.___..__.__.
// 5670:  000002b8  000000bc  000002d4  800000bc  ..__.___..__.__.
// 5680:  000002d4  000000bc  000002f0  800000bc  ..__.___..__.__.
// 5690:  000002f0  000000bc  0000030c  800000bc  ..__.___..__.__.
// 56a0:  0000030c  000000bc  00000324  800000bf  ..__.___$.__.__.
// 56b0:  00000324  000000bf  0000033c  800000bf  $.__.___<.__.__.
// 56c0:  0000033c  000000bf  00000354  800000bf  <.__.___T.__.__.
// 56d0:  00000354  000000bf  00000368  800000bf  T.__.___h.__.__.
// 56e0:  00000368  000000bf  0000037c  800000bf  h.__.___|.__.__.
// 56f0:  0000037c  000000bf  00000380  800000c0  |.__.___..__.__.
// 5700:  00000380  000000c0  00000398  800000c0  ..__.___..__.__.
// 5710:  00000398  000000c0  000003b0  800000c0  ..__.___..__.__.
// 5720:  000003b0  000000c0  000003c4  800000c0  ..__.___..__.__.
// 5730:  000003c4  000000c0  000003d8  800000c0  ..__.___..__.__.
// 5740:  000003d8  000000c0  000003dc  800000c1  ..__.___..__.__.
// 5750:  000003dc  000000c1  000003f4  800000c1  ..__.___..__.__.
// 5760:  000003f4  000000c1  0000040c  800000c1  ..__.___..__.__.
// 5770:  0000040c  000000c1  00000420  800000c1  ..__.___ .__.__.
// 5780:  00000420  000000c1  00000434  800000c1   .__.___4.__.__.
// 5790:  00000434  000000c1  00000438  800000c2  4.__.___8.__.__.
// 57a0:  00000438  000000c2  00000450  800000c2  8.__.___P.__.__.
// 57b0:  00000450  000000c2  00000468  800000c2  P.__.___h.__.__.
// 57c0:  00000468  000000c2  0000047c  800000c2  h.__.___|.__.__.
// 57d0:  0000047c  000000c2  00000490  800000c2  |.__.___..__.__.
// 57e0:  00000490  000000c2  00000494  800000c4  ..__.___..__.__.
// 57f0:  00000494  000000c4  00000498  800000c5  ..__.___..__.__.
// 5800:  00000498  000000c5  00200002  001f0009  ..__.___._ _._._
// 5810:  00140002  00130002  00140002  00130002  ._._._._._._._._
// 5820:  00140002  00130002  00140002  00130002  ._._._._._._._._
// 5830:  001e0002  001d0009  00230002  00220013  ._._._._._#_._"_
// 5840:  007a0002  00410027  007a0002  005e0016  ._z_'_A_._z_._^_
// 5850:  007a0002  005e0016  007a0002  00680015  ._z_._^_._z_._h_
// 5860:  007a0002  00790002  007a0002  005e0016  ._z_._y_._z_._^_
// 5870:  007a0002  00680015  007a0002  00790002  ._z_._h_._z_._y_
// 5880:  007a0002  00790002  007b0002  005e0044  ._z_._y_._{_D_^_
// 5890:  007b0002  005f0016  007b0002  005f0016  ._{_.___._{_.___
// 58a0:  007b0002  00690015  007b0002  007a0002  ._{_._i_._{_._z_
// 58b0:  007b0002  00410027  007b0002  005e0044  ._{_'_A_._{_D_^_
// 58c0:  007b0002  005f0016  007b0002  00690015  ._{_.___._{_._i_
// 58d0:  007b0002  007a0002  00150002  00130010  ._{_._z_._._._._
// 58e0:  00150002  00130010  00150002  00140002  ._._._._._._._._
// 58f0:  00150002  00140002  00150002  00140002  ._._._._._._._._
// 5900:  00150002  00130010  00150002  00130010  ._._._._._._._._
// 5910:  00150002  00140002  00150002  00140002  ._._._._._._._._
// 5920:  00150002  00140002  00150002  00130010  ._._._._._._._._
// 5930:  00150002  00130010  00150002  00140002  ._._._._._._._._
// 5940:  00150002  00140002  00150002  00140002  ._._._._._._._._
// 5950:  00150002  00130010  00150002  00130010  ._._._._._._._._
// 5960:  00150002  00140002  00150002  00140002  ._._._._._._._._
// 5970:  00150002  00140002  00170002  00160002  ._._._._._._._._
// 5980:  00010001  00010001  000000f6  00000004  ._._._._.___.___
// 5990:  00000000  00000008  00000000  00000024  ____._______$___
// 59a0:  00000000  00000000  00000000  00000000  ________________
// 59b0:  00000000  00000000  00000000  00000000  ________________
// 59c0:  00000000  00000000  00000000  00000000  ________________
// 59d0:  00000000  00000000  00000000  00000000  ________________
// 59e0:  00000000  00000000  00000000  00000000  ________________
// 59f0:  00000000  00000000  00000000  00000000  ________________
// 5a00:  00000000  00000000  00000000  00000000  ________________
// 5a10:  00000000  00000000  00000000  00000000  ________________
// 5a20:  00000000  00000000  00000000  00000000  ________________
// 5a30:  00000000  00000000  00000000  00000000  ________________
// 5a40:  00000000  00000000  00000000  00000000  ________________
// 5a50:  00000000  00000000  00000000  00000000  ________________
// 5a60:  00000000  00000000  00000000  00000000  ________________
// 5a70:  00000000  00000000  00000000  00000000  ________________
// 5a80:  00000000  00000000  00000000  00000000  ________________
// 5a90:  00000000  00000000  00000000  00000000  ________________
// 5aa0:  00000000  00000000  00000000  00000000  ________________
// 5ab0:  00000000  00000000  00000000  00000000  ________________
// 5ac0:  00000000  00000000  00000000  00000000  ________________
// 5ad0:  00000000  00000000  00000000  00000000  ________________
// 5ae0:  0131ca0b  00000038  00001000  0000100d  ..1.8____.__..__
// 5af0:  00000110  ffff000a  00000004  0003ffff  ..__._...___..._
// 5b00:  00000000  00000034  00000034  00000008  ____4___4___.___
// 5b10:  0000003c  00000000  151b0016  00000040  <_______._..@___
// 5b20:  00000004  6c660010  3474616f  f1f2f300  .___._float4_...
// 5b30:  12030022  0003150d  00001000  6f700000  "_.....__.____po
// 5b40:  f1004873  0003150d  00001000  6f630010  sH_....__.__._co
// 5b50:  00726f6c  1505001e  00000002  00001001  lor_._...___..__
// 5b60:  00000000  00000000  45470020  4e495f4f  ________ _GEO_IN
// 5b70:  f1f2f300  15160012  00001002  00000022  _...._....__"___
// 5b80:  00000020  f1000020  1505001e  00000002   ___ __.._...___
// 5b90:  00001001  00000000  00000000  45470020  ..__________ _GE
// 5ba0:  554f5f4f  f1f20054  1517000e  00001004  O_OUT_..._....__
// 5bb0:  0000020f  f1f20000  1201000e  00000002  ..____..._...___
// 5bc0:  00001003  00001005  1518000a  00000003  ..__..__._...___
// 5bd0:  00010001  1008000e  00001007  00020017  ._._._....__._._
// 5be0:  00001006  15160012  00001004  00000022  ..__._....__"___
// 5bf0:  00000020  f1000080  151b0016  00000040   ___.__.._..@___
// 5c00:  00000002  6c660008  3274616f  f1f2f300  .___._float2_...
// 5c10:  1518000a  0000100a  00010001  1518000a  ._....__._._._..
// 5c20:  0000100b  02000001  00000000  00000000  ..__.__.________
// 5c30:  00000000  00000000  00000000  00000000  ________________
// 5c40:  00000000  00000000  00000000  00000000  ________________
// 5c50:  00000000  00000000  00000000  00000000  ________________
// 5c60:  00000000  00000000  00000000  00000000  ________________
// 5c70:  00000000  00000000  00000000  00000000  ________________
// 5c80:  00000000  00000000  00000000  00000000  ________________
// 5c90:  00000000  00000000  00000000  00000000  ________________
// 5ca0:  00000000  00000000  00000000  00000000  ________________
// 5cb0:  00000000  00000000  00000000  00000000  ________________
// 5cc0:  00000000  00000000  00000000  00000000  ________________
// 5cd0:  00000000  00000000  00000000  00000000  ________________
// 5ce0:  0131ca0b  00000038  00001000  00001000  ..1.8____.___.__
// 5cf0:  00000000  ffff000b  00000004  0003ffff  ____._...___..._
// 5d00:  00000000  00000000  00000000  00000000  ________________
// 5d10:  00000000  00000000  00000000  00000000  ________________
// 5d20:  00000000  00000000  00000000  00000000  ________________
// 5d30:  00000000  00000000  00000000  00000000  ________________
// 5d40:  00000000  00000000  00000000  00000000  ________________
// 5d50:  00000000  00000000  00000000  00000000  ________________
// 5d60:  00000000  00000000  00000000  00000000  ________________
// 5d70:  00000000  00000000  00000000  00000000  ________________
// 5d80:  00000000  00000000  00000000  00000000  ________________
// 5d90:  00000000  00000000  00000000  00000000  ________________
// 5da0:  00000000  00000000  00000000  00000000  ________________
// 5db0:  00000000  00000000  00000000  00000000  ________________
// 5dc0:  00000000  00000000  00000000  00000000  ________________
// 5dd0:  00000000  00000000  00000000  00000000  ________________
// 5de0:  00000000  00000000  00000000  00000000  ________________
// 5df0:  00000000  00000000  00000000  00000000  ________________
// 5e00:  00000000  00000000  00000000  00000000  ________________
// 5e10:  00000000  00000000  00000000  00000000  ________________
// 5e20:  00000000  00000000  00000000  00000000  ________________
// 5e30:  00000000  00000000  00000000  00000000  ________________
// 5e40:  00000000  00000000  00000000  00000000  ________________
// 5e50:  00000000  00000000  00000000  00000000  ________________
// 5e60:  00000000  00000000  00000000  00000000  ________________
// 5e70:  00000000  00000000  00000000  00000000  ________________
// 5e80:  00000000  00000000  00000000  00000000  ________________
// 5e90:  00000000  00000000  00000000  00000000  ________________
// 5ea0:  00000000  00000000  00000000  00000000  ________________
// 5eb0:  00000000  00000000  00000000  00000000  ________________
// 5ec0:  00000000  00000000  00000000  00000000  ________________
// 5ed0:  00000000  00000000  00000000  00000000  ________________
// 5ee0:  6c69706d  61685365  50646564  746e696f  mpileShadedPoint
// 5ef0:  756f6c43  61685364  2e726564  0d746162  CloudShader.bat.
// 5f00:  232f2f0a  69666564  5020656e  505f5245  .//#define PER_P
// 5f10:  544e494f  4c4f435f  0d3b524f  0d0a0d0a  OINT_COLOR;.....
// 5f20:  202f2f0a  6e656857  45505320  414c5543  .// When SPECULA
// 5f30:  494c5f52  49544847  6920474e  65642073  R_LIGHTING is de
// 5f40:  656e6966  74202c64  76206568  65747265  fined, the verte
// 5f50:  68732078  72656461  73616820  646f6320  x shader has cod
// 5f60:  6f742065  6c616320  616c7563  73206574  e to calculate s
// 5f70:  75636570  2072616c  6867696c  6f632074  pecular light co
// 5f80:  2e726f6c  2f2f0a0d  6d6f4320  746e656d  lor...// Comment
// 5f90:  20676e69  73696874  6e6f6320  6e617473  ing this constan
// 5fa0:  6c732074  6c746769  6d692079  766f7270  t sligtly improv
// 5fb0:  74207365  70206568  6f667265  6e616d72  es the performan
// 5fc0:  6f206563  68742066  65762065  78657472  ce of the vertex
// 5fd0:  61687320  2e726564  2f2f0a0d  746f4e20   shader...// Not
// 5fe0:  68742065  74207461  65726568  65726120  e that there are
// 5ff0:  66206120  66207765  646c6569  6e692073   a few fields in
// 6000:  65687420  56626320  65747265  66754278   the cbVertexBuf
// 6010:  20726566  74616874  65726120  65737520  fer that are use
// 6020:  6e6f2064  6620796c  7320726f  75636570  d only for specu
// 6030:  6320616c  726f6c6f  57672820  646c726f  la color (gWorld
// 6040:  4567202c  6f506579  202c5773  65705367  , gEyePosW, gSpe
// 6050:  616c7563  6c6f4372  6f50726f  29726577  cularColorPower)
// 6060:  2f0a0d2e  6854202f  61207965  6e206572  ...// They are n
// 6070:  7220746f  766f6d65  77206465  206e6568  ot removed when 
// 6080:  43455053  52414c55  47494c5f  4e495448  SPECULAR_LIGHTIN
// 6090:  73692047  6d6f6320  746e656d  62206465  G is commented b
// 60a0:  75616365  74206573  20736968  6c756f77  ecause this woul
// 60b0:  6f632064  696c706d  65746163  65687420  d complicate the
// 60c0:  66666520  20746365  65646f63  206e6920   effect code in 
// 60d0:  77207363  65726568  20657720  6c756f77  cs where we woul
// 60e0:  65722064  72697571  77742065  6576206f  d require two ve
// 60f0:  6f697372  6f20736e  6f632066  6174736e  rsions of consta
// 6100:  6220746e  65666675  6e612072  68742064  nt buffer and th
// 6110:  64207369  2073656f  20746f6e  65766168  is does not have
// 6120:  796e6120  72657020  6d726f66  65636e61   any performance
// 6130:  66666520  2e746365  2f2f0a0d  74754220   effect...// But
// 6140:  20666920  20756f79  6e206f64  7220746f   if you do not r
// 6150:  69757165  74206572  73206568  75636570  equire the specu
// 6160:  2072616c  6867696c  61632074  6c75636c  lar light calcul
// 6170:  6f697461  202c736e  6e656874  69687420  ations, then thi
// 6180:  61702073  6f207472  68742066  62632065  s part of the cb
// 6190:  74726556  75427865  72656666  646e6120  VertexBuffer and
// 61a0:  206e6920  20656874  64616853  6f506465   in the ShadedPo
// 61b0:  43746e69  64756f6c  65666645  63207463  intCloudEffect c
// 61c0:  62206e61  6f632065  6e656d6d  2e646574  an be commented.
// 61d0:  64230a0d  6e696665  50532065  4c554345  ..#define SPECUL
// 61e0:  4c5f5241  54484749  0d474e49  2f0a0d0a  AR_LIGHTING..../
// 61f0:  6857202f  64206e65  6e696665  74206465  / When defined t
// 6200:  70206568  746e696f  6c6f6320  6920726f  he point color i
// 6210:  65642073  656e6966  79622064  65687420  s defined by the
// 6220:  6c617620  6f206575  6f6e2066  6c616d72   value of normal
// 6230:  63657620  0d726f74  232f2f0a  69666564   vector..//#defi
// 6240:  5220656e  45444e45  4f4e5f52  4c414d52  ne RENDER_NORMAL
// 6250:  4345565f  5f524f54  435f5341  524f4c4f  _VECTOR_AS_COLOR
// 6260:  0d0a0d3b  2d2f2f0a  2d2d2d2d  2d2d2d2d  ;....//---------
// 6270:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6280:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6290:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 62a0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 62b0:  2d2d2d2d  2f2f0a0d  6e6f4320  6e617473  ----..// Constan
// 62c0:  75622074  72656666  2f0a0d73  2d2d2d2f  t buffers..//---
// 62d0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 62e0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 62f0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6300:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6310:  2d2d2d2d  2d2d2d2d  0a0d2d2d  2f2f0a0d  ----------....//
// 6320:  75735520  796c6c61  20657720  61657263   Usually we crea
// 6330:  32206574  6e6f6320  6e617473  75622074  te 2 constant bu
// 6340:  72656666  70203a73  72467265  20656d61  ffers: perFrame 
// 6350:  20646e61  4f726570  63656a62  54202e74  and perObject. T
// 6360:  20736968  20796177  6e206577  20646565  his way we need 
// 6370:  75206f74  74616470  68742065  65702065  to update the pe
// 6380:  61724672  6f20656d  20796c6e  65636e6f  rFrame only once
// 6390:  72657020  61726620  0d2e656d  202f2f0a   per frame...// 
// 63a0:  20747542  61757375  20796c6c  6e696f50  But usually Poin
// 63b0:  6f6c4374  20736475  20657261  20746f6e  tClouds are not 
// 63c0:  646e6572  64657265  6e616d20  69742079  rendered many ti
// 63d0:  2073656d  77206f73  61632065  656d206e  mes so we can me
// 63e0:  20656772  206c6c61  61746164  746e6920  rge all data int
// 63f0:  6e6f206f  6f632065  6174736e  6220746e  o one constant b
// 6400:  65666675  0a0d2e72  62630a0d  65666675  uffer.....cbuffe
// 6410:  62632072  74726556  75427865  72656666  r cbVertexBuffer
// 6420:  72203a20  73696765  28726574  0d293262   : register(b2).
// 6430:  0a0d7b0a  202f2f09  656d6163  70206172  .{...// camera p
// 6440:  65706f72  65697472  0a0d3a73  776f7209  roperties:...row
// 6450:  6a616d5f  6620726f  74616f6c  20347834  _major float4x4 
// 6460:  726f5767  3a20646c  524f5720  0d3b444c  gWorld : WORLD;.
// 6470:  6f72090a  616d5f77  20726f6a  616f6c66  ..row_major floa
// 6480:  34783474  6f576720  56646c72  50776569  t4x4 gWorldViewP
// 6490:  656a6f72  6f697463  2020206e  4f57203a  rojection   : WO
// 64a0:  56444c52  50574549  454a4f52  4f495443  RLDVIEWPROJECTIO
// 64b0:  0a0d3b4e  776f7209  6a616d5f  6620726f  N;...row_major f
// 64c0:  74616f6c  20347834  726f5767  6e49646c  loat4x4 gWorldIn
// 64d0:  73726576  61725465  6f70736e  3a206573  verseTranspose :
// 64e0:  524f5720  4e49444c  53524556  41525445   WORLDINVERSETRA
// 64f0:  4f50534e  0d3b4553  090a0d0a  616f6c66  NSPOSE;.....floa
// 6500:  67203374  50657945  3b57736f  0a0d0a0d  t3 gEyePosW;....
// 6510:  202f2f09  626f6c67  70206c61  6c657869  .// global pixel
// 6520:  6f727020  74726570  3a736569  66090a0d   properties:...f
// 6530:  74616f6c  44672034  75666669  6f436573  loat4 gDiffuseCo
// 6540:  20726f6c  20202020  203a2020  4f4c4f43  lor       : COLO
// 6550:  2f203b52  6854202f  63207369  726f6c6f  R; // This color
// 6560:  20736920  746c756d  696c7069  77206465   is multiplied w
// 6570:  20687469  20656874  6f6c6f63  666f2072  ith the color of
// 6580:  63616520  69702068  206c6578  69666564   each pixel defi
// 6590:  2064656e  56206e69  4e495f53  3b545550  ned in VS_INPUT;
// 65a0:  20744920  6f736c61  66656420  20656e69   It also define 
// 65b0:  20656874  626f6c67  61206c61  6168706c  the global alpha
// 65c0:  6c6f6320  7620726f  65756c61  726f6620   color value for
// 65d0:  6c6c6120  78697020  0d736c65  6c66090a   all pixels...fl
// 65e0:  3474616f  70536720  6c756365  6f437261  oat4 gSpecularCo
// 65f0:  50726f6c  7265776f  43203a20  524f4c4f  lorPower : COLOR
// 6600:  0d0a0d3b  2f2f090a  67696c20  70207468  ;.....// light p
// 6610:  65706f72  65697472  0a0d3a73  6f6c6609  roperties:...flo
// 6620:  20337461  626d4167  746e6569  6f6c6f43  at3 gAmbientColo
// 6630:  203a2072  4f4c4f43  0a0d3b52  6f6c6609  r : COLOR;...flo
// 6640:  20337461  67694c67  69447468  74636572  at3 gLightDirect
// 6650:  3b6e6f69  66090a0d  74616f6c  4c672033  ion;...float3 gL
// 6660:  74686769  6f6c6f43  203a2072  4f4c4f43  ightColor : COLO
// 6670:  0a0d3b52  0a0d3b7d  62630a0d  65666675  R;..};....cbuffe
// 6680:  62632072  6d6f6547  42797465  65666675  r cbGeometyBuffe
// 6690:  7b0a0d72  66090a0d  74616f6c  61682032  r..{...float2 ha
// 66a0:  6950666c  536c6578  50657a69  69567265  lfPixelSizePerVi
// 66b0:  6f707765  203b7472  3d202f2f  6c616820  ewport; // = hal
// 66c0:  78695066  69536c65  2f20657a  65695620  fPixelSize / Vie
// 66d0:  726f7077  28202074  65746f6e  696c203a  wport  (note: li
// 66e0:  6854656e  6e6b6369  20737365  66207369  neThickness is f
// 66f0:  74616f6c  646e6120  746f6e20  6f6c6620  loat and not flo
// 6700:  29327461  3b7d0a0d  0a0d0a0d  2d2d2f2f  at2)..};....//--
// 6710:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6720:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6730:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6740:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6750:  2d2d2d2d  2d2d2d2d  0d2d2d2d  202f2f0a  -----------..// 
// 6760:  64616853  49207265  7475706e  4f202f20  Shader Input / O
// 6770:  75707475  74532074  74637572  73657275  utput Structures
// 6780:  2f2f0a0d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ..//------------
// 6790:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 67a0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 67b0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 67c0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 67d0:  730a0d2d  63757274  53562074  504e495f  -..struct VS_INP
// 67e0:  0a0d5455  090a0d7b  616f6c66  70203374  UT..{...float3 p
// 67f0:  204c736f  3a202020  534f5020  4f495449  osL    : POSITIO
// 6800:  0a0d3b4e  6f6c6609  20337461  6d726f6e  N;...float3 norm
// 6810:  204c6c61  4f4e203a  4c414d52  0d0a0d3b  alL : NORMAL;...
// 6820:  6669230a  20666564  5f524550  4e494f50  .#ifdef PER_POIN
// 6830:  4f435f54  0d524f4c  6c66090a  3374616f  T_COLOR...float3
// 6840:  6c6f6320  2020726f  43203a20  524f4c4f   color   : COLOR
// 6850:  0a0d3b30  646e6523  0a0d6669  0a0d3b7d  0;..#endif..};..
// 6860:  74730a0d  74637572  4f454720  0d4e495f  ..struct GEO_IN.
// 6870:  0a0d7b0a  6f6c6609  20347461  48736f70  .{...float4 posH
// 6880:  20202020  3a202020  5f565320  49534f50         : SV_POSI
// 6890:  4e4f4954  2f2f203b  6e654320  20726574  TION; // Center 
// 68a0:  69736f70  6e6f6974  20666f20  20656874  position of the 
// 68b0:  64617571  66090a0d  74616f6c  6f632034  quad...float4 co
// 68c0:  20726f6c  20202020  43203a20  524f4c4f  lor      : COLOR
// 68d0:  0a0d3b30  0a0d3b7d  74730a0d  74637572  0;..};....struct
// 68e0:  4f454720  54554f5f  0d7b0a0d  6c66090a   GEO_OUT..{...fl
// 68f0:  3474616f  736f7020  3a202048  5f565320  oat4 posH  : SV_
// 6900:  49534f50  4e4f4954  090a0d3b  616f6c66  POSITION;...floa
// 6910:  63203474  726f6c6f  43203a20  524f4c4f  t4 color : COLOR
// 6920:  0a0d3b30  0a0d3b7d  74730a0d  74637572  0;..};....struct
// 6930:  5f535020  5054554f  0a0d5455  090a0d7b   PS_OUTPUT..{...
// 6940:  616f6c66  63203474  726f6c6f  53203a20  float4 color : S
// 6950:  61545f56  74656772  0a0d3b30  0a0d3b7d  V_Target0;..};..
// 6960:  0a0d0a0d  2f2f0a0d  2d2d2d2d  2d2d2d2d  ......//--------
// 6970:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6980:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6990:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 69a0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 69b0:  2d2d2d2d  2f0a0d2d  6556202f  78657472  -----..// Vertex
// 69c0:  61687320  0d726564  2d2f2f0a  2d2d2d2d   shader..//-----
// 69d0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 69e0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 69f0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6a00:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 6a10:  2d2d2d2d  2d2d2d2d  45470a0d  4e495f4f  --------..GEO_IN
// 6a20:  5f535620  64616853  6f506465  43746e69   VS_ShadedPointC
// 6a30:  64756f6c  206e6928  495f5356  5455504e  loud(in VS_INPUT
// 6a40:  706e6920  0d297475  0a0d7b0a  4f454709   input)..{...GEO
// 6a50:  204e495f  7074756f  0d3b7475  090a0d0a  _IN output;.....
// 6a60:  616f6c66  70203474  2048736f  756d203d  float4 posH = mu
// 6a70:  6c66286c  3474616f  706e6928  702e7475  l(float4(input.p
// 6a80:  2c4c736f  302e3120  202c2966  726f5767  osL, 1.0f), gWor
// 6a90:  6956646c  72507765  63656a6f  6e6f6974  ldViewProjection
// 6aa0:  0a0d3b29  74756f09  2e747570  48736f70  );...output.posH
// 6ab0:  70203d20  3b48736f  0a0d0a0d  6f6c6609   = posH;.....flo
// 6ac0:  20337461  6d726f6e  20576c61  756d203d  at3 normalW = mu
// 6ad0:  6c66286c  3474616f  706e6928  6e2e7475  l(float4(input.n
// 6ae0:  616d726f  202c4c6c  66302e31  67202c29  ormalL, 1.0f), g
// 6af0:  6c726f57  766e4964  65737265  6e617254  WorldInverseTran
// 6b00:  736f7073  782e2965  0d3b7a79  6f6e090a  spose).xyz;...no
// 6b10:  6c616d72  203d2057  6d726f6e  7a696c61  rmalW = normaliz
// 6b20:  6f6e2865  6c616d72  0d3b2957  090a0d0a  e(normalW);.....
// 6b30:  41202f2f  4c206464  65626d61  61697472  // Add Lambertia
// 6b40:  6964206e  74636572  616e6f69  696c206c  n directional li
// 6b50:  69746867  3a20676e  2f090a0d  696c202f  ghting :...// li
// 6b60:  69746867  6120676e  6e756f6d  6e6f2074  ghting amount on
// 6b70:  67206120  6e657669  72757320  65636166   a given surface
// 6b80:  20736920  20656874  20746f64  646f7270   is the dot prod
// 6b90:  20746375  7420666f  6c206568  74686769  uct of the light
// 6ba0:  63657620  20726f74  20646e61  20656874   vector and the 
// 6bb0:  65636166  6e207327  616d726f  0a0d3a6c  face's normal:..
// 6bc0:  202f2f09  6867696c  65762074  726f7463  .// light vector
// 6bd0:  20736920  6e696f70  676e6974  206e6920   is pointing in 
// 6be0:  20656874  736f706f  20657a69  65726964  the oposize dire
// 6bf0:  6f697463  7361206e  67696c20  64207468  ction as light d
// 6c00:  63657269  6e6f6974  0a0d0a0d  6f6c6609  irection.....flo
// 6c10:  64207461  75666669  61466573  726f7463  at diffuseFactor
// 6c20:  64203d20  2d28746f  67694c67  69447468   = dot(-gLightDi
// 6c30:  74636572  2c6e6f69  726f6e20  576c616d  rection, normalW
// 6c40:  0a0d3b29  2f090a0d  6669202f  66696420  );.....// if dif
// 6c50:  65737566  74636146  3c20726f  74203020  fuseFactor < 0 t
// 6c60:  206e6168  73696874  69727420  6c676e61  han this triangl
// 6c70:  73692065  63616620  20676e69  79617761  e is facing away
// 6c80:  6f726620  6874206d  696c2065  0d746867   from the light.
// 6c90:  230a0d0a  65646669  57542066  49535f4f  ...#ifdef TWO_SI
// 6ca0:  0d444544  2f2f090a  20664920  61206577  DED...// If we a
// 6cb0:  72206572  65646e65  676e6972  6f777420  re rendering two
// 6cc0:  6469732d  6d206465  72657461  2c6c6169  -sided material,
// 6cd0:  65687420  756a206e  61207473  74207362   then just abs t
// 6ce0:  64206568  75666669  61466573  726f7463  he diffuseFactor
// 6cf0:  206f7320  20656874  6167656e  65766974   so the negative
// 6d00:  6f6e2820  6c692074  696d756c  6574616e   (not illuminate
// 6d10:  76202964  65756c61  69772073  61206c6c  d) values will a
// 6d20:  206f736c  72206562  65646e65  0d646572  lso be rendered.
// 6d30:  6c66090a  3374616f  66696420  65737566  ..float3 diffuse
// 6d40:  6f6c6f43  203d2072  28736261  66666964  Color = abs(diff
// 6d50:  46657375  6f746361  0d3b2972  6c65230a  useFactor);..#el
// 6d60:  0a0d6573  202f2f09  75746173  65746172  se...// saturate
// 6d70:  6e756620  6f697463  43203a6e  706d616c   function: Clamp
// 6d80:  68742073  70732065  66696365  20646569  s the specified 
// 6d90:  756c6176  69772065  6e696874  65687420  value within the
// 6da0:  6e617220  6f206567  20302066  31206f74   range of 0 to 1
// 6db0:  73202d20  656e206f  69746167  28206576   - so negative (
// 6dc0:  20746f6e  756c6c69  616e696d  29646574  not illuminated)
// 6dd0:  6c617620  20736575  20657261  6d616c63   values are clam
// 6de0:  20646570  30206f74  66090a0d  74616f6c  ped to 0...float
// 6df0:  69642033  73756666  6c6f4365  3d20726f  3 diffuseColor =
// 6e00:  74617320  74617275  69642865  73756666   saturate(diffus
// 6e10:  63614665  29726f74  230a0d3b  69646e65  eFactor);..#endi
// 6e20:  0d0a0d66  0a0d090a  202f2f09  20646441  f........// Add 
// 6e30:  626d4167  746e6569  6f6c6f43  6f742072  gAmbientColor to
// 6e40:  66696420  65737566  6f6c6f43  6e612072   diffuseColor an
// 6e50:  756d2064  7069746c  6220796c  68742079  d multiply by th
// 6e60:  6c672065  6c61626f  66696420  65737566  e global diffuse
// 6e70:  6c6f6320  0a0d726f  6f6c6609  20337461   color...float3 
// 6e80:  616e6966  6c6f436c  3d20726f  74617320  finalColor = sat
// 6e90:  74617275  41672865  6569626d  6f43746e  urate(gAmbientCo
// 6ea0:  20726f6c  6964202b  73756666  6c6f4365  lor + diffuseCol
// 6eb0:  2a20726f  694c6720  43746867  726f6c6f  or * gLightColor
// 6ec0:  202a2029  66694467  65737566  6f6c6f43  ) * gDiffuseColo
// 6ed0:  67722e72  0a0d3b62  69230a0d  66656466  r.rgb;....#ifdef
// 6ee0:  52455020  494f505f  435f544e  524f4c4f   PER_POINT_COLOR
// 6ef0:  2f090a0d  754d202f  7069746c  7720796c  ...// Multiply w
// 6f00:  20687469  20656874  69646e69  75646976  ith the individu
// 6f10:  70206c61  746e696f  6c6f6320  0a0d726f  al point color..
// 6f20:  6e696609  6f436c61  20726f6c  69203d2a  .finalColor *= i
// 6f30:  7475706e  6c6f632e  0d3b726f  6e65230a  nput.color;..#en
// 6f40:  0d666964  0d0a0d0a  6669230a  20666564  dif......#ifdef 
// 6f50:  43455053  52414c55  47494c5f  4e495448  SPECULAR_LIGHTIN
// 6f60:  090a0d47  616f6c66  70732074  6c756365  G...float specul
// 6f70:  6f507261  20726577  5367203d  75636570  arPower = gSpecu
// 6f80:  4372616c  726f6c6f  65776f50  3b772e72  larColorPower.w;
// 6f90:  0a0d0a0d  20666909  65707328  616c7563  .....if (specula
// 6fa0:  776f5072  3e207265  0d293020  0d7b090a  rPower > 0)...{.
// 6fb0:  6609090a  74616f6c  6f702033  3d205773  ...float3 posW =
// 6fc0:  6c756d20  6f6c6628  28347461  75706e69   mul(float4(inpu
// 6fd0:  6f702e74  202c4c73  66302e31  67202c29  t.posL, 1.0f), g
// 6fe0:  6c726f57  782e2964  0d3b7a79  6609090a  World).xyz;....f
// 6ff0:  74616f6c  6f742033  20657945  6f6e203d  loat3 toEye = no
// 7000:  6c616d72  28657a69  65794567  57736f50  rmalize(gEyePosW
// 7010:  70202d20  2957736f  0d0a0d3b  2f09090a   - posW);....../
// 7020:  6c42202f  2d6e6e69  6e6f6850  70732067  / Blinn-Phong sp
// 7030:  61756365  2072616c  6867696c  676e6974  ecualar lighting
// 7040:  73752820  20676e69  666c6168  63657620   (using half vec
// 7050:  20726f74  74736e69  20646165  7220666f  tor instead of r
// 7060:  656c6665  6f697463  0a0d296e  2f2f0909  eflection)....//
// 7070:  65655320  736c6120  68203a6f  73707474   See also: https
// 7080:  652f2f3a  69772e6e  6570696b  2e616964  ://en.wikipedia.
// 7090:  2f67726f  696b6977  696c422f  45256e6e  org/wiki/Blinn%E
// 70a0:  30382532  50333925  676e6f68  6168735f  2%80%93Phong_sha
// 70b0:  676e6964  646f6d5f  0a0d6c65  6c660909  ding_model....fl
// 70c0:  3374616f  6c616820  72694466  6e203d20  oat3 halfDir = n
// 70d0:  616d726f  657a696c  456f7428  2d206579  ormalize(toEye -
// 70e0:  694c6720  44746867  63657269  6e6f6974   gLightDirection
// 70f0:  0a0d3b29  09090a0d  6e492f2f  736e6574  );......//Intens
// 7100:  20797469  7420666f  73206568  75636570  ity of the specu
// 7110:  2072616c  6867696c  090a0d74  6f6c6609  lar light....flo
// 7120:  73207461  46636570  6f746361  203d2072  at specFactor = 
// 7130:  28776f70  75746173  65746172  746f6428  pow(saturate(dot
// 7140:  726f6e28  576c616d  6168202c  6944666c  (normalW, halfDi
// 7150:  2c292972  65707320  616c7563  776f5072  r)), specularPow
// 7160:  3b297265  0a0d0a0d  2f2f0909  64644120  er);......// Add
// 7170:  65707320  616c7563  6f632072  20726f6c   specular color 
// 7180:  74206f74  66206568  6c616e69  67696c20  to the final lig
// 7190:  0a0d7468  69660909  436c616e  726f6c6f  ht....finalColor
// 71a0:  203d2b20  75746173  65746172  65707328   += saturate(spe
// 71b0:  63614663  20726f74  5367202a  75636570  cFactor * gSpecu
// 71c0:  4372616c  726f6c6f  65776f50  79782e72  larColorPower.xy
// 71d0:  0d3b297a  0d7d090a  6e65230a  09666964  z);...}..#endif.
// 71e0:  0a0d0a0d  64666923  52206665  45444e45  ....#ifdef RENDE
// 71f0:  4f4e5f52  4c414d52  4345565f  5f524f54  R_NORMAL_VECTOR_
// 7200:  435f5341  524f4c4f  66090a0d  6c616e69  AS_COLOR...final
// 7210:  6f6c6f43  203d2072  28736261  6d726f6e  Color = abs(norm
// 7220:  29576c61  2f2f203b  6e655220  20726564  alW); // Render 
// 7230:  6d726f6e  76206c61  6f746365  73612072  normal vector as
// 7240:  6c6f6320  2820726f  69642058  74636572   color (X direct
// 7250:  206e6f69  73207369  6e776f68  20736120  ion is shown as 
// 7260:  20646552  6f6c6f63  79202c72  20736120  Red color, y as 
// 7270:  65657247  6e61206e  207a2064  42207361  Green and z as B
// 7280:  2065756c  6f6c6f63  0a0d2972  090a0d09  lue color)......
// 7290:  54202f2f  66206568  6f6c6c6f  676e6977  // The following
// 72a0:  646f6320  61632065  6562206e  65737520   code can be use
// 72b0:  6f742064  6f687320  6f702077  69746973  d to show positi
// 72c0:  6e206576  616d726f  782e576c  6c617620  ve normalW.x val
// 72d0:  20736575  72207361  70206465  656c7869  ues as red pixle
// 72e0:  6e612073  656e2064  69746167  6e206576  s and negative n
// 72f0:  616d726f  782e576c  6c617620  20736575  ormalW.x values 
// 7300:  62207361  2065756c  65786970  2820736c  as blue pixels (
// 7310:  75746173  65746172  74656d20  20646f68  saturate method 
// 7320:  6d616c63  76207370  65756c61  6d732073  clamps values sm
// 7330:  656c6c61  68742072  30206e61  206f7420  aller than 0 to 
// 7340:  6e612030  69622064  72656767  65687420  0 and bigger the
// 7350:  2031206e  31206f74  0a0d2e29  662f2f09  n 1 to 1)....//f
// 7360:  6c616e69  6f6c6f43  203d2072  616f6c66  inalColor = floa
// 7370:  73283374  72757461  28657461  6d726f6e  t3(saturate(norm
// 7380:  2e576c61  202c2978  73202c30  72757461  alW.x), 0, satur
// 7390:  28657461  726f6e2d  576c616d  2929782e  ate(-normalW.x))
// 73a0:  230a0d3b  69646e65  0d0a0d66  2f2f090a  ;..#endif.....//
// 73b0:  6e694620  796c6c61  64646120  65687420   Finally add the
// 73c0:  706c6120  63206168  6e6e6168  61206c65   alpha channel a
// 73d0:  6f20646e  75707475  65687420  6c6f6320  nd outpu the col
// 73e0:  6620726f  7420726f  70206568  6c657869  or for the pixel
// 73f0:  61687320  0d726564  756f090a  74757074   shader...output
// 7400:  6c6f632e  3d20726f  6f6c6620  28347461  .color = float4(
// 7410:  75746173  65746172  6e696628  6f436c61  saturate(finalCo
// 7420:  29726f6c  4467202c  75666669  6f436573  lor), gDiffuseCo
// 7430:  2e726f6c  0d3b2961  090a0d0a  75746572  lor.a);.....retu
// 7440:  6f206e72  75707475  0a0d3b74  0d0a0d7d  rn output;..}...
// 7450:  2d2f2f0a  2d2d2d2d  2d2d2d2d  2d2d2d2d  .//-------------
// 7460:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7470:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7480:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7490:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 74a0:  2f2f0a0d  6f654720  7274656d  68732079  ..// Geometry sh
// 74b0:  72656461  2f2f0a0d  2d2d2d2d  2d2d2d2d  ader..//--------
// 74c0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 74d0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 74e0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 74f0:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7500:  2d2d2d2d  0d0a0d2d  202f2f0a  73696854  -----....// This
// 7510:  6f656720  7274656d  68732079  72656461   geometry shader
// 7520:  65726320  64657461  61757120  77207364   created quads w
// 7530:  20687469  657a6973  66656420  64656e69  ith size defined
// 7540:  206e6920  65726373  73206e65  65636170   in screen space
// 7550:  6d5b0a0d  65767861  78657472  6e756f63  ..[maxvertexcoun
// 7560:  29342874  760a0d5d  2064696f  535f5347  t(4)]..void GS_S
// 7570:  65646168  696f5064  6c43746e  2864756f  hadedPointCloud(
// 7580:  6e696f70  45472074  4e495f4f  696f7020  point GEO_IN poi
// 7590:  5b73746e  202c5d31  756f6e69  72542074  nts[1], inout Tr
// 75a0:  676e6169  7453656c  6d616572  4f45473c  iangleStream<GEO
// 75b0:  54554f5f  756f203e  74757074  7b0a0d29  _OUT> output)..{
// 75c0:  66090a0d  74616f6c  6f632034  20726f6c  ...float4 color 
// 75d0:  6f70203d  73746e69  2e5d305b  6f6c6f63  = points[0].colo
// 75e0:  0a0d3b72  47090a0d  4f5f4f45  76205455  r;.....GEO_OUT v
// 75f0:  3b5d345b  0a0d0a0d  202f2f09  73736150  [4];.....// Pass
// 7600:  65687420  6c6f6320  6620726f  68747275   the color furth
// 7610:  74207265  6874206f  69702065  206c6578  er to the pixel 
// 7620:  64616873  0a0d7265  305b7609  6f632e5d  shader...v[0].co
// 7630:  20726f6c  6f63203d  3b726f6c  76090a0d  lor = color;...v
// 7640:  2e5d315b  6f6c6f63  203d2072  6f6c6f63  [1].color = colo
// 7650:  0a0d3b72  325b7609  6f632e5d  20726f6c  r;...v[2].color 
// 7660:  6f63203d  3b726f6c  76090a0d  2e5d335b  = color;...v[3].
// 7670:  6f6c6f63  203d2072  6f6c6f63  0a0d3b72  color = color;..
// 7680:  0a0d0a0d  6f6c6609  20347461  48736f70  .....float4 posH
// 7690:  70203d20  746e696f  5d305b73  736f702e   = points[0].pos
// 76a0:  0a0d3b48  6f6c6609  20327461  72635370  H;...float2 pScr
// 76b0:  206e6565  6f70203d  782e4873  202f2079  een = posH.xy / 
// 76c0:  48736f70  203b772e  70202f2f  7469736f  posH.w; // posit
// 76d0:  206e6f69  73206e69  65657263  6f63206e  ion in screen co
// 76e0:  6964726f  6574616e  0d0a0d73  5b76090a  ordinates.....v[
// 76f0:  702e5d30  2048736f  6c66203d  3474616f  0].posH = float4
// 7700:  53702828  65657263  202b206e  616f6c66  ((pScreen + floa
// 7710:  2d283274  666c6168  65786950  7a69536c  t2(-halfPixelSiz
// 7720:  72655065  77656956  74726f70  202c782e  ePerViewport.x, 
// 7730:  666c6168  65786950  7a69536c  72655065  halfPixelSizePer
// 7740:  77656956  74726f70  2929792e  70202a20  Viewport.y)) * p
// 7750:  2e48736f  70202c77  2e48736f  70202c7a  osH.w, posH.z, p
// 7760:  2e48736f  0d3b2977  5b76090a  702e5d31  osH.w);...v[1].p
// 7770:  2048736f  6c66203d  3474616f  53702828  osH = float4((pS
// 7780:  65657263  202b206e  616f6c66  20283274  creen + float2( 
// 7790:  666c6168  65786950  7a69536c  72655065  halfPixelSizePer
// 77a0:  77656956  74726f70  202c782e  666c6168  Viewport.x, half
// 77b0:  65786950  7a69536c  72655065  77656956  PixelSizePerView
// 77c0:  74726f70  2929792e  70202a20  2e48736f  port.y)) * posH.
// 77d0:  70202c77  2e48736f  70202c7a  2e48736f  w, posH.z, posH.
// 77e0:  0d3b2977  090a0d0a  5d325b76  736f702e  w);.....v[2].pos
// 77f0:  203d2048  616f6c66  28283474  72635370  H = float4((pScr
// 7800:  206e6565  6c66202b  3274616f  61682028  een + float2( ha
// 7810:  6950666c  536c6578  50657a69  69567265  lfPixelSizePerVi
// 7820:  6f707765  782e7472  682d202c  50666c61  ewport.x, -halfP
// 7830:  6c657869  657a6953  56726550  70776569  ixelSizePerViewp
// 7840:  2e74726f  20292979  6f70202a  772e4873  ort.y)) * posH.w
// 7850:  6f70202c  7a2e4873  6f70202c  772e4873  , posH.z, posH.w
// 7860:  0a0d3b29  335b7609  6f702e5d  3d204873  );...v[3].posH =
// 7870:  6f6c6620  28347461  63537028  6e656572   float4((pScreen
// 7880:  66202b20  74616f6c  682d2832  50666c61   + float2(-halfP
// 7890:  6c657869  657a6953  56726550  70776569  ixelSizePerViewp
// 78a0:  2e74726f  2d202c78  666c6168  65786950  ort.x, -halfPixe
// 78b0:  7a69536c  72655065  77656956  74726f70  lSizePerViewport
// 78c0:  2929792e  70202a20  2e48736f  70202c77  .y)) * posH.w, p
// 78d0:  2e48736f  70202c7a  2e48736f  0d3b2977  osH.z, posH.w);.
// 78e0:  090a0d0a  43202f2f  74616572  72542065  ....// Create Tr
// 78f0:  676e6169  7453656c  20706972  65657328  iangleStrip (see
// 7900:  69687420  696c2073  66206b6e  7420726f   this link for t
// 7910:  6e616972  73656c67  69726f20  61746e65  riangles orienta
// 7920:  6e6f6974  7468203a  3a737074  736d2f2f  tion: https://ms
// 7930:  6d2e6e64  6f726369  74666f73  6d6f632e  dn.microsoft.com
// 7940:  2d6e652f  6c2f7375  61726269  772f7972  /en-us/library/w
// 7950:  6f646e69  642f7377  746b7365  622f706f  indows/desktop/b
// 7960:  36303262  28343732  73763d76  2935382e  b206274(v=vs.85)
// 7970:  7073612e  0a0d2978  74756f09  2e747570  .aspx)...output.
// 7980:  65707041  7628646e  295d305b  090a0d3b  Append(v[0]);...
// 7990:  7074756f  412e7475  6e657070  5b762864  output.Append(v[
// 79a0:  3b295d33  6f090a0d  75707475  70412e74  3]);...output.Ap
// 79b0:  646e6570  315b7628  0d3b295d  756f090a  pend(v[1]);...ou
// 79c0:  74757074  7070412e  28646e65  5d325b76  tput.Append(v[2]
// 79d0:  0a0d3b29  6f090a0d  75707475  65522e74  );.....output.Re
// 79e0:  72617473  72745374  29287069  7d0a0d3b  startStrip();..}
// 79f0:  0a0d0a0d  0a0d0a0d  2d2d2f2f  2d2d2d2d  ........//------
// 7a00:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7a10:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7a20:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7a30:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7a40:  2d2d2d2d  0d2d2d2d  202f2f0a  65786950  -------..// Pixe
// 7a50:  6873206c  72656461  2f2f0a0d  2d2d2d2d  l shader..//----
// 7a60:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7a70:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7a80:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7a90:  2d2d2d2d  2d2d2d2d  2d2d2d2d  2d2d2d2d  ----------------
// 7aa0:  2d2d2d2d  2d2d2d2d  500a0d2d  554f5f53  ---------..PS_OU
// 7ab0:  54555054  5f535020  64616853  6f506465  TPUT PS_ShadedPo
// 7ac0:  43746e69  64756f6c  4f454728  54554f5f  intCloud(GEO_OUT
// 7ad0:  706e6920  0d297475  0a0d7b0a  5f535009   input)..{...PS_
// 7ae0:  5054554f  6f205455  75707475  0a0d3b74  OUTPUT output;..
// 7af0:  74756f09  2e747570  6f6c6f63  203d2072  .output.color = 
// 7b00:  75706e69  6f632e74  3b726f6c  0a0d0a0d  input.color;....
// 7b10:  74657209  206e7275  7074756f  0d3b7475  .return output;.
// 7b20:  0a0d7d0a  0a0d0a0d  0a0d0a0d  0a0d2a2f  .}........../*..
// 7b30:  68530a0d  72656461  68742073  67207461  ..Shaders that g
// 7b40:  72656e65  20657461  64617571  6e692073  enerate quads in
// 7b50:  726f7720  7320646c  65636170  65726120   world space are
// 7b60:  746f6e20  65737520  6e612064  6f6d2079   not used any mo
// 7b70:  2d206572  20657720  796c6e6f  6e656720  re - we only gen
// 7b80:  74617265  75712065  69206461  6373206e  erate quad in sc
// 7b90:  6e656572  61707320  0a0d6563  62630a0d  reen space....cb
// 7ba0:  65666675  62632072  74726556  75427865  uffer cbVertexBu
// 7bb0:  72656666  72203a20  73696765  28726574  ffer : register(
// 7bc0:  0d293262  0a0d7b0a  63202f2f  72656d61  b2)..{..// camer
// 7bd0:  72702061  7265706f  73656974  720a0d3a  a properties:..r
// 7be0:  6d5f776f  726f6a61  6f6c6620  78347461  ow_major float4x
// 7bf0:  57672034  646c726f  57203a20  444c524f  4 gWorld : WORLD
// 7c00:  720a0d3b  6d5f776f  726f6a61  6f6c6620  ;..row_major flo
// 7c10:  78347461  57672034  646c726f  77656956  at4x4 gWorldView
// 7c20:  6a6f7250  69746365  20206e6f  57203a20  Projection   : W
// 7c30:  444c524f  57454956  4a4f5250  49544345  ORLDVIEWPROJECTI
// 7c40:  0d3b4e4f  776f720a  6a616d5f  6620726f  ON;..row_major f
// 7c50:  74616f6c  20347834  726f5767  6e49646c  loat4x4 gWorldIn
// 7c60:  73726576  61725465  6f70736e  3a206573  verseTranspose :
// 7c70:  524f5720  4e49444c  53524556  41525445   WORLDINVERSETRA
// 7c80:  4f50534e  0d3b4553  660a0d0a  74616f6c  NSPOSE;....float
// 7c90:  45672033  6f506579  0d3b5773  0d0a0d0a  3 gEyePosW;.....
// 7ca0:  202f2f0a  626f6c67  70206c61  6c657869  .// global pixel
// 7cb0:  6f727020  74726570  3a736569  6c660a0d   properties:..fl
// 7cc0:  3474616f  69446720  73756666  6c6f4365  oat4 gDiffuseCol
// 7cd0:  2020726f  20202020  43203a20  524f4c4f  or       : COLOR
// 7ce0:  2f2f203b  69685420  6f632073  20726f6c  ; // This color 
// 7cf0:  6d207369  69746c75  65696c70  69772064  is multiplied wi
// 7d00:  74206874  63206568  726f6c6f  20666f20  th the color of 
// 7d10:  68636165  78697020  64206c65  6e696665  each pixel defin
// 7d20:  69206465  5356206e  504e495f  203b5455  ed in VS_INPUT; 
// 7d30:  61207449  206f736c  69666564  7420656e  It also define t
// 7d40:  67206568  61626f6c  6c61206c  20616870  he global alpha 
// 7d50:  6f6c6f63  61762072  2065756c  20726f66  color value for 
// 7d60:  206c6c61  65786970  0a0d736c  616f6c66  all pixels..floa
// 7d70:  67203474  63657053  72616c75  6f6c6f43  t4 gSpecularColo
// 7d80:  776f5072  3a207265  4c4f4320  0d3b524f  rPower : COLOR;.
// 7d90:  660a0d0a  74616f6c  61486720  6f50666c  ...float gHalfPo
// 7da0:  53746e69  3b657a69  202f2f20  666c6168  intSize; // half
// 7db0:  7a697320  666f2065  65687420  61757120   size of the qua
// 7dc0:  68742064  64207461  6e696665  74207365  d that defines t
// 7dd0:  70206568  6c657869  6e692820  726f7720  he pixel (in wor
// 7de0:  7320646c  65636170  6f6e203b  6e692074  ld space; not in
// 7df0:  72637320  206e6565  63617073  73612065   screen space as
// 7e00:  74697720  69502068  566c6578  61757369   with PixelVisua
// 7e10:  2044336c  3320726f  696c2044  2973656e  l3D or 3D lines)
// 7e20:  0a0d0a0d  2f2f0a0d  67696c20  70207468  ......// light p
// 7e30:  65706f72  65697472  0a0d3a73  616f6c66  roperties:..floa
// 7e40:  67203374  69626d41  43746e65  726f6c6f  t3 gAmbientColor
// 7e50:  43203a20  524f4c4f  660a0d3b  74616f6c   : COLOR;..float
// 7e60:  4c672033  74686769  65726944  6f697463  3 gLightDirectio
// 7e70:  0a0d3b6e  616f6c66  67203374  6867694c  n;..float3 gLigh
// 7e80:  6c6f4374  3a20726f  4c4f4320  0d3b524f  tColor : COLOR;.
// 7e90:  0d3b7d0a  730a0d0a  63757274  45472074  .};....struct GE
// 7ea0:  4e495f4f  0d7b0a0d  6f6c660a  20347461  O_IN..{..float4 
// 7eb0:  48736f70  20202020  3a202020  5f565320  posH       : SV_
// 7ec0:  49534f50  4e4f4954  2f2f203b  6e654320  POSITION; // Cen
// 7ed0:  20726574  69736f70  6e6f6974  20666f20  ter position of 
// 7ee0:  20656874  64617571  6c660a0d  3474616f  the quad..float4
// 7ef0:  61757120  48705564  20202020  4f4e203a   quadUpH    : NO
// 7f00:  4c414d52  20203b30  20202020  55202f2f  RMAL0;      // U
// 7f10:  69642070  74636572  206e6f69  7420666f  p direction of t
// 7f20:  71206568  0d646175  6f6c660a  20347461  he quad..float4 
// 7f30:  64617571  68676952  3a204874  524f4e20  quadRightH : NOR
// 7f40:  314c414d  2020203b  2f202020  6952202f  MAL1;      // Ri
// 7f50:  20746867  65726964  6f697463  666f206e  ght direction of
// 7f60:  65687420  61757120  660a0d64  74616f6c   the quad..float
// 7f70:  6f632034  20726f6c  20202020  43203a20  4 color      : C
// 7f80:  524f4c4f  0a0d3b30  0a0d3b7d  45470a0d  OLOR0;..};....GE
// 7f90:  4e495f4f  5f535620  64616853  6f506465  O_IN VS_ShadedPo
// 7fa0:  43746e69  64756f6c  206e6928  495f5356  intCloud(in VS_I
// 7fb0:  5455504e  706e6920  0d297475  0a0d7b0a  NPUT input)..{..
// 7fc0:  5f4f4547  6f204e49  75707475  0a0d3b74  GEO_IN output;..
// 7fd0:  6c660a0d  3474616f  736f7020  203d2048  ..float4 posH = 
// 7fe0:  286c756d  616f6c66  69283474  7475706e  mul(float4(input
// 7ff0:  736f702e  31202c4c  2966302e  5767202c  .posL, 1.0f), gW
// 8000:  646c726f  77656956  6a6f7250  69746365  orldViewProjecti
// 8010:  3b296e6f  756f0a0d  74757074  736f702e  on);..output.pos
// 8020:  203d2048  48736f70  0d0a0d3b  6f6c660a  H = posH;....flo
// 8030:  20337461  6d726f6e  20576c61  756d203d  at3 normalW = mu
// 8040:  6c66286c  3474616f  706e6928  6e2e7475  l(float4(input.n
// 8050:  616d726f  202c4c6c  66302e31  67202c29  ormalL, 1.0f), g
// 8060:  6c726f57  766e4964  65737265  6e617254  WorldInverseTran
// 8070:  736f7073  782e2965  0d3b7a79  726f6e0a  spose).xyz;..nor
// 8080:  576c616d  6e203d20  616d726f  657a696c  malW = normalize
// 8090:  726f6e28  576c616d  0a0d3b29  2f2f0a0d  (normalW);....//
// 80a0:  206f5420  61657263  61206574  61757120   To create a qua
// 80b0:  72662064  61206d6f  736f7020  6f697469  d from a positio
// 80c0:  6e61206e  6f6e2064  6c616d72  63657620  n and normal vec
// 80d0:  0d726f74  202f2f0a  6e206577  20646565  tor..// we need 
// 80e0:  67206f74  74207465  68206568  7a69726f  to get the horiz
// 80f0:  61746e6f  6e61206c  70752064  63657620  ontal and up vec
// 8100:  2e726f74  2f2f0a0d  65685420  65642079  tor...// They de
// 8110:  656e6966  65687420  72696420  69746365  fine the directi
// 8120:  20736e6f  6f746e69  69687720  74206863  ons into which t
// 8130:  70206568  7469736f  206e6f69  65207369  he position is e
// 8140:  6e617078  2e646564  2f2f0a0d  2f2f0a0d  xpanded...//..//
// 8150:  20655720  74206f64  20746168  63207962   We do that by c
// 8160:  75636c61  69746c61  6820676e  7a69726f  alcualting horiz
// 8170:  61746e6f  6365566c  20726f74  61207361  ontalVector as a
// 8180:  63657620  20726f74  70726570  69646e65   vector perpendi
// 8190:  616c7563  6f742072  65687420  41705520  cular to the UpA
// 81a0:  20736978  312c3028  2029302c  20646e61  xis (0,1,0) and 
// 81b0:  20656874  6d726f6e  76206c61  6f746365  the normal vecto
// 81c0:  0a0d2e72  616f6c66  68203374  7a69726f  r...float3 horiz
// 81d0:  61746e6f  6365566c  20726f74  7263203d  ontalVector = cr
// 81e0:  2873736f  616f6c66  30283374  2c31202c  oss(float3(0, 1,
// 81f0:  2c293020  726f6e20  576c616d  0a0d3b29   0), normalW);..
// 8200:  6c660a0d  2074616f  69726f68  746e6f7a  ..float horizont
// 8210:  65566c61  726f7463  676e654c  71536874  alVectorLengthSq
// 8220:  65726175  203d2064  28746f64  69726f68  uared = dot(hori
// 8230:  746e6f7a  65566c61  726f7463  6f68202c  zontalVector, ho
// 8240:  6f7a6972  6c61746e  74636556  3b29726f  rizontalVector);
// 8250:  66690a0d  6f682820  6f7a6972  6c61746e  ..if (horizontal
// 8260:  74636556  654c726f  6874676e  61757153  VectorLengthSqua
// 8270:  20646572  2e30203c  30303030  0a0d2931  red < 0.00001)..
// 8280:  2f0a0d7b  6e49202f  73616320  6f6e2065  {..// In case no
// 8290:  6c616d72  6f702057  73746e69  20707520  rmalW points up 
// 82a0:  20646e61  6e206f64  7020746f  69766f72  and do not provi
// 82b0:  69206564  726f666e  6974616d  61206e6f  de information a
// 82c0:  74756f62  65687420  726f6820  6e6f7a69  bout the horizon
// 82d0:  566c6174  6f746365  69642072  74636572  talVector direct
// 82e0:  2c6e6f69  2f2f0a0d  20657720  6b636970  ion,..// we pick
// 82f0:  76206120  6f746365  68742072  70207461   a vector that p
// 8300:  746e696f  6e692073  65687420  61205a20  oints in the Z a
// 8310:  20736978  65726964  6f697463  680a0d6e  xis direction..h
// 8320:  7a69726f  61746e6f  6365566c  20726f74  orizontalVector 
// 8330:  6c66203d  3374616f  202c3028  31202c30  = float3(0, 0, 1
// 8340:  0a0d3b29  0d0a0d7d  6f6c660a  20337461  );..}....float3 
// 8350:  65567075  726f7463  63203d20  73736f72  upVector = cross
// 8360:  726f6828  6e6f7a69  566c6174  6f746365  (horizontalVecto
// 8370:  6e202c72  616d726f  3b29576c  70750a0d  r, normalW);..up
// 8380:  74636556  3d20726f  726f6e20  696c616d  Vector = normali
// 8390:  7528657a  63655670  29726f74  0d0a0d3b  ze(upVector);...
// 83a0:  726f680a  6e6f7a69  566c6174  6f746365  .horizontalVecto
// 83b0:  3d2a2072  61486720  6f50666c  53746e69  r *= gHalfPointS
// 83c0:  3b657a69  70750a0d  74636556  2a20726f  ize;..upVector *
// 83d0:  4867203d  50666c61  746e696f  657a6953  = gHalfPointSize
// 83e0:  0d0a0d3b  74756f0a  2e747570  64617571  ;....output.quad
// 83f0:  20487055  756d203d  6c66286c  3474616f  UpH = mul(float4
// 8400:  56707528  6f746365  30202c72  2966302e  (upVector, 0.0f)
// 8410:  5767202c  646c726f  77656956  6a6f7250  , gWorldViewProj
// 8420:  69746365  3b296e6f  202f2f20  76657270  ection); // prev
// 8430:  20746e65  6e697375  72742067  6c736e61  ent using transl
// 8440:  6f697461  6e69206e  6f576720  56646c72  ation in gWorldV
// 8450:  50776569  656a6f72  6f697463  6977206e  iewProjection wi
// 8460:  73206874  69636570  6e697966  20302067  th specifying 0 
// 8470:  20726f66  69282077  6c66206e  3474616f  for w (in float4
// 8480:  6f0a0d29  75707475  75712e74  69526461  )..output.quadRi
// 8490:  48746867  6d203d20  66286c75  74616f6c  ghtH = mul(float
// 84a0:  6f682834  6f7a6972  6c61746e  74636556  4(horizontalVect
// 84b0:  202c726f  66302e30  67202c29  6c726f57  or, 0.0f), gWorl
// 84c0:  65695664  6f725077  7463656a  296e6f69  dViewProjection)
// 84d0:  0d0a0d3b  2f0a0d0a  6441202f  614c2064  ;......// Add La
// 84e0:  7265626d  6e616974  72696420  69746365  mbertian directi
// 84f0:  6c616e6f  67696c20  6e697468  0d3a2067  onal lighting :.
// 8500:  202f2f0a  6867696c  676e6974  6f6d6120  .// lighting amo
// 8510:  20746e75  61206e6f  76696720  73206e65  unt on a given s
// 8520:  61667275  69206563  68742073  6f642065  urface is the do
// 8530:  72702074  6375646f  666f2074  65687420  t product of the
// 8540:  67696c20  76207468  6f746365  6e612072   light vector an
// 8550:  68742064  61662065  73276563  726f6e20  d the face's nor
// 8560:  3a6c616d  2f2f0a0d  67696c20  76207468  mal:..// light v
// 8570:  6f746365  73692072  696f7020  6e69746e  ector is pointin
// 8580:  6e692067  65687420  6f706f20  657a6973  g in the oposize
// 8590:  72696420  69746365  61206e6f  696c2073   direction as li
// 85a0:  20746867  65726964  6f697463  0d0a0d6e  ght direction...
// 85b0:  6f6c660a  64207461  75666669  61466573  .float diffuseFa
// 85c0:  726f7463  64203d20  2d28746f  67694c67  ctor = dot(-gLig
// 85d0:  69447468  74636572  2c6e6f69  726f6e20  htDirection, nor
// 85e0:  576c616d  0a0d3b29  2f2f0a0d  20666920  malW);....// if 
// 85f0:  66666964  46657375  6f746361  203c2072  diffuseFactor < 
// 8600:  68742030  74206e61  20736968  61697274  0 than this tria
// 8610:  656c676e  20736920  69636166  6120676e  ngle is facing a
// 8620:  20796177  6d6f7266  65687420  67696c20  way from the lig
// 8630:  0a0d7468  69230a0d  66656466  4f575420  ht....#ifdef TWO
// 8640:  4449535f  0a0d4445  49202f2f  65772066  _SIDED..// If we
// 8650:  65726120  6e657220  69726564  7420676e   are rendering t
// 8660:  732d6f77  64656469  74616d20  61697265  wo-sided materia
// 8670:  74202c6c  206e6568  7473756a  73626120  l, then just abs
// 8680:  65687420  66696420  65737566  74636146   the diffuseFact
// 8690:  7320726f  6874206f  656e2065  69746167  or so the negati
// 86a0:  28206576  20746f6e  756c6c69  616e696d  ve (not illumina
// 86b0:  29646574  6c617620  20736575  6c6c6977  ted) values will
// 86c0:  736c6120  6562206f  6e657220  65726564   also be rendere
// 86d0:  660a0d64  74616f6c  69642033  73756666  d..float3 diffus
// 86e0:  6c6f4365  3d20726f  73626120  66696428  eColor = abs(dif
// 86f0:  65737566  74636146  3b29726f  65230a0d  fuseFactor);..#e
// 8700:  0d65736c  202f2f0a  75746173  65746172  lse..// saturate
// 8710:  6e756620  6f697463  43203a6e  706d616c   function: Clamp
// 8720:  68742073  70732065  66696365  20646569  s the specified 
// 8730:  756c6176  69772065  6e696874  65687420  value within the
// 8740:  6e617220  6f206567  20302066  31206f74   range of 0 to 1
// 8750:  73202d20  656e206f  69746167  28206576   - so negative (
// 8760:  20746f6e  756c6c69  616e696d  29646574  not illuminated)
// 8770:  6c617620  20736575  20657261  6d616c63   values are clam
// 8780:  20646570  30206f74  6c660a0d  3374616f  ped to 0..float3
// 8790:  66696420  65737566  6f6c6f43  203d2072   diffuseColor = 
// 87a0:  75746173  65746172  66696428  65737566  saturate(diffuse
// 87b0:  74636146  3b29726f  65230a0d  6669646e  Factor);..#endif
// 87c0:  0a0d0a0d  2f2f0a0d  64644120  6d416720  ......// Add gAm
// 87d0:  6e656962  6c6f4374  7420726f  6964206f  bientColor to di
// 87e0:  73756666  6c6f4365  6120726f  6d20646e  ffuseColor and m
// 87f0:  69746c75  20796c70  74207962  67206568  ultiply by the g
// 8800:  61626f6c  6964206c  73756666  6f632065  lobal diffuse co
// 8810:  0d726f6c  6f6c660a  20337461  616e6966  lor..float3 fina
// 8820:  6c6f436c  3d20726f  74617320  74617275  lColor = saturat
// 8830:  41672865  6569626d  6f43746e  20726f6c  e(gAmbientColor 
// 8840:  6964202b  73756666  6c6f4365  2a20726f  + diffuseColor *
// 8850:  694c6720  43746867  726f6c6f  202a2029   gLightColor) * 
// 8860:  66694467  65737566  6f6c6f43  67722e72  gDiffuseColor.rg
// 8870:  0a0d3b62  69230a0d  66656466  52455020  b;....#ifdef PER
// 8880:  494f505f  435f544e  524f4c4f  2f2f0a0d  _POINT_COLOR..//
// 8890:  6c754d20  6c706974  69772079  74206874   Multiply with t
// 88a0:  69206568  7669646e  61756469  6f70206c  he individual po
// 88b0:  20746e69  6f6c6f63  660a0d72  6c616e69  int color..final
// 88c0:  6f6c6f43  3d2a2072  706e6920  632e7475  Color *= input.c
// 88d0:  726f6c6f  230a0d3b  69646e65  0d0a0d66  olor;..#endif...
// 88e0:  230a0d0a  65646669  50532066  4c554345  ...#ifdef SPECUL
// 88f0:  4c5f5241  54484749  0d474e49  6f6c660a  AR_LIGHTING..flo
// 8900:  20337461  57736f70  6d203d20  66286c75  at3 posW = mul(f
// 8910:  74616f6c  6e692834  2e747570  4c736f70  loat4(input.posL
// 8920:  2e31202c  2c296630  6f576720  29646c72  , 1.0f), gWorld)
// 8930:  7a79782e  660a0d3b  74616f6c  6f742033  .xyz;..float3 to
// 8940:  20657945  6f6e203d  6c616d72  28657a69  Eye = normalize(
// 8950:  65794567  57736f50  70202d20  2957736f  gEyePosW - posW)
// 8960:  0d0a0d3b  202f2f0a  6e696c42  68502d6e  ;....// Blinn-Ph
// 8970:  20676e6f  63657073  616c6175  696c2072  ong specualar li
// 8980:  69746867  2820676e  6e697375  61682067  ghting (using ha
// 8990:  7620666c  6f746365  6e692072  61657473  lf vector instea
// 89a0:  666f2064  66657220  7463656c  296e6f69  d of reflection)
// 89b0:  2f2f0a0d  65655320  736c6120  68203a6f  ..// See also: h
// 89c0:  73707474  652f2f3a  69772e6e  6570696b  ttps://en.wikipe
// 89d0:  2e616964  2f67726f  696b6977  696c422f  dia.org/wiki/Bli
// 89e0:  45256e6e  30382532  50333925  676e6f68  nn%E2%80%93Phong
// 89f0:  6168735f  676e6964  646f6d5f  0a0d6c65  _shading_model..
// 8a00:  616f6c66  68203374  44666c61  3d207269  float3 halfDir =
// 8a10:  726f6e20  696c616d  7428657a  6579456f   normalize(toEye
// 8a20:  67202d20  6867694c  72694474  69746365   - gLightDirecti
// 8a30:  3b296e6f  0a0d0a0d  6e492f2f  736e6574  on);....//Intens
// 8a40:  20797469  7420666f  73206568  75636570  ity of the specu
// 8a50:  2072616c  6867696c  660a0d74  74616f6c  lar light..float
// 8a60:  65707320  63614663  20726f74  6f70203d   specFactor = po
// 8a70:  61732877  61727574  64286574  6e28746f  w(saturate(dot(n
// 8a80:  616d726f  202c576c  666c6168  29726944  ormalW, halfDir)
// 8a90:  67202c29  63657053  72616c75  6f6c6f43  ), gSpecularColo
// 8aa0:  776f5072  772e7265  0a0d3b29  2f2f0a0d  rPower.w);....//
// 8ab0:  64644120  65707320  616c7563  6f632072   Add specular co
// 8ac0:  20726f6c  74206f74  66206568  6c616e69  lor to the final
// 8ad0:  67696c20  0a0d7468  616e6966  6c6f436c   light..finalCol
// 8ae0:  2b20726f  6173203d  61727574  73286574  or += saturate(s
// 8af0:  46636570  6f746361  202a2072  65705367  pecFactor * gSpe
// 8b00:  616c7563  6c6f4372  6f50726f  2e726577  cularColorPower.
// 8b10:  297a7978  230a0d3b  69646e65  0d0a0d66  xyz);..#endif...
// 8b20:  6669230a  20666564  444e4552  4e5f5245  .#ifdef RENDER_N
// 8b30:  414d524f  45565f4c  524f5443  5f53415f  ORMAL_VECTOR_AS_
// 8b40:  4f4c4f43  660a0d52  6c616e69  6f6c6f43  COLOR..finalColo
// 8b50:  203d2072  28736261  6d726f6e  29576c61  r = abs(normalW)
// 8b60:  2f2f203b  6e655220  20726564  6d726f6e  ; // Render norm
// 8b70:  76206c61  6f746365  73612072  6c6f6320  al vector as col
// 8b80:  2820726f  69642058  74636572  206e6f69  or (X direction 
// 8b90:  73207369  6e776f68  20736120  20646552  is shown as Red 
// 8ba0:  6f6c6f63  79202c72  20736120  65657247  color, y as Gree
// 8bb0:  6e61206e  207a2064  42207361  2065756c  n and z as Blue 
// 8bc0:  6f6c6f63  0a0d2972  2f2f0a0d  65685420  color)....// The
// 8bd0:  6c6f6620  69776f6c  6320676e  2065646f   following code 
// 8be0:  206e6163  75206562  20646573  73206f74  can be used to s
// 8bf0:  20776f68  69736f70  65766974  726f6e20  how positive nor
// 8c00:  576c616d  7620782e  65756c61  73612073  malW.x values as
// 8c10:  64657220  78697020  2073656c  20646e61   red pixles and 
// 8c20:  6167656e  65766974  726f6e20  576c616d  negative normalW
// 8c30:  7620782e  65756c61  73612073  756c6220  .x values as blu
// 8c40:  69702065  736c6578  61732820  61727574  e pixels (satura
// 8c50:  6d206574  6f687465  6c632064  73706d61  te method clamps
// 8c60:  6c617620  20736575  6c616d73  2072656c   values smaller 
// 8c70:  6e616874  74203020  2030206f  20646e61  than 0 to 0 and 
// 8c80:  67676962  74207265  206e6568  6f742031  bigger then 1 to
// 8c90:  2e293120  2f2f0a0d  616e6966  6c6f436c   1)...//finalCol
// 8ca0:  3d20726f  6f6c6620  28337461  75746173  or = float3(satu
// 8cb0:  65746172  726f6e28  576c616d  2c29782e  rate(normalW.x),
// 8cc0:  202c3020  75746173  65746172  6f6e2d28   0, saturate(-no
// 8cd0:  6c616d72  29782e57  0a0d3b29  646e6523  rmalW.x));..#end
// 8ce0:  0a0d6669  2f2f0a0d  6e694620  796c6c61  if....// Finally
// 8cf0:  64646120  65687420  706c6120  63206168   add the alpha c
// 8d00:  6e6e6168  61206c65  6f20646e  75707475  hannel and outpu
// 8d10:  65687420  6c6f6320  6620726f  7420726f   the color for t
// 8d20:  70206568  6c657869  61687320  0d726564  he pixel shader.
// 8d30:  74756f0a  2e747570  6f6c6f63  203d2072  .output.color = 
// 8d40:  616f6c66  73283474  72757461  28657461  float4(saturate(
// 8d50:  616e6966  6c6f436c  2c29726f  69446720  finalColor), gDi
// 8d60:  73756666  6c6f4365  612e726f  0a0d3b29  ffuseColor.a);..
// 8d70:  65720a0d  6e727574  74756f20  3b747570  ..return output;
// 8d80:  0d7d0a0d  0d0a0d0a  202f2f0a  73696854  ..}......// This
// 8d90:  6f656720  7274656d  68732079  72656461   geometry shader
// 8da0:  71657220  73656975  61757120  48705564   requies quadUpH
// 8db0:  646e6120  61757120  67695264  20487468   and quadRightH 
// 8dc0:  62206f74  61702065  64657373  206f7420  to be passed to 
// 8dd0:  73207469  6874206f  69207461  61632074  it so that it ca
// 8de0:  7263206e  65746165  71206120  20646175  n create a quad 
// 8df0:  69666564  2064656e  74206e69  77206568  defined in the w
// 8e00:  646c726f  61707320  28206563  20646e61  orld space (and 
// 8e10:  20746f6e  65726373  73206e65  65636170  not screen space
// 8e20:  5b0a0d29  7678616d  65747265  756f6378  )..[maxvertexcou
// 8e30:  3428746e  0a0d5d29  64696f76  5f534720  nt(4)]..void GS_
// 8e40:  64616853  6f506465  43746e69  64756f6c  ShadedPointCloud
// 8e50:  696f7028  4720746e  495f4f45  6f70204e  (point GEO_IN po
// 8e60:  73746e69  2c5d315b  6f6e6920  54207475  ints[1], inout T
// 8e70:  6e616972  53656c67  61657274  45473c6d  riangleStream<GE
// 8e80:  554f5f4f  6f203e54  75707475  0a0d2974  O_OUT> output)..
// 8e90:  660a0d7b  74616f6c  6f632034  20726f6c  {..float4 color 
// 8ea0:  6f70203d  73746e69  2e5d305b  6f6c6f63  = points[0].colo
// 8eb0:  0a0d3b72  45470a0d  554f5f4f  5b762054  r;....GEO_OUT v[
// 8ec0:  0d3b5d34  2f0a0d0a  6150202f  74207373  4];....// Pass t
// 8ed0:  63206568  726f6c6f  72756620  72656874  he color further
// 8ee0:  206f7420  20656874  65786970  6873206c   to the pixel sh
// 8ef0:  72656461  5b760a0d  632e5d30  726f6c6f  ader..v[0].color
// 8f00:  63203d20  726f6c6f  760a0d3b  2e5d315b   = color;..v[1].
// 8f10:  6f6c6f63  203d2072  6f6c6f63  0a0d3b72  color = color;..
// 8f20:  5d325b76  6c6f632e  3d20726f  6c6f6320  v[2].color = col
// 8f30:  0d3b726f  335b760a  6f632e5d  20726f6c  or;..v[3].color 
// 8f40:  6f63203d  3b726f6c  0a0d0a0d  6c660a0d  = color;......fl
// 8f50:  3474616f  736f7020  20202048  20202020  oat4 posH       
// 8f60:  6f70203d  73746e69  2e5d305b  48736f70  = points[0].posH
// 8f70:  660a0d3b  74616f6c  75712034  70556461  ;..float4 quadUp
// 8f80:  20202048  70203d20  746e696f  5d305b73  H    = points[0]
// 8f90:  6175712e  48705564  660a0d3b  74616f6c  .quadUpH;..float
// 8fa0:  75712034  69526461  48746867  70203d20  4 quadRightH = p
// 8fb0:  746e696f  5d305b73  6175712e  67695264  oints[0].quadRig
// 8fc0:  3b487468  0a0d0a0d  5d305b76  736f702e  htH;....v[0].pos
// 8fd0:  203d2048  48736f70  71202d20  52646175  H = posH - quadR
// 8fe0:  74686769  202b2048  64617571  3b487055  ightH + quadUpH;
// 8ff0:  5b760a0d  702e5d31  2048736f  6f70203d  ..v[1].posH = po
// 9000:  2b204873  61757120  67695264  20487468  sH + quadRightH 
// 9010:  7571202b  70556461  0a0d3b48  5b760a0d  + quadUpH;....v[
// 9020:  702e5d32  2048736f  6f70203d  2d204873  2].posH = posH -
// 9030:  61757120  67695264  20487468  7571202d   quadRightH - qu
// 9040:  70556461  0a0d3b48  5d335b76  736f702e  adUpH;..v[3].pos
// 9050:  203d2048  48736f70  71202b20  52646175  H = posH + quadR
// 9060:  74686769  202d2048  64617571  3b487055  ightH - quadUpH;
// 9070:  0a0d0a0d  2f2f0a0d  65724320  20657461  ......// Create 
// 9080:  61697254  656c676e  69727453  73282070  TriangleStrip (s
// 9090:  74206565  20736968  6b6e696c  726f6620  ee this link for
// 90a0:  69727420  6c676e61  6f207365  6e656972   triangles orien
// 90b0:  69746174  203a6e6f  70747468  2f2f3a73  tation: https://
// 90c0:  6e64736d  63696d2e  6f736f72  632e7466  msdn.microsoft.c
// 90d0:  652f6d6f  73752d6e  62696c2f  79726172  om/en-us/library
// 90e0:  6e69772f  73776f64  7365642f  706f746b  /windows/desktop
// 90f0:  3262622f  37323630  3d762834  382e7376  /bb206274(v=vs.8
// 9100:  612e2935  29787073  756f0a0d  74757074  5).aspx)..output
// 9110:  7070412e  28646e65  5d305b76  0a0d3b29  .Append(v[0]);..
// 9120:  7074756f  412e7475  6e657070  5b762864  output.Append(v[
// 9130:  3b295d31  756f0a0d  74757074  7070412e  1]);..output.App
// 9140:  28646e65  5d325b76  0a0d3b29  7074756f  end(v[2]);..outp
// 9150:  412e7475  6e657070  5b762864  3b295d33  ut.Append(v[3]);
// 9160:  0a0d0a0d  7074756f  522e7475  61747365  ....output.Resta
// 9170:  74537472  28706972  0a0d3b29  0d0a0d7d  rtStrip();..}...
// 9180:  002f2a0a  00000007  00000000  0000006f  .*/_._______o___
// 9190:  00000070  000000de  00000001  00000000  p___.___._______
// 91a0:  00000000  00000004  00000000  00000000  ____.___________
// 91b0:  00000000  00000000  00000000  00000000  ________________
// 91c0:  00000000  00000000  00000000  00000000  ________________
// 91d0:  00000000  00000000  00000000  00000000  ________________
// 91e0:  00000000  00000000  00000000  00000000  ________________
// 91f0:  00000000  00000000  00000000  00000000  ________________
// 9200:  00000000  00000000  00000000  00000000  ________________
// 9210:  00000000  00000000  00000000  00000000  ________________
// 9220:  00000000  00000000  00000000  00000000  ________________
// 9230:  00000000  00000000  00000000  00000000  ________________
// 9240:  00000000  00000000  00000000  00000000  ________________
// 9250:  00000000  00000000  00000000  00000000  ________________
// 9260:  00000000  00000000  00000000  00000000  ________________
// 9270:  00000000  00000000  00000000  00000000  ________________
// 9280:  00000000  00000000  00000000  00000000  ________________
// 9290:  00000000  00000000  00000000  00000000  ________________
// 92a0:  00000000  00000000  00000000  00000000  ________________
// 92b0:  00000000  00000000  00000000  00000000  ________________
// 92c0:  00000000  00000000  00000000  00000000  ________________
// 92d0:  00000000  00000000  00000000  00000000  ________________
// 92e0:  53443344  00524448  0000049c  00000000  D3DSHDR_..______
// 92f0:  00000000  00000000  00000000  00000000  ________________
// 9300:  00000000  60000020  00000000  00000000  ____ __`________
// 9310:  00000000  00000000  00000000  00000000  ________________
// 9320:  00000000  00000000  00000000  00000000  ________________
// 9330:  00000000  00000000  00000000  00000000  ________________
// 9340:  00000000  00000000  00000000  00000000  ________________
// 9350:  00000000  00000000  00000000  00000000  ________________
// 9360:  00000000  00000000  00000000  00000000  ________________
// 9370:  00000000  00000000  00000000  00000000  ________________
// 9380:  00000000  00000000  00000000  00000000  ________________
// 9390:  00000000  00000000  00000000  00000000  ________________
// 93a0:  00000000  00000000  00000000  00000000  ________________
// 93b0:  00000000  00000000  00000000  00000000  ________________
// 93c0:  00000000  00000000  00000000  00000000  ________________
// 93d0:  00000000  00000000  00000000  00000000  ________________
// 93e0:  00000000  00000000  00000000  00000000  ________________
// 93f0:  00000000  00000000  00000000  00000000  ________________
// 9400:  00000000  00000000  00000000  00000000  ________________
// 9410:  00000000  00000000  00000000  00000000  ________________
// 9420:  00000000  00000000  00000000  00000000  ________________
// 9430:  00000000  00000000  00000000  00000000  ________________
// 9440:  00000000  00000000  00000000  00000000  ________________
// 9450:  00000000  00000000  00000000  00000000  ________________
// 9460:  00000000  00000000  00000000  00000000  ________________
// 9470:  00000000  00000000  00000000  00000000  ________________
// 9480:  00000000  00000000  00000000  00000000  ________________
// 9490:  00000000  00000000  00000000  00000000  ________________
// 94a0:  00000000  00000000  00000000  00000000  ________________
// 94b0:  00000000  00000000  00000000  00000000  ________________
// 94c0:  00000000  00000000  00000000  00000000  ________________
// 94d0:  00000000  00000000  00000000  00000000  ________________
// 94e0:  ffffffff  f12f091a  00000010  0000020c  ....../..___..__
// 94f0:  00000025  00000001  00000001  00000001  %___.___.___.___
// 9500:  00000000  00000000  00000000  00000000  ________________
// 9510:  00000000  00000000  00000000  01000000  _______________.
// 9520:  00000000  00000000  00000000  00000000  ________________
// 9530:  00000000  00000000  00000000  00000000  ________________
// 9540:  00000000  00000000  00000000  00000000  ________________
// 9550:  00000000  00000000  00000000  00000000  ________________
// 9560:  00000000  00000000  00000000  00000000  ________________
// 9570:  00000000  00000000  00000000  00000000  ________________
// 9580:  00000000  00000000  00000000  00000000  ________________
// 9590:  00000000  00000000  00000000  00000000  ________________
// 95a0:  00000000  00000000  00000000  00000000  ________________
// 95b0:  00000000  00000000  00000000  00000000  ________________
// 95c0:  00000000  00000000  00000000  00000000  ________________
// 95d0:  00000000  00000000  00000000  00080000  ______________._
// 95e0:  00000000  00000000  00000000  00000000  ________________
// 95f0:  00000000  00000000  00000000  00000000  ________________
// 9600:  00000000  00000000  00000000  00000000  ________________
// 9610:  00000000  00000000  00000000  00000000  ________________
// 9620:  00000000  00000000  00000000  00000000  ________________
// 9630:  00000000  00000000  00000000  00000000  ________________
// 9640:  00000000  00000000  00000000  00000000  ________________
// 9650:  00000000  00000000  00000000  00000000  ________________
// 9660:  00000000  00000000  00000000  00000000  ________________
// 9670:  00000000  00000000  00000000  00000000  ________________
// 9680:  00000000  00000000  00000000  00000000  ________________
// 9690:  00000000  00000000  00000000  00000000  ________________
// 96a0:  00000000  00000000  00000000  00000000  ________________
// 96b0:  00000000  00000000  00000000  00000000  ________________
// 96c0:  00000000  00000000  00000000  00000000  ________________
// 96d0:  00000000  00000000  00000000  00000000  ________________
// 96e0:  00000000  00000000  00000000  00000000  ________________
// 96f0:  00000000  00000000  00000000  00000000  ________________
// 9700:  00000000  00000000  0000000c  00000000  ________._______
// 9710:  00000000  00000000  00000000  00000000  ________________
// 9720:  00000000  00000000  00000000  00000000  ________________
// 9730:  00000000  00000000  00000000  00000000  ________________
// 9740:  00000000  00000000  00000000  00000000  ________________
// 9750:  00000000  00000000  00000000  00000000  ________________
// 9760:  00000000  00000000  00000000  00000000  ________________
// 9770:  00000000  00000000  00000000  00000000  ________________
// 9780:  00000000  00000000  00000000  00000000  ________________
// 9790:  00000000  00000000  00000000  00000000  ________________
// 97a0:  00000000  00000000  00000000  00000000  ________________
// 97b0:  00000000  00000000  00000000  00000000  ________________
// 97c0:  00000000  00000000  00000000  00000000  ________________
// 97d0:  00000000  00000000  00000000  00000000  ________________
// 97e0:  00000000  00000000  00000000  00000000  ________________
// 97f0:  00000000  00000000  00000000  00000000  ________________
// 9800:  00000000  00000000  00000000  00000000  ________________
// 9810:  00000000  00000000  00000000  00000000  ________________
// 9820:  00000000  00000000  00000000  00000000  ________________
// 9830:  00000000  00000000  00000000  00000000  ________________
// 9840:  00000000  00000000  00000000  00000000  ________________
// 9850:  00000000  00000000  00000000  00000000  ________________
// 9860:  00000000  00000000  00000000  00000000  ________________
// 9870:  00000000  00000000  00000000  00000000  ________________
// 9880:  00000000  00000000  00000000  00000000  ________________
// 9890:  00000000  00000000  00000000  00000000  ________________
// 98a0:  00000000  00000000  00000000  00000000  ________________
// 98b0:  00000000  00000000  00000000  00000000  ________________
// 98c0:  00000000  00000000  00000000  00000000  ________________
// 98d0:  00000000  00000000  00000000  00000000  ________________
// 98e0:  11250022  00000000  00000090  53470001  "_%.____.___._GS
// 98f0:  6168535f  50646564  746e696f  756f6c43  _ShadedPointClou
// 9900:  00000064  1151002e  0000100c  00000008  d___._Q...__.___
// 9910:  ffff0000  ffffffff  666c6168  65786950  __......halfPixe
// 9920:  7a69536c  72655065  77656956  74726f70  lSizePerViewport
// 9930:  00000000  00000000  00000000  00000000  ________________
// 9940:  00000000  00000000  00000000  00000000  ________________
// 9950:  00000000  00000000  00000000  00000000  ________________
// 9960:  00000000  00000000  00000000  00000000  ________________
// 9970:  00000000  00000000  00000000  00000000  ________________
// 9980:  00000000  00000000  00000000  00000000  ________________
// 9990:  00000000  00000000  00000000  00000000  ________________
// 99a0:  00000000  00000000  00000000  00000000  ________________
// 99b0:  00000000  00000000  00000000  00000000  ________________
// 99c0:  00000000  00000000  00000000  00000000  ________________
// 99d0:  00000000  00000000  00000000  00000000  ________________
// 99e0:  00000000  00000000  00000000  00000000  ________________
// 99f0:  00000000  00000000  00000000  00000000  ________________
// 9a00:  00000000  00000000  00000000  00000000  ________________
// 9a10:  00000000  00000000  00000000  00000000  ________________
// 9a20:  00000000  00000000  00000000  00000000  ________________
// 9a30:  00000000  00000000  00000000  00000000  ________________
// 9a40:  00000000  00000000  00000000  00000000  ________________
// 9a50:  00000000  00000000  00000000  00000000  ________________
// 9a60:  00000000  00000000  00000000  00000000  ________________
// 9a70:  00000000  00000000  00000000  00000000  ________________
// 9a80:  00000000  00000000  00000000  00000000  ________________
// 9a90:  00000000  00000000  00000000  00000000  ________________
// 9aa0:  00000000  00000000  00000000  00000000  ________________
// 9ab0:  00000000  00000000  00000000  00000000  ________________
// 9ac0:  00000000  00000000  00000000  00000000  ________________
// 9ad0:  00000000  00000000  00000000  00000000  ________________
// 9ae0:  00000010  00000000  00000000  00000000  ._______________
// 9af0:  00000000  00000000  00000000  ffffffff  ____________....
// 9b00:  f12f091a  00000000  00000000  00000000  ../.____________
// 9b10:  00000000  00000000  00000000  00000000  ________________
// 9b20:  00000000  00000000  00000000  00000000  ________________
// 9b30:  00000000  00000000  00000000  00000000  ________________
// 9b40:  00000000  00000000  00000000  00000000  ________________
// 9b50:  00000000  00000000  00000000  00000000  ________________
// 9b60:  00000000  00000000  00000000  00000000  ________________
// 9b70:  00000000  00000000  00000000  00000000  ________________
// 9b80:  00000000  00000000  00000000  00000000  ________________
// 9b90:  00000000  00000000  00000000  00000000  ________________
// 9ba0:  00000000  00000000  00000000  00000000  ________________
// 9bb0:  00000000  00000000  00000000  00000000  ________________
// 9bc0:  00000000  00000000  00000000  00000000  ________________
// 9bd0:  00000000  00000000  00000000  00000000  ________________
// 9be0:  00000000  00000000  00000000  00000000  ________________
// 9bf0:  00000000  00000000  00000000  00000000  ________________
// 9c00:  00000000  00000000  00000000  00000000  ________________
// 9c10:  00000000  00000000  00000000  00000000  ________________
// 9c20:  00000000  00000000  00000000  00000000  ________________
// 9c30:  00000000  00000000  00000000  00000000  ________________
// 9c40:  00000000  00000000  00000000  00000000  ________________
// 9c50:  00000000  00000000  00000000  00000000  ________________
// 9c60:  00000000  00000000  00000000  00000000  ________________
// 9c70:  00000000  00000000  00000000  00000000  ________________
// 9c80:  00000000  00000000  00000000  00000000  ________________
// 9c90:  00000000  00000000  00000000  00000000  ________________
// 9ca0:  00000000  00000000  00000000  00000000  ________________
// 9cb0:  00000000  00000000  00000000  00000000  ________________
// 9cc0:  00000000  00000000  00000000  00000000  ________________
// 9cd0:  00000000  00000000  00000000  00000000  ________________
// 9ce0:  01312e94  5a9944c8  00000001  b72437ec  ..1..D.Z.___.7$.
// 9cf0:  47098b7b  8fce2291  ec1f9bb4  0000009b  {..G.".......___
// 9d00:  6e694c2f  666e496b  6e2f006f  73656d61  /LinkInfo_/names
// 9d10:  72732f00  65682f63  72656461  636f6c62  _/src/headerbloc
// 9d20:  732f006b  662f6372  73656c69  5c3a642f  k_/src/files/d:\
// 9d30:  5c667077  7020796d  656a6f72  5c737463  wpf\my projects\
// 9d40:  64336261  3362615c  78642e64  69676e65  ab3d\ab3d.dxengi
// 9d50:  615c656e  2e643362  6e657864  656e6967  ne\ab3d.dxengine
// 9d60:  6670772e  6d61732e  73656c70  7365725c  .wpf.samples\res
// 9d70:  6372756f  735c7365  65646168  735c7372  ources\shaders\s
// 9d80:  65646168  696f7064  6c63746e  7364756f  hadedpointclouds
// 9d90:  65646168  6c682e72  04006c73  06000000  hader.hlsl_.___.
// 9da0:  01000000  3a000000  00000000  11000000  ___.___:_______.
// 9db0:  07000000  0a000000  06000000  00000000  ___.___.___.____
// 9dc0:  05000000  22000000  08000000  00000000  ___.___"___.____
// 9dd0:  dc000000  00013351  00000000  00000000  ___.Q3._________
// 9de0:  00000000  00000000  00000000  00000000  ________________
// 9df0:  00000000  00000000  00000000  00000000  ________________
// 9e00:  00000000  00000000  00000000  00000000  ________________
// 9e10:  00000000  00000000  00000000  00000000  ________________
// 9e20:  00000000  00000000  00000000  00000000  ________________
// 9e30:  00000000  00000000  00000000  00000000  ________________
// 9e40:  00000000  00000000  00000000  00000000  ________________
// 9e50:  00000000  00000000  00000000  00000000  ________________
// 9e60:  00000000  00000000  00000000  00000000  ________________
// 9e70:  00000000  00000000  00000000  00000000  ________________
// 9e80:  00000000  00000000  00000000  00000000  ________________
// 9e90:  00000000  00000000  00000000  00000000  ________________
// 9ea0:  00000000  00000000  00000000  00000000  ________________
// 9eb0:  00000000  00000000  00000000  00000000  ________________
// 9ec0:  00000000  00000000  00000000  00000000  ________________
// 9ed0:  00000000  00000000  00000000  00000000  ________________
// 9ee0:  ffffffff  01310977  00000001  8c0a000d  ....w.1..___._..
// 9ef0:  9cb4000e  000b000f  0000005c  00000020  ._..._._\___ ___
// 9f00:  0000002c  0000007c  00000000  00000000  ,___|___________
// 9f10:  00000016  00000019  00000000  00000000  .___.___________
// 9f20:  00000000  00000001  00000000  0000049c  ____._______..__
// 9f30:  60000020  00000000  00000000  00000000   __`____________
// 9f40:  00090002  000003e8  00000000  000004cc  ._._..______..__
// 9f50:  004b0001  00000000  00000000  00000000  ._K_____________
// 9f60:  535f5347  65646168  696f5064  6c43746e  GS_ShadedPointCl
// 9f70:  0064756f  656e6f6e  00000000  f12eba2d  oud_none____-...
// 9f80:  00000001  00000000  0000049c  60000020  ._______..__ __`
// 9f90:  00000000  00000000  00000000  00020002  ____________._._
// 9fa0:  00000007  00010000  ffffffff  00000000  ._____._....____
// 9fb0:  0000049c  00000208  00000000  ffffffff  ..__..______....
// 9fc0:  00000000  ffffffff  00010001  00010000  ____....._.___._
// 9fd0:  00000000  575c3a44  6d5c6670  72702079  ____D:\Wpf\my pr
// 9fe0:  63656a6f  415c7374  5c643362  64336241  ojects\Ab3d\Ab3d
// 9ff0:  4558442e  6e69676e  62415c65  442e6433  .DXEngine\Ab3d.D
// a000:  676e4558  2e656e69  2e667057  706d6153  XEngine.Wpf.Samp
// a010:  5c73656c  6f736552  65637275  68535c73  les\Resources\Sh
// a020:  72656461  68535c73  64656461  6e696f50  aders\ShadedPoin
// a030:  6f6c4374  68536475  72656461  736c682e  tCloudShader.hls
// a040:  0000006c  effeeffe  00000001  00000001  l___.....___.___
// a050:  00000100  00000000  00000000  ffffff00  _.___________...
// a060:  ffffffff  0cffffff  ffffff00  ffffffff  ........_.......
// a070:  00ffffff  00000000  00000000  00000000  ..._____________
// a080:  00000000  00000000  00000000  00000000  ________________
// a090:  00000000  00000000  00000000  00000000  ________________
// a0a0:  00000000  00000000  00000000  00000000  ________________
// a0b0:  00000000  00000000  00000000  00000000  ________________
// a0c0:  00000000  00000000  00000000  00000000  ________________
// a0d0:  00000000  00000000  00000000  00000000  ________________
// a0e0:  00000010  00000020  000000f7  00000148  .___ ___.___H.__
// a0f0:  00000193  00000038  00000000  000036c8  ..__8_______.6__
// a100:  00000080  000035b9  000008c0  0000003c  .___.5__..__<___
// a110:  00000000  00000028  0000022c  0000002c  ____(___,.__,___
// a120:  00000054  00000003  0000004b  0000002a  T___.___K___*___
// a130:  0000004c  0000002b  00000023  00000006  L___+___#___.___
// a140:  0000002c  0000002d  0000002e  0000002f  ,___-___.___/___
// a150:  00000030  00000031  00000032  00000033  0___1___2___3___
// a160:  00000034  00000035  00000036  00000037  4___5___6___7___
// a170:  00000038  00000039  0000003a  0000003b  8___9___:___;___
// a180:  0000003c  0000003d  0000003e  0000003f  <___=___>___?___
// a190:  00000040  00000041  00000042  00000043  @___A___B___C___
// a1a0:  00000044  00000045  00000024  00000008  D___E___$___.___
// a1b0:  00000009  0000000a  0000000b  0000000c  .___.___.___.___
// a1c0:  0000000d  0000000e  0000000f  00000010  .___.___.___.___
// a1d0:  00000011  00000012  00000013  00000014  .___.___.___.___
// a1e0:  00000015  00000016  00000017  00000018  .___.___.___.___
// a1f0:  00000019  0000001a  0000001b  0000001c  .___.___.___.___
// a200:  0000001d  0000001e  0000001f  00000020  .___.___.___ ___
// a210:  00000021  00000022  00000025  00000026  !___"___%___&___
// a220:  00000027  00000028  00000029  00000007  '___(___)___.___
// a230:  00000046  00000047  00000048  0000004a  F___G___H___J___
// a240:  00000049  00000000  00000000  00000000  I_______________
// a250:  00000000  00000000  00000000  00000000  ________________
// a260:  00000000  00000000  00000000  00000000  ________________
// a270:  00000000  00000000  00000000  00000000  ________________
// a280:  00000000  00000000  00000000  00000000  ________________
// a290:  00000000  00000000  00000000  00000000  ________________
// a2a0:  00000000  00000000  00000000  00000000  ________________
// a2b0:  00000000  00000000  00000000  00000000  ________________
// a2c0:  00000000  00000000  00000000  00000000  ________________
// a2d0:  00000000  00000000  00000000  00000000  ________________
// a2e0:  0000004d  00000000  00000000  00000000  M_______________
// a2f0:  00000000  00000000  00000000  00000000  ________________
// a300:  00000000  00000000  00000000  00000000  ________________
// a310:  00000000  00000000  00000000  00000000  ________________
// a320:  00000000  00000000  00000000  00000000  ________________
// a330:  00000000  00000000  00000000  00000000  ________________
// a340:  00000000  00000000  00000000  00000000  ________________
// a350:  00000000  00000000  00000000  00000000  ________________
// a360:  00000000  00000000  00000000  00000000  ________________
// a370:  00000000  00000000  00000000  00000000  ________________
// a380:  00000000  00000000  00000000  00000000  ________________
// a390:  00000000  00000000  00000000  00000000  ________________
// a3a0:  00000000  00000000  00000000  00000000  ________________
// a3b0:  00000000  00000000  00000000  00000000  ________________
// a3c0:  00000000  00000000  00000000  00000000  ________________
// a3d0:  00000000  00000000  00000000  00000000  ________________
// a3e0:  00000000  00000000  00000000  00000000  ________________
// a3f0:  00000000  00000000  00000000  00000000  ________________
// a400:  00000000  00000000  00000000  00000000  ________________
// a410:  00000000  00000000  00000000  00000000  ________________
// a420:  00000000  00000000  00000000  00000000  ________________
// a430:  00000000  00000000  00000000  00000000  ________________
// a440:  00000000  00000000  00000000  00000000  ________________
// a450:  00000000  00000000  00000000  00000000  ________________
// a460:  00000000  00000000  00000000  00000000  ________________
// a470:  00000000  00000000  00000000  00000000  ________________
// a480:  00000000  00000000  00000000  00000000  ________________
// a490:  00000000  00000000  00000000  00000000  ________________
// a4a0:  00000000  00000000  00000000  00000000  ________________
// a4b0:  00000000  00000000  00000000  00000000  ________________
// a4c0:  00000000  00000000  00000000  00000000  ________________
// a4d0:  00000000  00000000  00000000  00000000  ________________
