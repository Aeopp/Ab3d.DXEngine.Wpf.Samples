<Page x:Class="Ab3d.DXEngine.Wpf.Samples.DXEngineVisuals.PlanarShadowsCustomization"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:cameras="clr-namespace:Ab3d.Cameras;assembly=Ab3d.PowerToys"
      xmlns:ab3d="clr-namespace:Ab3d.Controls;assembly=Ab3d.PowerToys"  
      xmlns:visuals="clr-namespace:Ab3d.Visuals;assembly=Ab3d.PowerToys"
      xmlns:dxControls="clr-namespace:Ab3d.DirectX.Controls;assembly=Ab3d.DXEngine.Wpf"
      xmlns:controls="clr-namespace:Ab3d.DXEngine.Wpf.Samples.Controls"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PlanarShadows">

    <Grid>
        <Border Name="ViewportBorder">

            <dxControls:DXViewportView Name="MainDXViewportView" PresentationType="DirectXImage" BackgroundColor="Transparent">

                <Viewport3D Name="MainViewport">

                    <ModelVisual3D x:Name="ShadowPlanePlaceholder" />

                    <ModelVisual3D>
                        <ModelVisual3D.Content>
                            <Model3DGroup x:Name="LightsModel3DGroup" />
                        </ModelVisual3D.Content>
                    </ModelVisual3D>

                </Viewport3D>

            </dxControls:DXViewportView>

        </Border>

        <cameras:TargetPositionCamera Name="Camera1" Heading="15" Attitude="-20" Bank="0" Distance="800" TargetPosition="15 10 0"
                                      ShowCameraLight="Never"
                                      TargetViewport3D="{Binding ElementName=MainViewport}"/>

        <!-- EventsSourceElement is set to ViewportBorder - this means that the ViewportBorder's mouse events are subscribed to - this enables camera rotation without the need to be over the rendered 3D element -->
        <ab3d:MouseCameraController Name="MouseCameraController1"
                                    RotateCameraConditions="LeftMouseButtonPressed"
                                    MoveCameraConditions="LeftMouseButtonPressed, ControlKey"
                                    ShowRotationCenterMarker="True"
                                    EventsSourceElement="{Binding ElementName=ViewportBorder}"
                                    TargetCamera="{Binding ElementName=Camera1}"/>

        <TextBlock FontWeight="Bold" FontSize="20" Foreground="#333" Margin="10" VerticalAlignment="Top" HorizontalAlignment="Left" 
                   Text="Planar shadows customization"/>

        <Border BorderBrush="Black" BorderThickness="2" Background="#88FFFFFF" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="5">
            <StackPanel Orientation="Vertical" Margin="10">

                <TextBlock Text="Light type:" FontWeight="Bold" FontSize="13" Margin="0 0 0 0"/>
                <RadioButton Name="DirectionalLightRadioButton" Content="DirectionalLight" IsChecked="True" GroupName="LightTypeGroupName" Checked="DirectionalLightRadioButton_OnChecked" />
                <RadioButton Name="PointLightRadioButton" Content="PointLight" GroupName="LightTypeGroupName" Checked="PointLightRadioButton_OnChecked" />
                <RadioButton Name="SpotLightRadioButton" Content="SpotLight (not possible)" GroupName="LightTypeGroupName" IsEnabled="False" Foreground="DimGray" />

                <TextBlock Text="Settings:" FontWeight="Bold" FontSize="13" Margin="0 10 0 0"/>

                <TextBlock Name="ShadowTransparencyTextBlock" Margin="5 5 0 0" Text="{Binding ElementName=ShadowTransparencySlider, Path=Value, StringFormat={}ShadowTransparency: {0:0}%}"/>
                <Slider Name="ShadowTransparencySlider"
                        Minimum="0" Maximum="100" Value="65" 
                        TickFrequency="5" TickPlacement="BottomRight" SmallChange="1" LargeChange="10"
                        ValueChanged="ShadowTransparencySlider_OnValueChanged"/>

                <StackPanel Orientation="Horizontal" Margin="0 10 0 0">
                    <CheckBox Name="CustomShadowLightCheckBox" Content="Use custom shadow light" IsChecked="False"
                              Checked="OnCustomShadowLightCheckBoxCheckedChanged" Unchecked="OnCustomShadowLightCheckBoxCheckedChanged" />
                    <controls:InfoControl x:Name="CustomShadowLightInfoControl" ShowDuration="600000" Margin="5 0 0 0"
                                          InfoText="Set a custom light (LightDirection == down) that does not illuminate the scene to be the shadow light"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                    <CheckBox Name="ShowSimplifiedShadowCheckBox" Content="Show simplified shadow" IsChecked="False"
                              Checked="OnShowSimplifiedShadowCheckBoxCheckedChanged" Unchecked="OnShowSimplifiedShadowCheckBoxCheckedChanged" />
                    <controls:InfoControl x:Name="ShowSimplifiedShadowInfoControl" ShowDuration="600000" InfoWidth="400" Margin="5 0 0 0"
                                          InfoText="Create shadow from a different 3D model (when the main scene is very complex then a simplified version of the scene can be rendered as shadow to improve performance)"/>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                    <CheckBox Name="IsCheckingIsCastingShadowCheckBox" Content="IsCheckingIsCastingShadow" IsChecked="False"
                              Checked="OnIsCheckingIsCastingShadowCheckBoxChanged" Unchecked="OnIsCheckingIsCastingShadowCheckBoxChanged" />
                    <controls:InfoControl x:Name="IsCheckingIsCastingShadowInfoControl" ShowDuration="600000" InfoWidth="400" Margin="5 0 0 0"
                                          InfoText="This CheckBox sets the PlanarShadowRenderingProvider.IsCheckingIsCastingShadow property. When this property is true, then when rendering shadow each object is checked if it has the IsCastingShadow property set to true - in our case the Teapot has this set to false, so when the CheckBox is checked the Teapot does not cast shadow. See code comments in LoadModel3D method for more info."/>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                    <CheckBox Name="CustomPlaneCheckBox" Content="Draw custom plane (WireGrid)" IsChecked="False"
                              Checked="OnCustomPlaneCheckBoxChanged" Unchecked="OnCustomPlaneCheckBoxChanged" />
                    <controls:InfoControl x:Name="CustomPlaneCheckBoxInfoControl" ShowDuration="600000" InfoWidth="400" Margin="5 0 0 0"
                                          InfoText="When this CheckBox is checked then instead of using PlanarShadowRenderingProvider to render shadow plane, we render a WireGrid instead."/>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                    <CheckBox Name="ClipToBoundsCheckBox" Content="Clip shadow to plane bounds" IsChecked="True"
                              Checked="OnClipToBoundsCheckBoxChanged" Unchecked="OnClipToBoundsCheckBoxChanged" />
                    <controls:InfoControl x:Name="ClipToBoundsCheckBoxInfoControl" ShowDuration="600000" InfoWidth="400" Margin="5 0 0 0"
                                          InfoText="When this CheckBox is checked then the shadow is clipped to the plane's bounds (this is fully hardware accelerated with using a stencil buffer)"/>
                </StackPanel>

                <TextBlock Text="Manual light control:" FontWeight="Bold" FontSize="13" Margin="0 15 0 0"/>
                <TextBlock Text="Arrow keys: Rotate light&#x0a;Page Up / Down: Light distance" FontSize="13"/>

                <Button Name="ChangeModelButton" Content="Change model [Enter]" Margin="0 10 0 0" Click="ChangeModelButton_OnClick" />

            </StackPanel>
        </Border>

    </Grid>
</Page>
