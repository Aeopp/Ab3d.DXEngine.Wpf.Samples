<Page x:Class="Ab3d.DXEngine.Wpf.Samples.DXEngineVisuals.SpecialLineRendering"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"       
      xmlns:cameras="clr-namespace:Ab3d.Cameras;assembly=Ab3d.PowerToys"
      xmlns:ab3d="clr-namespace:Ab3d.Controls;assembly=Ab3d.PowerToys"  
      xmlns:visuals="clr-namespace:Ab3d.Visuals;assembly=Ab3d.PowerToys"
      xmlns:dxControls="clr-namespace:Ab3d.DirectX.Controls;assembly=Ab3d.DXEngine.Wpf"
      Title="AllModelsSample"
      mc:Ignorable="d" 
      d:DesignHeight="400" d:DesignWidth="600">
    <Grid Name="MainGrid">
        <Border Name="ViewportBorder">
            <Border.Background>
                <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                    <GradientStop Offset="0" Color="#033C62"/>
                    <GradientStop Offset="1" Color="#01131F"/>
                </LinearGradientBrush>
            </Border.Background>

            <dxControls:DXViewportView Name="MainDXViewportView" PresentationType="DirectXImage" BackgroundColor="Transparent">

                <Viewport3D Name="MainViewport">
                    <visuals:BoxVisual3D CenterPosition="0 -2.5 -10" Size="100 4 180" Material="Green" />

                    <ModelVisual3D x:Name="TestObjectsModelVisual3D" />
                </Viewport3D>

            </dxControls:DXViewportView>

        </Border>

        <cameras:TargetPositionCamera Name="Camera1" Heading="60" Attitude="-20" Bank="0" Distance="240" TargetPosition="15 10 0"
                                      ShowCameraLight="Always"
                                      TargetViewport3D="{Binding ElementName=MainViewport}"/>

        <!-- EventsSourceElement is set to MainGrid - this means that the MainGrid's mouse events are subscribed to - this enables camera rotation without the need to be over the rendered 3D element -->
        <ab3d:MouseCameraController Name="MouseCameraController1"
                                    RotateCameraConditions="LeftMouseButtonPressed"
                                    MoveCameraConditions="LeftMouseButtonPressed, ControlKey"
                                    EventsSourceElement="{Binding ElementName=ViewportBorder}"
                                    TargetCamera="{Binding ElementName=Camera1}"/>

        <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" BorderBrush="Black" BorderThickness="2" Background="#77000000" Margin="5">
            <StackPanel Orientation="Vertical" Margin="10">
                <StackPanel.LayoutTransform>
                    <ScaleTransform ScaleX="1.3" ScaleY="1.3" />
                </StackPanel.LayoutTransform>
                
                <TextBlock Text="Line rendering type:" Foreground="Silver" Margin="0 0 0 5" />
                
                <RadioButton Name="StandardLinesRadioButton" Content="Standard (visible) lines" Foreground="Silver" GroupName="LineTypes" Checked="LineTypesRadioButtonChanged"
                             ToolTip="Render 3D lines without any special settings - only visible line parts will be shown."/>
                
                <RadioButton Name="OnlyHiddenLinesRadioButton" Content="Only hidden lines" Foreground="Silver" GroupName="LineTypes" Checked="LineTypesRadioButtonChanged"
                             ToolTip="Render 3D lines with using HiddenLineMaterial material - only line parts that are behind 3D objects (hidden) will be shown."/>
                
                <RadioButton Name="StandardAndHiddenLinesRadioButton" Content="Visible and hidden lines" IsChecked="True" Foreground="Silver" GroupName="LineTypes" Checked="LineTypesRadioButtonChanged"
                             ToolTip="Render 3D lines with standard and hidden line material to show thick visible lines and thin hidden lines."/>
                
                <RadioButton Name="AlwaysVisibleLines1RadioButton" Content="Always visible lines (1)" Foreground="Silver" GroupName="LineTypes" Checked="LineTypesRadioButtonChanged"
                             ToolTip="Render 3D lines that are visible through other 3D objects. The (1) method uses SetDXAttribute to set ReadZBuffer to false."/>
                
                <RadioButton Name="AlwaysVisibleLines2RadioButton" Content="Always visible lines (2)" Foreground="Silver" GroupName="LineTypes" Checked="LineTypesRadioButtonChanged"
                             ToolTip="Render 3D lines that are visible through other 3D objects. The (2) method changes the ReadZBuffer property on the LineMaterial (shows advanced way to change material properties)."/>

            </StackPanel>
        </Border>

        <TextBlock FontWeight="Bold" FontSize="20" Foreground="Silver" TextWrapping="Wrap"
                   Margin="10" VerticalAlignment="Top" HorizontalAlignment="Left"
                   Text="Special 3D lines rendering: showing thin hidden lines and lines visible through 3D objects"/>
    </Grid>
</Page>
